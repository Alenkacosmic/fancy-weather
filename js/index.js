/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/js";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/scripts.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@mapbox/fusspot/lib/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@mapbox/fusspot/lib/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Validators are functions which assert certain type.\n * They can return a string which can then be used\n * to display a helpful error message.\n * They can also return a function for a custom error message.\n */\n\nvar isPlainObject = __webpack_require__(/*! is-plain-obj */ \"./node_modules/is-plain-obj/index.js\");\n\nvar xtend = __webpack_require__(/*! xtend */ \"./node_modules/xtend/immutable.js\");\n\nvar DEFAULT_ERROR_PATH = 'value';\nvar NEWLINE_INDENT = '\\n  ';\nvar v = {};\n/**\n * Runners\n *\n * Take root validators and run assertion\n */\n\nv.assert = function (rootValidator, options) {\n  options = options || {};\n  return function (value) {\n    var message = validate(rootValidator, value); // all good\n\n    if (!message) {\n      return;\n    }\n\n    var errorMessage = processMessage(message, options);\n\n    if (options.apiName) {\n      errorMessage = options.apiName + ': ' + errorMessage;\n    }\n\n    throw new Error(errorMessage);\n  };\n};\n/**\n * Higher Order Validators\n *\n * validators which take other validators as input\n * and output a new validator\n */\n\n\nv.shape = function shape(validatorObj) {\n  var validators = objectEntries(validatorObj);\n  return function shapeValidator(value) {\n    var validationResult = validate(v.plainObject, value);\n\n    if (validationResult) {\n      return validationResult;\n    }\n\n    var key, validator;\n    var errorMessages = [];\n\n    for (var i = 0; i < validators.length; i++) {\n      key = validators[i].key;\n      validator = validators[i].value;\n      validationResult = validate(validator, value[key]);\n\n      if (validationResult) {\n        // return [key].concat(validationResult);\n        errorMessages.push([key].concat(validationResult));\n      }\n    }\n\n    if (errorMessages.length < 2) {\n      return errorMessages[0];\n    } // enumerate all the error messages\n\n\n    return function (options) {\n      errorMessages = errorMessages.map(function (message) {\n        var key = message[0];\n        var renderedMessage = processMessage(message, options).split('\\n').join(NEWLINE_INDENT); // indents any inner nesting\n\n        return '- ' + key + ': ' + renderedMessage;\n      });\n      var objectId = options.path.join('.');\n      var ofPhrase = objectId === DEFAULT_ERROR_PATH ? '' : ' of ' + objectId;\n      return 'The following properties' + ofPhrase + ' have invalid values:' + NEWLINE_INDENT + errorMessages.join(NEWLINE_INDENT);\n    };\n  };\n};\n\nv.strictShape = function strictShape(validatorObj) {\n  var shapeValidator = v.shape(validatorObj);\n  return function strictShapeValidator(value) {\n    var shapeResult = shapeValidator(value);\n\n    if (shapeResult) {\n      return shapeResult;\n    }\n\n    var invalidKeys = Object.keys(value).reduce(function (memo, valueKey) {\n      if (validatorObj[valueKey] === undefined) {\n        memo.push(valueKey);\n      }\n\n      return memo;\n    }, []);\n\n    if (invalidKeys.length !== 0) {\n      return function () {\n        return 'The following keys are invalid: ' + invalidKeys.join(', ');\n      };\n    }\n  };\n};\n\nv.arrayOf = function arrayOf(validator) {\n  return createArrayValidator(validator);\n};\n\nv.tuple = function tuple() {\n  var validators = Array.isArray(arguments[0]) ? arguments[0] : Array.prototype.slice.call(arguments);\n  return createArrayValidator(validators);\n}; // Currently array validation fails when the first invalid item is found.\n\n\nfunction createArrayValidator(validators) {\n  var validatingTuple = Array.isArray(validators);\n\n  var getValidator = function (index) {\n    if (validatingTuple) {\n      return validators[index];\n    }\n\n    return validators;\n  };\n\n  return function arrayValidator(value) {\n    var validationResult = validate(v.plainArray, value);\n\n    if (validationResult) {\n      return validationResult;\n    }\n\n    if (validatingTuple && value.length !== validators.length) {\n      return 'an array with ' + validators.length + ' items';\n    }\n\n    for (var i = 0; i < value.length; i++) {\n      validationResult = validate(getValidator(i), value[i]);\n\n      if (validationResult) {\n        return [i].concat(validationResult);\n      }\n    }\n  };\n}\n\nv.required = function required(validator) {\n  function requiredValidator(value) {\n    if (value == null) {\n      return function (options) {\n        return formatErrorMessage(options, isArrayCulprit(options.path) ? 'cannot be undefined/null.' : 'is required.');\n      };\n    }\n\n    return validator.apply(this, arguments);\n  }\n\n  requiredValidator.__required = true;\n  return requiredValidator;\n};\n\nv.oneOfType = function oneOfType() {\n  var validators = Array.isArray(arguments[0]) ? arguments[0] : Array.prototype.slice.call(arguments);\n  return function oneOfTypeValidator(value) {\n    var messages = validators.map(function (validator) {\n      return validate(validator, value);\n    }).filter(Boolean); // If we don't have as many messages as no. of validators,\n    // then at least one validator was ok with the value.\n\n    if (messages.length !== validators.length) {\n      return;\n    } // check primitive type\n\n\n    if (messages.every(function (message) {\n      return message.length === 1 && typeof message[0] === 'string';\n    })) {\n      return orList(messages.map(function (m) {\n        return m[0];\n      }));\n    } // Complex oneOfTypes like\n    // `v.oneOftypes(v.shape({name: v.string})`, `v.shape({name: v.number}))`\n    // are complex ¯\\_(ツ)_/¯. For the current scope only returning the longest message.\n\n\n    return messages.reduce(function (max, arr) {\n      return arr.length > max.length ? arr : max;\n    });\n  };\n};\n/**\n * Meta Validators\n * which take options as argument (not validators)\n * and return a new primitive validator\n */\n\n\nv.equal = function equal(compareWith) {\n  return function equalValidator(value) {\n    if (value !== compareWith) {\n      return JSON.stringify(compareWith);\n    }\n  };\n};\n\nv.oneOf = function oneOf() {\n  var options = Array.isArray(arguments[0]) ? arguments[0] : Array.prototype.slice.call(arguments);\n  var validators = options.map(function (value) {\n    return v.equal(value);\n  });\n  return v.oneOfType.apply(this, validators);\n};\n\nv.range = function range(compareWith) {\n  var min = compareWith[0];\n  var max = compareWith[1];\n  return function rangeValidator(value) {\n    var validationResult = validate(v.number, value);\n\n    if (validationResult || value < min || value > max) {\n      return 'number between ' + min + ' & ' + max + ' (inclusive)';\n    }\n  };\n};\n/**\n * Primitive validators\n *\n * simple validators which return a string or undefined\n */\n\n\nv.any = function any() {\n  return;\n};\n\nv.boolean = function boolean(value) {\n  if (typeof value !== 'boolean') {\n    return 'boolean';\n  }\n};\n\nv.number = function number(value) {\n  if (typeof value !== 'number') {\n    return 'number';\n  }\n};\n\nv.plainArray = function plainArray(value) {\n  if (!Array.isArray(value)) {\n    return 'array';\n  }\n};\n\nv.plainObject = function plainObject(value) {\n  if (!isPlainObject(value)) {\n    return 'object';\n  }\n};\n\nv.string = function string(value) {\n  if (typeof value !== 'string') {\n    return 'string';\n  }\n};\n\nv.func = function func(value) {\n  if (typeof value !== 'function') {\n    return 'function';\n  }\n};\n\nfunction validate(validator, value) {\n  // assertions are optional by default unless wrapped in v.require\n  if (value == null && !validator.hasOwnProperty('__required')) {\n    return;\n  }\n\n  var result = validator(value);\n\n  if (result) {\n    return Array.isArray(result) ? result : [result];\n  }\n}\n\nfunction processMessage(message, options) {\n  // message array follows the convention\n  // [...path, result]\n  // path is an array of object keys / array indices\n  // result is output of the validator\n  var len = message.length;\n  var result = message[len - 1];\n  var path = message.slice(0, len - 1);\n\n  if (path.length === 0) {\n    path = [DEFAULT_ERROR_PATH];\n  }\n\n  options = xtend(options, {\n    path: path\n  });\n  return typeof result === 'function' ? result(options) // allows customization of result\n  : formatErrorMessage(options, prettifyResult(result));\n}\n\nfunction orList(list) {\n  if (list.length < 2) {\n    return list[0];\n  }\n\n  if (list.length === 2) {\n    return list.join(' or ');\n  }\n\n  return list.slice(0, -1).join(', ') + ', or ' + list.slice(-1);\n}\n\nfunction prettifyResult(result) {\n  return 'must be ' + addArticle(result) + '.';\n}\n\nfunction addArticle(nounPhrase) {\n  if (/^an? /.test(nounPhrase)) {\n    return nounPhrase;\n  }\n\n  if (/^[aeiou]/i.test(nounPhrase)) {\n    return 'an ' + nounPhrase;\n  }\n\n  if (/^[a-z]/i.test(nounPhrase)) {\n    return 'a ' + nounPhrase;\n  }\n\n  return nounPhrase;\n}\n\nfunction formatErrorMessage(options, prettyResult) {\n  var arrayCulprit = isArrayCulprit(options.path);\n  var output = options.path.join('.') + ' ' + prettyResult;\n  var prepend = arrayCulprit ? 'Item at position ' : '';\n  return prepend + output;\n}\n\nfunction isArrayCulprit(path) {\n  return typeof path[path.length - 1] == 'number' || typeof path[0] == 'number';\n}\n\nfunction objectEntries(obj) {\n  return Object.keys(obj || {}).map(function (key) {\n    return {\n      key: key,\n      value: obj[key]\n    };\n  });\n}\n\nv.validate = validate;\nv.processMessage = processMessage;\nmodule.exports = v;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/fusspot/lib/index.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/lib/events.js":
/*!***************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/lib/events.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar nanoid = __webpack_require__(/*! nanoid */ \"./node_modules/nanoid/index.browser.js\");\n/**\n * Construct a new mapbox event client to send interaction events to the mapbox event service\n * @param {Object} options options with which to create the service\n * @param {String} options.accessToken the mapbox access token to make requests\n * @param {Number} [options.flushInterval=1000] the number of ms after which to flush the event queue\n * @param {Number} [options.maxQueueSize=100] the number of events to queue before flushing\n * @private\n */\n\n\nfunction MapboxEventManager(options) {\n  this.origin = options.origin || 'https://api.mapbox.com';\n  this.endpoint = 'events/v2';\n  this.access_token = options.accessToken;\n  this.version = '0.2.0';\n  this.sessionID = this.generateSessionID();\n  this.userAgent = this.getUserAgent();\n  this.options = options;\n  this.send = this.send.bind(this); // parse global options to be sent with each request\n\n  this.countries = options.countries ? options.countries.split(\",\") : null;\n  this.types = options.types ? options.types.split(\",\") : null;\n  this.bbox = options.bbox ? options.bbox : null;\n  this.language = options.language ? options.language.split(\",\") : null;\n  this.limit = options.limit ? +options.limit : null;\n  this.locale = navigator.language || null;\n  this.enableEventLogging = this.shouldEnableLogging(options);\n  this.eventQueue = new Array();\n  this.flushInterval = options.flushInterval || 1000;\n  this.maxQueueSize = options.maxQueueSize || 100;\n  this.timer = this.flushInterval ? setTimeout(this.flush.bind(this), this.flushInterval) : null; // keep some state to deduplicate requests if necessary\n\n  this.lastSentInput = \"\";\n  this.lastSentIndex = 0;\n}\n\nMapboxEventManager.prototype = {\n  /**\n     * Send a search.select event to the mapbox events service\n     * This event marks the array index of the item selected by the user out of the array of possible options\n     * @private\n     * @param {Object} selected the geojson feature selected by the user\n     * @param {Object} geocoder a mapbox-gl-geocoder instance\n     * @returns {Promise}\n     */\n  select: function (selected, geocoder) {\n    var resultIndex = this.getSelectedIndex(selected, geocoder);\n    var payload = this.getEventPayload('search.select', geocoder);\n    payload.resultIndex = resultIndex;\n    payload.resultPlaceName = selected.place_name;\n    payload.resultId = selected.id;\n\n    if (resultIndex === this.lastSentIndex && payload.queryString === this.lastSentInput || resultIndex == -1) {\n      // don't log duplicate events if the user re-selected the same feature on the same search\n      return;\n    }\n\n    this.lastSentIndex = resultIndex;\n    this.lastSentInput = payload.queryString;\n    if (!payload.queryString) return; // will be rejected\n\n    return this.push(payload);\n  },\n\n  /**\n     * Send a search-start event to the mapbox events service\n     * This turnstile event marks when a user starts a new search\n     * @private\n     * @param {Object} geocoder a mapbox-gl-geocoder instance\n     * @returns {Promise}\n     */\n  start: function (geocoder) {\n    var payload = this.getEventPayload('search.start', geocoder);\n    if (!payload.queryString) return; // will be rejected\n\n    return this.push(payload);\n  },\n\n  /**\n   * Send a search-keyevent event to the mapbox events service\n   * This event records each keypress in sequence\n   * @private\n   * @param {Object} keyEvent the keydown event to log\n   * @param {Obeject} geocoder a mapbox-gl-geocoder instance\n   * \n   */\n  keyevent: function (keyEvent, geocoder) {\n    //pass invalid event\n    if (!keyEvent.key) return; // don't send events for keys that don't change the input\n    // TAB, ESC, LEFT, RIGHT, ENTER, UP, DOWN\n\n    if (keyEvent.metaKey || [9, 27, 37, 39, 13, 38, 40].indexOf(keyEvent.keyCode) !== -1) return;\n    var payload = this.getEventPayload('search.keystroke', geocoder);\n    payload.lastAction = keyEvent.key;\n    if (!payload.queryString) return; // will be rejected\n\n    return this.push(payload);\n  },\n\n  /**\n   * Send an event to the events service\n   *\n   * The event is skipped if the instance is not enabled to send logging events\n   *\n   * @private\n   * @param {Object} payload the http POST body of the event\n   * @param {Function} [callback] a callback function to invoke when the send has completed\n   * @returns {Promise}\n   */\n  send: function (payload, callback) {\n    if (!this.enableEventLogging) {\n      if (callback) return callback();\n      return;\n    }\n\n    var options = this.getRequestOptions(payload);\n    this.request(options, function (err) {\n      if (err) return this.handleError(err, callback);\n\n      if (callback) {\n        return callback();\n      }\n    }.bind(this));\n  },\n\n  /**\n   * Get http request options\n   * @private\n   * @param {*} payload\n   */\n  getRequestOptions: function (payload) {\n    if (!Array.isArray(payload)) payload = [payload];\n    var options = {\n      // events must be sent with POST\n      method: \"POST\",\n      host: this.origin,\n      path: this.endpoint + \"?access_token=\" + this.access_token,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload) //events are arrays\n\n    };\n    return options;\n  },\n\n  /**\n   * Get the event payload to send to the events service\n   * Most payload properties are shared across all events\n   * @private\n   * @param {String} event the name of the event to send to the events service. Valid options are 'search.start', 'search.select', 'search.feedback'.\n   * @param {Object} geocoder a mapbox-gl-geocoder instance\n   * @returns {Object} an event payload\n   */\n  getEventPayload: function (event, geocoder) {\n    var proximity;\n    if (!geocoder.options.proximity) proximity = null;else proximity = [geocoder.options.proximity.longitude, geocoder.options.proximity.latitude];\n    var zoom = geocoder._map ? geocoder._map.getZoom() : undefined;\n    var payload = {\n      event: event,\n      created: +new Date(),\n      sessionIdentifier: this.sessionID,\n      country: this.countries,\n      userAgent: this.userAgent,\n      language: this.language,\n      bbox: this.bbox,\n      types: this.types,\n      endpoint: 'mapbox.places',\n      // fuzzyMatch: search.fuzzy, //todo  --> add to plugin\n      proximity: proximity,\n      limit: geocoder.options.limit,\n      // routing: search.routing, //todo --> add to plugin\n      mapZoom: zoom,\n      keyboardLocale: this.locale\n    }; // get the text in the search bar\n\n    if (event === \"search.select\") {\n      payload.queryString = geocoder.inputString;\n    } else if (event != \"search.select\" && geocoder._inputEl) {\n      payload.queryString = geocoder._inputEl.value;\n    } else {\n      payload.queryString = geocoder.inputString;\n    }\n\n    return payload;\n  },\n\n  /**\n   * Wraps the request function for easier testing\n   * Make an http request and invoke a callback\n   * @private\n   * @param {Object} opts options describing the http request to be made\n   * @param {Function} callback the callback to invoke when the http request is completed\n   */\n  request: function (opts, callback) {\n    var xhttp = new XMLHttpRequest();\n\n    xhttp.onreadystatechange = function () {\n      if (this.readyState == 4) {\n        if (this.status == 204) {\n          //success\n          return callback(null);\n        } else {\n          return callback(this.statusText);\n        }\n      }\n    };\n\n    xhttp.open(opts.method, opts.host + '/' + opts.path, true);\n\n    for (var header in opts.headers) {\n      var headerValue = opts.headers[header];\n      xhttp.setRequestHeader(header, headerValue);\n    }\n\n    xhttp.send(opts.body);\n  },\n\n  /**\n   * Handle an error that occurred while making a request\n   * @param {Object} err an error instance to log\n   * @private\n   */\n  handleError: function (err, callback) {\n    if (callback) return callback(err);\n  },\n\n  /**\n   * Generate a session ID to be returned with all of the searches made by this geocoder instance\n   * ID is random and cannot be tracked across sessions\n   * @private\n   */\n  generateSessionID: function () {\n    return nanoid();\n  },\n\n  /**\n   * Get a user agent string to send with the request to the events service\n   * @private\n   */\n  getUserAgent: function () {\n    return 'mapbox-gl-geocoder.' + this.version + \".\" + navigator.userAgent;\n  },\n\n  /**\n     * Get the 0-based numeric index of the item that the user selected out of the list of options\n     * @private\n     * @param {Object} selected the geojson feature selected by the user\n     * @param {Object} geocoder a Mapbox-GL-Geocoder instance\n     * @returns {Number} the index of the selected result\n     */\n  getSelectedIndex: function (selected, geocoder) {\n    if (!geocoder._typeahead) return;\n    var results = geocoder._typeahead.data;\n    var selectedID = selected.id;\n    var resultIDs = results.map(function (feature) {\n      return feature.id;\n    });\n    var selectedIdx = resultIDs.indexOf(selectedID);\n    return selectedIdx;\n  },\n\n  /**\n     * Check whether events should be logged\n     * Clients using a localGeocoder or an origin other than mapbox should not have events logged\n     * @private\n     */\n  shouldEnableLogging: function (options) {\n    if (options.enableEventLogging === false) return false;\n    if (options.origin && options.origin.indexOf('api.mapbox.com') == -1) return false; // hard to make sense of events when a local instance is suplementing results from origin\n\n    if (options.localGeocoder) return false; // hard to make sense of events when a custom filter is in use\n\n    if (options.filter) return false;\n    return true;\n  },\n\n  /**\n   * Flush out the event queue by sending events to the events service\n   * @private\n   */\n  flush: function () {\n    if (this.eventQueue.length > 0) {\n      this.send(this.eventQueue);\n      this.eventQueue = new Array();\n    } // //reset the timer\n\n\n    if (this.timer) clearTimeout(this.timer);\n    if (this.flushInterval) this.timer = setTimeout(this.flush.bind(this), this.flushInterval);\n  },\n\n  /**\n   * Push event into the pending queue\n   * @param {Object} evt the event to send to the events service\n   * @param {Boolean} forceFlush indicates that the event queue should be flushed after adding this event regardless of size of the queue\n   * @private\n   */\n  push: function (evt, forceFlush) {\n    this.eventQueue.push(evt);\n\n    if (this.eventQueue.length >= this.maxQueueSize || forceFlush) {\n      this.flush();\n    }\n  },\n\n  /**\n   * Flush any remaining events from the queue before it is removed\n   * @private\n   */\n  remove: function () {\n    this.flush();\n  }\n};\nmodule.exports = MapboxEventManager;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-gl-geocoder/lib/events.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/lib/exceptions.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/lib/exceptions.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  'fr': {\n    'name': 'France',\n    'bbox': [[-4.59235, 41.380007], [9.560016, 51.148506]]\n  },\n  'us': {\n    'name': 'United States',\n    'bbox': [[-171.791111, 18.91619], [-66.96466, 71.357764]]\n  },\n  'ru': {\n    'name': 'Russia',\n    'bbox': [[19.66064, 41.151416], [190.10042, 81.2504]]\n  },\n  'ca': {\n    'name': 'Canada',\n    'bbox': [[-140.99778, 41.675105], [-52.648099, 83.23324]]\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtZ2wtZ2VvY29kZXIvbGliL2V4Y2VwdGlvbnMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtZ2wtZ2VvY29kZXIvbGliL2V4Y2VwdGlvbnMuanM/NGFjNiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgJ2ZyJzoge1xuICAgICduYW1lJzogJ0ZyYW5jZScsXG4gICAgJ2Jib3gnOiBbWy00LjU5MjM1LCA0MS4zODAwMDddLCBbOS41NjAwMTYsIDUxLjE0ODUwNl1dXG4gIH0sXG4gICd1cyc6IHtcbiAgICAnbmFtZSc6ICdVbml0ZWQgU3RhdGVzJyxcbiAgICAnYmJveCc6IFtbLTE3MS43OTExMTEsIDE4LjkxNjE5XSwgWy02Ni45NjQ2NiwgNzEuMzU3NzY0XV1cbiAgfSxcbiAgJ3J1Jzoge1xuICAgICduYW1lJzogJ1J1c3NpYScsXG4gICAgJ2Jib3gnOiBbWzE5LjY2MDY0LCA0MS4xNTE0MTZdLCBbMTkwLjEwMDQyLCA4MS4yNTA0XV1cbiAgfSxcbiAgJ2NhJzoge1xuICAgICduYW1lJzogJ0NhbmFkYScsXG4gICAgJ2Jib3gnOiBbWy0xNDAuOTk3NzgsIDQxLjY3NTEwNV0sIFstNTIuNjQ4MDk5LCA4My4yMzMyNF1dXG4gIH1cbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBRkE7QUFiQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-gl-geocoder/lib/exceptions.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Typeahead = __webpack_require__(/*! suggestions */ \"./node_modules/suggestions/index.js\");\n\nvar debounce = __webpack_require__(/*! lodash.debounce */ \"./node_modules/lodash.debounce/index.js\");\n\nvar extend = __webpack_require__(/*! xtend */ \"./node_modules/xtend/immutable.js\");\n\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n\nvar exceptions = __webpack_require__(/*! ./exceptions */ \"./node_modules/@mapbox/mapbox-gl-geocoder/lib/exceptions.js\");\n\nvar MapboxClient = __webpack_require__(/*! @mapbox/mapbox-sdk */ \"./node_modules/@mapbox/mapbox-sdk/index.js\");\n\nvar mbxGeocoder = __webpack_require__(/*! @mapbox/mapbox-sdk/services/geocoding */ \"./node_modules/@mapbox/mapbox-sdk/services/geocoding.js\");\n\nvar MapboxEventManager = __webpack_require__(/*! ./events */ \"./node_modules/@mapbox/mapbox-gl-geocoder/lib/events.js\");\n\nvar localization = __webpack_require__(/*! ./localization */ \"./node_modules/@mapbox/mapbox-gl-geocoder/lib/localization.js\");\n\nvar subtag = __webpack_require__(/*! subtag */ \"./node_modules/subtag/subtag.js\");\n/**\n * A geocoder component using Mapbox Geocoding API\n * @class MapboxGeocoder\n * @param {Object} options\n * @param {String} options.accessToken Required.\n * @param {String} options.origin Use to set a custom API origin. Defaults to https://api.mapbox.com.\n * @param {Object} [options.mapboxgl] A [mapbox-gl](https://github.com/mapbox/mapbox-gl-js) instance to use when creating [Markers](https://docs.mapbox.com/mapbox-gl-js/api/#marker). Required if `options.marker` is true.\n * @param {Number} [options.zoom=16] On geocoded result what zoom level should the map animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.\n * @param {Boolean|Object} [options.flyTo] If false, animating the map to a selected result is disabled. If true, animating the map will use the default animation parameters. If an object, the object will be passed to the map method to specify a custom animation when a result is selected.\n * @param {String} [options.placeholder=\"Search\"] Override the default placeholder attribute value.\n * @param {Object} [options.proximity] a proximity argument: this is\n * a geographical point given as an object with latitude and longitude\n * properties. Search results closer to this point will be given\n * higher priority.\n * @param {Boolean} [options.trackProximity=true] If true, the geocoder proximity will automatically update based on the map view.\n * @param {Boolean} [options.collapsed=false] If true, the geocoder control will collapse until hovered or in focus.\n * @param {Boolean} [options.clearAndBlurOnEsc=false] If true, the geocoder control will clear it's contents and blur when user presses the escape key.\n * @param {Boolean} [options.clearOnBlur=false] If true, the geocoder control will clear its value when the input blurs.\n * @param {Array} [options.bbox] a bounding box argument: this is\n * a bounding box given as an array in the format [minX, minY, maxX, maxY].\n * Search results will be limited to the bounding box.\n * @param {string} [options.countries] a comma separated list of country codes to\n * limit results to specified country or countries.\n * @param {string} [options.types] a comma seperated list of types that filter\n * results to match those specified. See https://docs.mapbox.com/api/search/#data-types\n * for available types.\n * If reverseGeocode is enabled, you should specify one type. If you configure more than one type, the first type will be used.\n * @param {Number} [options.minLength=2] Minimum number of characters to enter before results are shown.\n * @param {Number} [options.limit=5] Maximum number of results to show.\n * @param {string} [options.language] Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas.\n * @param {Function} [options.filter] A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.\n * @param {Function} [options.localGeocoder] A function accepting the query string which performs local geocoding to supplement results from the Mapbox Geocoding API. Expected to return an Array of GeoJSON Features in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format.\n * @param {'distance'|'score'} [options.reverseMode='distance'] - Set the factors that are used to sort nearby results.\n * @param {boolean} [options.reverseGeocode] Enable reverse geocoding. Defaults to false. Expects coordinates to be lat, lon.\n * @param {Boolean} [options.enableEventLogging=true] Allow Mapbox to collect anonymous usage statistics from the plugin\n * @param {Boolean|Object} [options.marker=true]  If `true`, a [Marker](https://docs.mapbox.com/mapbox-gl-js/api/#marker) will be added to the map at the location of the user-selected result using a default set of Marker options.  If the value is an object, the marker will be constructed using these options. If `false`, no marker will be added to the map. Requires that `options.mapboxgl` also be set.\n * @param {Function} [options.render] A function that specifies how the results should be rendered in the dropdown menu. Accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object  as input and return a string. Any html in the returned string will be rendered.\n * @param {Function} [options.getItemValue] A function that specifies how the selected result should be rendered in the search bar. This function should accept a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object  as input and return a string. HTML tags in the output string will not be rendered.\n * @param {String} [options.mode='mapbox.places'] A string specifying the geocoding [endpoint](https://docs.mapbox.com/api/search/#endpoints) to query. Options are `mapbox.places` and `mapbox.places-permanent`. The `mapbox.places-permanent` mode requires an enterprise license for permanent geocodes. \n * @param {Boolean} [options.localGeocoderOnly] If `true`, indicates that the localGeocoder results should be the only ones returned to the user. If `false`, indicates that the localGeocoder results should be combined with those from the Mapbox API. \n * @example\n * var geocoder = new MapboxGeocoder({ accessToken: mapboxgl.accessToken });\n * map.addControl(geocoder);\n * @return {MapboxGeocoder} `this`\n *\n */\n\n\nfunction MapboxGeocoder(options) {\n  this._eventEmitter = new EventEmitter();\n  this.options = extend({}, this.options, options);\n  this.inputString = '';\n  this.fresh = true;\n  this.lastSelected = null;\n}\n\nMapboxGeocoder.prototype = {\n  options: {\n    zoom: 16,\n    flyTo: true,\n    trackProximity: true,\n    minLength: 2,\n    reverseGeocode: false,\n    limit: 5,\n    origin: 'https://api.mapbox.com',\n    enableEventLogging: true,\n    marker: true,\n    mapboxgl: null,\n    collapsed: false,\n    clearAndBlurOnEsc: false,\n    clearOnBlur: false,\n    getItemValue: function (item) {\n      return item.place_name;\n    },\n    render: function (item) {\n      var placeName = item.place_name.split(',');\n      return '<div class=\"mapboxgl-ctrl-geocoder--suggestion\"><div class=\"mapboxgl-ctrl-geocoder--suggestion-title\">' + placeName[0] + '</div><div class=\"mapboxgl-ctrl-geocoder--suggestion-address\">' + placeName.splice(1, placeName.length).join(',') + '</div></div>';\n    }\n  },\n\n  /**\n   * Add the geocoder to a container. The container can be either a mapboxgl.Map or a reference to an HTML class or ID. \n   * \n   * If the container is a mapboxgl.Map, this function will behave identically to Map.addControl(geocoder)\n   * If the container is an html id or class, the geocoder will be appended to that element\n   * \n   * This function will throw an error if the container is not one a map or a class/id reference\n   * It will also throw an error if the referenced html element cannot be found in the document.body\n   * @param {String|mapboxgl.Map} container A reference to the container to which to add the geocoder \n   */\n  addTo: function (container) {\n    // if the container is a map, add the control like normal\n    if (container._controlContainer) {\n      //  it's a mapbox-gl map, add like normal \n      container.addControl(this);\n    } // if the container is not a map, but an html element, then add the control to that element\n    else if (typeof container == 'string' && (container.startsWith('#') || container.startsWith('.'))) {\n        const parent = document.querySelectorAll(container);\n\n        if (parent.length == 0) {\n          throw new Error(\"Element \", container, \"not found.\");\n        }\n\n        if (parent.length > 1) {\n          throw new Error(\"Geocoder can only be added to a single html element\");\n        }\n\n        parent.forEach(function (parentEl) {\n          const el = this.onAdd(); //returns the input elements, which are then added to the requested html container\n\n          parentEl.appendChild(el);\n        }.bind(this));\n      } else {\n        throw new Error(\"Error: addTo Container must be a mapbox-gl-js map or a html element reference\");\n      }\n  },\n  onAdd: function (map) {\n    if (map && typeof map != 'string') {\n      this._map = map;\n    }\n\n    this.setLanguage();\n\n    if (!this.options.localGeocoderOnly) {\n      this.geocoderService = mbxGeocoder(MapboxClient({\n        accessToken: this.options.accessToken,\n        origin: this.options.origin\n      }));\n    }\n\n    if (this.options.localGeocoderOnly && !this.options.localGeocoder) {\n      throw new Error(\"A localGeocoder function must be specified to use localGeocoderOnly mode\");\n    }\n\n    this.eventManager = new MapboxEventManager(this.options);\n    this._onChange = this._onChange.bind(this);\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._onPaste = this._onPaste.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n    this._showButton = this._showButton.bind(this);\n    this._hideButton = this._hideButton.bind(this);\n    this._onQueryResult = this._onQueryResult.bind(this);\n    this.clear = this.clear.bind(this);\n    this._updateProximity = this._updateProximity.bind(this);\n    this._collapse = this._collapse.bind(this);\n    this._unCollapse = this._unCollapse.bind(this);\n    this._clear = this._clear.bind(this);\n    this._clearOnBlur = this._clearOnBlur.bind(this);\n    var el = this.container = document.createElement('div');\n    el.className = 'mapboxgl-ctrl-geocoder mapboxgl-ctrl';\n    var searchIcon = this.createIcon('search', '<path d=\"M7.4 2.5c-2.7 0-4.9 2.2-4.9 4.9s2.2 4.9 4.9 4.9c1 0 1.8-.2 2.5-.8l3.7 3.7c.2.2.4.3.8.3.7 0 1.1-.4 1.1-1.1 0-.3-.1-.5-.3-.8L11.4 10c.4-.8.8-1.6.8-2.5.1-2.8-2.1-5-4.8-5zm0 1.6c1.8 0 3.2 1.4 3.2 3.2s-1.4 3.2-3.2 3.2-3.3-1.3-3.3-3.1 1.4-3.3 3.3-3.3z\"/>');\n    this._inputEl = document.createElement('input');\n    this._inputEl.type = 'text';\n    this._inputEl.className = 'mapboxgl-ctrl-geocoder--input';\n    this.setPlaceholder();\n\n    if (this.options.collapsed) {\n      this._collapse();\n\n      this.container.addEventListener('mouseenter', this._unCollapse);\n      this.container.addEventListener('mouseleave', this._collapse);\n\n      this._inputEl.addEventListener('focus', this._unCollapse);\n    }\n\n    if (this.options.collapsed || this.options.clearOnBlur) {\n      this._inputEl.addEventListener('blur', this._onBlur);\n    }\n\n    this._inputEl.addEventListener('keydown', debounce(this._onKeyDown, 200));\n\n    this._inputEl.addEventListener('paste', this._onPaste);\n\n    this._inputEl.addEventListener('change', this._onChange);\n\n    this.container.addEventListener('mouseenter', this._showButton);\n    this.container.addEventListener('mouseleave', this._hideButton);\n\n    this._inputEl.addEventListener('keyup', function (e) {\n      this.eventManager.keyevent(e, this);\n    }.bind(this));\n\n    var actions = document.createElement('div');\n    actions.classList.add('mapboxgl-ctrl-geocoder--pin-right');\n    this._clearEl = document.createElement('button');\n\n    this._clearEl.setAttribute('aria-label', 'Clear');\n\n    this._clearEl.addEventListener('click', this.clear);\n\n    this._clearEl.className = 'mapboxgl-ctrl-geocoder--button';\n    var buttonIcon = this.createIcon('close', '<path d=\"M3.8 2.5c-.6 0-1.3.7-1.3 1.3 0 .3.2.7.5.8L7.2 9 3 13.2c-.3.3-.5.7-.5 1 0 .6.7 1.3 1.3 1.3.3 0 .7-.2 1-.5L9 10.8l4.2 4.2c.2.3.7.3 1 .3.6 0 1.3-.7 1.3-1.3 0-.3-.2-.7-.3-1l-4.4-4L15 4.6c.3-.2.5-.5.5-.8 0-.7-.7-1.3-1.3-1.3-.3 0-.7.2-1 .3L9 7.1 4.8 2.8c-.3-.1-.7-.3-1-.3z\"/>');\n\n    this._clearEl.appendChild(buttonIcon);\n\n    this._loadingEl = this.createIcon('loading', '<path fill=\"#333\" d=\"M4.4 4.4l.8.8c2.1-2.1 5.5-2.1 7.6 0l.8-.8c-2.5-2.5-6.7-2.5-9.2 0z\"/><path opacity=\".1\" d=\"M12.8 12.9c-2.1 2.1-5.5 2.1-7.6 0-2.1-2.1-2.1-5.5 0-7.7l-.8-.8c-2.5 2.5-2.5 6.7 0 9.2s6.6 2.5 9.2 0 2.5-6.6 0-9.2l-.8.8c2.2 2.1 2.2 5.6 0 7.7z\"/>');\n    actions.appendChild(this._clearEl);\n    actions.appendChild(this._loadingEl);\n    el.appendChild(searchIcon);\n    el.appendChild(this._inputEl);\n    el.appendChild(actions);\n    this._typeahead = new Typeahead(this._inputEl, [], {\n      filter: false,\n      minLength: this.options.minLength,\n      limit: this.options.limit\n    });\n    this.setRenderFunction(this.options.render);\n    this._typeahead.getItemValue = this.options.getItemValue;\n    this.mapMarker = null;\n    this._handleMarker = this._handleMarker.bind(this);\n\n    if (this._map) {\n      if (this.options.trackProximity) {\n        this._updateProximity();\n\n        this._map.on('moveend', this._updateProximity);\n      }\n\n      this._mapboxgl = this.options.mapboxgl;\n\n      if (!this._mapboxgl && this.options.marker) {\n        // eslint-disable-next-line no-console\n        console.error(\"No mapboxgl detected in options. Map markers are disabled. Please set options.mapboxgl.\");\n        this.options.marker = false;\n      }\n    }\n\n    return el;\n  },\n  createIcon: function (name, path) {\n    var icon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    icon.setAttribute('class', 'mapboxgl-ctrl-geocoder--icon mapboxgl-ctrl-geocoder--icon-' + name);\n    icon.setAttribute('viewBox', '0 0 18 18');\n    icon.setAttribute('xml:space', 'preserve');\n    icon.setAttribute('width', 18);\n    icon.setAttribute('height', 18);\n    icon.innerHTML = path;\n    return icon;\n  },\n  onRemove: function () {\n    this.container.parentNode.removeChild(this.container);\n\n    if (this.options.trackProximity && this._map) {\n      this._map.off('moveend', this._updateProximity);\n    }\n\n    this._removeMarker();\n\n    this._map = null;\n    return this;\n  },\n  _onPaste: function (e) {\n    var value = (e.clipboardData || window.clipboardData).getData('text');\n\n    if (value.length >= this.options.minLength) {\n      this._geocode(value);\n    }\n  },\n  _onKeyDown: function (e) {\n    var ESC_KEY_CODE = 27,\n        TAB_KEY_CODE = 9;\n\n    if (e.keyCode === ESC_KEY_CODE && this.options.clearAndBlurOnEsc) {\n      this._clear(e);\n\n      return this._inputEl.blur();\n    } // if target has shadowRoot, then get the actual active element inside the shadowRoot\n\n\n    var target = e.target && e.target.shadowRoot ? e.target.shadowRoot.activeElement : e.target;\n    var value = target ? target.value : '';\n    this.lastSelected = null;\n\n    if (!value) {\n      this.fresh = true; // the user has removed all the text\n\n      if (e.keyCode !== TAB_KEY_CODE) this.clear(e);\n      return this._clearEl.style.display = 'none';\n    } // TAB, ESC, LEFT, RIGHT, ENTER, UP, DOWN\n\n\n    if (e.metaKey || [TAB_KEY_CODE, ESC_KEY_CODE, 37, 39, 13, 38, 40].indexOf(e.keyCode) !== -1) return;\n\n    if (target.value.length >= this.options.minLength) {\n      this._geocode(target.value);\n    }\n  },\n  _showButton: function () {\n    if (this._typeahead.selected) this._clearEl.style.display = 'block';\n  },\n  _hideButton: function () {\n    if (this._typeahead.selected) this._clearEl.style.display = 'none';\n  },\n  _onBlur: function (e) {\n    if (this.options.clearOnBlur) {\n      this._clearOnBlur(e);\n    }\n\n    if (this.options.collapsed) {\n      this._collapse();\n    }\n  },\n  _onChange: function () {\n    var selected = this._typeahead.selected;\n\n    if (selected && JSON.stringify(selected) !== this.lastSelected) {\n      this._clearEl.style.display = 'none';\n\n      if (this.options.flyTo) {\n        var flyOptions;\n\n        if (selected.properties && !exceptions[selected.properties.short_code] && selected.bbox) {\n          var bbox = selected.bbox;\n          flyOptions = extend({}, this.options.flyTo);\n\n          if (this._map) {\n            this._map.fitBounds([[bbox[0], bbox[1]], [bbox[2], bbox[3]]], flyOptions);\n          }\n        } else if (selected.properties && exceptions[selected.properties.short_code]) {\n          // Certain geocoder search results return (and therefore zoom to fit)\n          // an unexpectedly large bounding box: for example, both Russia and the\n          // USA span both sides of -180/180, or France includes the island of\n          // Reunion in the Indian Ocean. An incomplete list of these exceptions\n          // at ./exceptions.json provides \"reasonable\" bounding boxes as a\n          // short-term solution; this may be amended as necessary.\n          flyOptions = extend({}, this.options.flyTo);\n\n          if (this._map) {\n            this._map.fitBounds(exceptions[selected.properties.short_code].bbox, flyOptions);\n          }\n        } else {\n          var defaultFlyOptions = {\n            zoom: this.options.zoom\n          };\n          flyOptions = extend({}, defaultFlyOptions, this.options.flyTo); //  ensure that center is not overriden by custom options\n\n          flyOptions.center = selected.center;\n\n          if (this._map) {\n            this._map.flyTo(flyOptions);\n          }\n        }\n      }\n\n      if (this.options.marker && this._mapboxgl) {\n        this._handleMarker(selected);\n      } // After selecting a feature, re-focus the textarea and set\n      // cursor at start.\n\n\n      this._inputEl.focus();\n\n      this._inputEl.scrollLeft = 0;\n\n      this._inputEl.setSelectionRange(0, 0);\n\n      this.lastSelected = JSON.stringify(selected);\n\n      this._eventEmitter.emit('result', {\n        result: selected\n      });\n\n      this.eventManager.select(selected, this);\n    }\n  },\n  _geocode: function (searchInput) {\n    this._loadingEl.style.display = 'block';\n\n    this._eventEmitter.emit('loading', {\n      query: searchInput\n    });\n\n    this.inputString = searchInput; // Possible config proprerties to pass to client\n\n    var keys = ['bbox', 'limit', 'proximity', 'countries', 'types', 'language', 'reverseMode', 'mode'];\n    var self = this; // Create config object\n\n    var config = keys.reduce(function (config, key) {\n      if (self.options[key]) {\n        // countries, types, and language need to be passed in as arrays to client\n        // https://github.com/mapbox/mapbox-sdk-js/blob/master/services/geocoding.js#L38-L47\n        ['countries', 'types', 'language'].indexOf(key) > -1 ? config[key] = self.options[key].split(/[\\s,]+/) : config[key] = self.options[key];\n\n        if (key === 'proximity' && self.options[key] && self.options[key].longitude && self.options[key].latitude) {\n          config[key] = [self.options[key].longitude, self.options[key].latitude];\n        }\n      }\n\n      return config;\n    }, {});\n    var request;\n\n    if (this.options.localGeocoderOnly) {\n      request = Promise.resolve();\n    } // check if searchInput resembles coordinates, and if it does,\n    // make the request a reverseGeocode\n    else if (this.options.reverseGeocode && /(-?\\d+\\.?\\d*)[, ]+(-?\\d+\\.?\\d*)[ ]*$/.test(searchInput)) {\n        // parse coordinates\n        var coords = searchInput.split(/[\\s(,)?]+/).map(function (c) {\n          return parseFloat(c, 10);\n        }).reverse(); // client only accepts one type for reverseGeocode, so\n        // use first config type if one, if not default to poi\n\n        config.types ? [config.types[0]] : [\"poi\"];\n        config = extend(config, {\n          query: coords,\n          limit: 1\n        });\n        request = this.geocoderService.reverseGeocode(config).send();\n      } else {\n        config = extend(config, {\n          query: searchInput\n        });\n        request = this.geocoderService.forwardGeocode(config).send();\n      }\n\n    var localGeocoderRes = [];\n\n    if (this.options.localGeocoder) {\n      localGeocoderRes = this.options.localGeocoder(searchInput);\n\n      if (!localGeocoderRes) {\n        localGeocoderRes = [];\n      }\n    }\n\n    request.then(function (response) {\n      this._loadingEl.style.display = 'none';\n      var res = {};\n\n      if (!response) {\n        res = {\n          type: 'FeatureCollection',\n          features: []\n        };\n      } else if (response.statusCode == '200') {\n        res = response.body;\n        res.request = response.request;\n        res.headers = response.headers;\n      }\n\n      res.config = config;\n\n      if (this.fresh) {\n        this.eventManager.start(this);\n        this.fresh = false;\n      } // supplement Mapbox Geocoding API results with locally populated results\n\n\n      res.features = res.features ? localGeocoderRes.concat(res.features) : localGeocoderRes; // apply results filter if provided\n\n      if (this.options.filter && res.features.length) {\n        res.features = res.features.filter(this.options.filter);\n      }\n\n      if (res.features.length) {\n        this._clearEl.style.display = 'block';\n\n        this._eventEmitter.emit('results', res);\n\n        this._typeahead.update(res.features);\n      } else {\n        this._clearEl.style.display = 'none';\n        this._typeahead.selected = null;\n\n        this._renderNoResults();\n\n        this._eventEmitter.emit('results', res);\n      }\n    }.bind(this));\n    request.catch(function (err) {\n      this._loadingEl.style.display = 'none'; // in the event of an error in the Mapbox Geocoding API still display results from the localGeocoder\n\n      if (localGeocoderRes.length && this.options.localGeocoder) {\n        this._clearEl.style.display = 'block';\n\n        this._typeahead.update(localGeocoderRes);\n      } else {\n        this._clearEl.style.display = 'none';\n        this._typeahead.selected = null;\n\n        this._renderError();\n      }\n\n      this._eventEmitter.emit('results', {\n        features: localGeocoderRes\n      });\n\n      this._eventEmitter.emit('error', {\n        error: err\n      });\n    }.bind(this));\n    return request;\n  },\n\n  /**\n   * Shared logic for clearing input\n   * @param {Event} [ev] the event that triggered the clear, if available\n   * @private\n   *\n   */\n  _clear: function (ev) {\n    if (ev) ev.preventDefault();\n    this._inputEl.value = '';\n    this._typeahead.selected = null;\n\n    this._typeahead.clear();\n\n    this._onChange();\n\n    this._clearEl.style.display = 'none';\n\n    this._removeMarker();\n\n    this.lastSelected = null;\n\n    this._eventEmitter.emit('clear');\n\n    this.fresh = true;\n  },\n\n  /**\n   * Clear and then focus the input.\n   * @param {Event} [ev] the event that triggered the clear, if available\n   *\n   */\n  clear: function (ev) {\n    this._clear(ev);\n\n    this._inputEl.focus();\n  },\n\n  /**\n   * Clear the input, without refocusing it. Used to implement clearOnBlur\n   * constructor option.\n   * @param {Event} [ev] the blur event\n   * @private\n   */\n  _clearOnBlur: function (ev) {\n    var ctx = this;\n    /**\n    * If relatedTarget is not found, assume user targeted the suggestions list.\n    * In that case, do not clear on blur. There are other edge cases where\n    * ev.relatedTarget could be null. Clicking on list always results in null\n    * relatedtarget because of upstream behavior in `suggestions`.\n    *\n    * The ideal solution would be to check if ev.relatedTarget is a child of\n    * the list. See issue #258 for details on why we can't do that yet.\n    */\n\n    if (ev.relatedTarget) {\n      ctx._clear(ev);\n    }\n  },\n  _onQueryResult: function (response) {\n    var results = response.body;\n    if (!results.features.length) return;\n    var result = results.features[0];\n    this._typeahead.selected = result;\n    this._inputEl.value = result.place_name;\n\n    this._onChange();\n  },\n  _updateProximity: function () {\n    // proximity is designed for local scale, if the user is looking at the whole world,\n    // it doesn't make sense to factor in the arbitrary centre of the map\n    if (!this._map) {\n      return;\n    }\n\n    if (this._map.getZoom() > 9) {\n      var center = this._map.getCenter().wrap();\n\n      this.setProximity({\n        longitude: center.lng,\n        latitude: center.lat\n      });\n    } else {\n      this.setProximity(null);\n    }\n  },\n  _collapse: function () {\n    // do not collapse if input is in focus\n    if (!this._inputEl.value && this._inputEl !== document.activeElement) this.container.classList.add('mapboxgl-ctrl-geocoder--collapsed');\n  },\n  _unCollapse: function () {\n    this.container.classList.remove('mapboxgl-ctrl-geocoder--collapsed');\n  },\n\n  /**\n   * Set & query the input\n   * @param {string} searchInput location name or other search input\n   * @returns {MapboxGeocoder} this\n   */\n  query: function (searchInput) {\n    this._geocode(searchInput).then(this._onQueryResult);\n\n    return this;\n  },\n  _renderError: function () {\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error'>There was an error reaching the server</div>\";\n\n    this._renderMessage(errorMessage);\n  },\n  _renderNoResults: function () {\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error mapbox-gl-geocoder--no-results'>No results found</div>\";\n\n    this._renderMessage(errorMessage);\n  },\n  _renderMessage: function (msg) {\n    this._typeahead.update([]);\n\n    this._typeahead.selected = null;\n\n    this._typeahead.clear();\n\n    this._typeahead.renderError(msg);\n  },\n\n  /**\n   * Get the text to use as the search bar placeholder\n   *\n   * If placeholder is provided in options, then use options.placeholder\n   * Otherwise, if language is provided in options, then use the localized string of the first language if available\n   * Otherwise use the default\n   *\n   * @returns {String} the value to use as the search bar placeholder\n   * @private\n   */\n  _getPlaceholderText: function () {\n    if (this.options.placeholder) return this.options.placeholder;\n\n    if (this.options.language) {\n      var firstLanguage = this.options.language.split(\",\")[0];\n      var language = subtag.language(firstLanguage);\n      var localizedValue = localization.placeholder[language];\n      if (localizedValue) return localizedValue;\n    }\n\n    return 'Search';\n  },\n\n  /**\n   * Set input\n   * @param {string} searchInput location name or other search input\n   * @returns {MapboxGeocoder} this\n   */\n  setInput: function (searchInput) {\n    // Set input value to passed value and clear everything else.\n    this._inputEl.value = searchInput;\n    this._typeahead.selected = null;\n\n    this._typeahead.clear();\n\n    this._onChange();\n\n    return this;\n  },\n\n  /**\n   * Set proximity\n   * @param {Object} proximity The new options.proximity value. This is a geographical point given as an object with latitude and longitude properties.\n   * @returns {MapboxGeocoder} this\n   */\n  setProximity: function (proximity) {\n    this.options.proximity = proximity;\n    return this;\n  },\n\n  /**\n   * Get proximity\n   * @returns {Object} The geocoder proximity\n   */\n  getProximity: function () {\n    return this.options.proximity;\n  },\n\n  /**\n   * Set the render function used in the results dropdown\n   * @param {Function} fn The function to use as a render function. This function accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and returns a string.\n   * @returns {MapboxGeocoder} this\n   */\n  setRenderFunction: function (fn) {\n    if (fn && typeof fn == \"function\") {\n      this._typeahead.render = fn;\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the function used to render the results dropdown\n   *\n   * @returns {Function} the render function\n   */\n  getRenderFunction: function () {\n    return this._typeahead.render;\n  },\n\n  /**\n   * Get the language to use in UI elements and when making search requests\n   *\n   * Look first at the explicitly set options otherwise use the browser's language settings\n   * @param {String} language Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas.\n   * @returns {MapboxGeocoder} this\n   */\n  setLanguage: function (language) {\n    var browserLocale = navigator.language || navigator.userLanguage || navigator.browserLanguage;\n    this.options.language = language || this.options.language || browserLocale;\n    return this;\n  },\n\n  /**\n   * Get the language to use in UI elements and when making search requests\n   * @returns {String} The language(s) used by the plugin, if any\n   */\n  getLanguage: function () {\n    return this.options.language;\n  },\n\n  /**\n   * Get the zoom level the map will move to when there is no bounding box on the selected result\n   * @returns {Number} the map zoom\n   */\n  getZoom: function () {\n    return this.options.zoom;\n  },\n\n  /**\n   * Set the zoom level\n   * @param {Number} zoom The zoom level that the map should animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.\n   * @returns {MapboxGeocoder} this\n   */\n  setZoom: function (zoom) {\n    this.options.zoom = zoom;\n    return this;\n  },\n\n  /**\n   * Get the parameters used to fly to the selected response, if any\n   * @returns {MapboxGeocoder} this\n   */\n  getFlyTo: function () {\n    return this.options.flyTo;\n  },\n\n  /**\n   * Set the flyTo options\n   * @param {Object|Boolean} flyTo  If false, animating the map to a selected result is disabled. If true, animating the map will use the default animation parameters. If an object, the object will be passed to the flyTo map method to specify a custom animation.\n   */\n  setFlyTo: function (flyTo) {\n    this.options.flyTo = flyTo;\n    return this;\n  },\n\n  /**\n   * Get the value of the placeholder string\n   * @returns {String} The input element's placeholder value\n   */\n  getPlaceholder: function () {\n    return this.options.placeholder;\n  },\n\n  /**\n   * Set the value of the input element's placeholder\n   * @param {String} placeholder the text to use as the input element's placeholder\n   * @returns {MapboxGeocoder} this\n   */\n  setPlaceholder: function (placeholder) {\n    this.placeholder = placeholder ? placeholder : this._getPlaceholderText();\n    this._inputEl.placeholder = this.placeholder;\n    return this;\n  },\n\n  /**\n   * Get the bounding box used by the plugin\n   * @returns {Array<Number>} the bounding box, if any\n   */\n  getBbox: function () {\n    return this.options.bbox;\n  },\n\n  /**\n   * Set the bounding box to limit search results to\n   * @param {Array<Number>} bbox a bounding box given as an array in the format [minX, minY, maxX, maxY].\n   * @returns {MapboxGeocoder} this\n   */\n  setBbox: function (bbox) {\n    this.options.bbox = bbox;\n    return this;\n  },\n\n  /**\n   * Get a list of the countries to limit search results to\n   * @returns {String} a comma separated list of countries to limit to, if any\n   */\n  getCountries: function () {\n    return this.options.countries;\n  },\n\n  /**\n   * Set the countries to limit search results to\n   * @param {String} countries a comma separated list of countries to limit to\n   * @returns {MapboxGeocoder} this\n   */\n  setCountries: function (countries) {\n    this.options.countries = countries;\n    return this;\n  },\n\n  /**\n   * Get a list of the types to limit search results to\n   * @returns {String} a comma separated list of types to limit to\n   */\n  getTypes: function () {\n    return this.options.types;\n  },\n\n  /**\n   * Set the types to limit search results to\n   * @param {String} countries a comma separated list of types to limit to\n   * @returns {MapboxGeocoder} this\n   */\n  setTypes: function (types) {\n    this.options.types = types;\n    return this;\n  },\n\n  /**\n   * Get the minimum number of characters typed to trigger results used in the plugin\n   * @returns {Number} The minimum length in characters before a search is triggered\n   */\n  getMinLength: function () {\n    return this.options.minLength;\n  },\n\n  /**\n   * Set the minimum number of characters typed to trigger results used by the plugin\n   * @param {Number} minLength the minimum length in characters\n   * @returns {MapboxGeocoder} this\n   */\n  setMinLength: function (minLength) {\n    this.options.minLength = minLength;\n    if (this._typeahead) this._typeahead.minLength = minLength;\n    return this;\n  },\n\n  /**\n   * Get the limit value for the number of results to display used by the plugin\n   * @returns {Number} The limit value for the number of results to display used by the plugin\n   */\n  getLimit: function () {\n    return this.options.limit;\n  },\n\n  /**\n   * Set the limit value for the number of results to display used by the plugin\n   * @param {Number} limit the number of search results to return\n   * @returns {MapboxGeocoder}\n   */\n  setLimit: function (limit) {\n    this.options.limit = limit;\n    if (this._typeahead) this._typeahead.options.limit = limit;\n    return this;\n  },\n\n  /**\n   * Get the filter function used by the plugin\n   * @returns {Function} the filter function\n   */\n  getFilter: function () {\n    return this.options.filter;\n  },\n\n  /**\n   * Set the filter function used by the plugin.\n   * @param {Function} filter A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.\n   * @returns {MapboxGeocoder} this\n   */\n  setFilter: function (filter) {\n    this.options.filter = filter;\n    return this;\n  },\n\n  /**\n   * Set the geocoding endpoint used by the plugin.\n   * @param {Function} origin A function which accepts an HTTPS URL to specify the endpoint to query results from.\n   * @returns {MapboxGeocoder} this\n   */\n  setOrigin: function (origin) {\n    this.options.origin = origin;\n    this.geocoderService = mbxGeocoder(MapboxClient({\n      accessToken: this.options.accessToken,\n      origin: this.options.origin\n    }));\n    return this;\n  },\n\n  /**\n   * Get the geocoding endpoint the plugin is currently set to\n   * @returns {Function} the endpoint URL\n   */\n  getOrigin: function () {\n    return this.options.origin;\n  },\n\n  /**\n   * Handle the placement of a result marking the selected result\n   * @private\n   * @param {Object} selected the selected geojson feature\n   * @returns {MapboxGeocoder} this\n   */\n  _handleMarker: function (selected) {\n    // clean up any old marker that might be present\n    if (!this._map) {\n      return;\n    }\n\n    this._removeMarker();\n\n    var defaultMarkerOptions = {\n      color: '#4668F2'\n    };\n    var markerOptions = extend({}, defaultMarkerOptions, this.options.marker);\n    this.mapMarker = new this._mapboxgl.Marker(markerOptions);\n    this.mapMarker.setLngLat(selected.center).addTo(this._map);\n    return this;\n  },\n\n  /**\n   * Handle the removal of a result marker\n   * @private\n   */\n  _removeMarker: function () {\n    if (this.mapMarker) {\n      this.mapMarker.remove();\n      this.mapMarker = null;\n    }\n  },\n\n  /**\n   * Subscribe to events that happen within the plugin.\n   * @param {String} type name of event. Available events and the data passed into their respective event objects are:\n   *\n   * - __clear__ `Emitted when the input is cleared`\n   * - __loading__ `{ query } Emitted when the geocoder is looking up a query`\n   * - __results__ `{ results } Fired when the geocoder returns a response`\n   * - __result__ `{ result } Fired when input is set`\n   * - __error__ `{ error } Error as string`\n   * @param {Function} fn function that's called when the event is emitted.\n   * @returns {MapboxGeocoder} this;\n   */\n  on: function (type, fn) {\n    this._eventEmitter.on(type, fn);\n\n    return this;\n  },\n\n  /**\n   * Remove an event\n   * @returns {MapboxGeocoder} this\n   * @param {String} type Event name.\n   * @param {Function} fn Function that should unsubscribe to the event emitted.\n   */\n  off: function (type, fn) {\n    this._eventEmitter.removeListener(type, fn);\n\n    this.eventManager.remove();\n    return this;\n  }\n};\nmodule.exports = MapboxGeocoder;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/lib/localization.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/lib/localization.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Localized values for the placeholder string\n * \n * @private\n */\n\nvar placeholder = {\n  // list drawn from https://docs.mapbox.com/api/search/#language-coverage\n  'de': 'Suche',\n  // german\n  'it': 'Ricerca',\n  //italian\n  'en': 'Search',\n  // english\n  'nl': 'Zoeken',\n  //dutch\n  'fr': 'Chercher',\n  //french\n  'ca': 'Cerca',\n  //catalan\n  'he': 'לחפש',\n  //hebrew\n  'ja': 'サーチ',\n  //japanese\n  'lv': 'Meklēt',\n  //latvian\n  'pt': 'Procurar',\n  //portuguese \n  'sr': 'Претрага',\n  //serbian\n  'zh': '搜索',\n  //chinese-simplified\n  'cs': 'Vyhledávání',\n  //czech\n  'hu': 'Keresés',\n  //hungarian\n  'ka': 'ძიება',\n  // georgian\n  'nb': 'Søke',\n  //norwegian\n  'sk': 'Vyhľadávanie',\n  //slovak\n  'th': 'ค้นหา',\n  //thai\n  'fi': 'Hae',\n  //finnish\n  'is': 'Leita',\n  //icelandic\n  'ko': '수색',\n  //korean\n  'pl': 'Szukaj',\n  //polish\n  'sl': 'Iskanje' //slovenian\n\n};\nmodule.exports = {\n  placeholder: placeholder\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtZ2wtZ2VvY29kZXIvbGliL2xvY2FsaXphdGlvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbWFwYm94L21hcGJveC1nbC1nZW9jb2Rlci9saWIvbG9jYWxpemF0aW9uLmpzP2ZmOWMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIExvY2FsaXplZCB2YWx1ZXMgZm9yIHRoZSBwbGFjZWhvbGRlciBzdHJpbmdcbiAqIFxuICogQHByaXZhdGVcbiAqL1xudmFyIHBsYWNlaG9sZGVyID0ge1xuICAgIC8vIGxpc3QgZHJhd24gZnJvbSBodHRwczovL2RvY3MubWFwYm94LmNvbS9hcGkvc2VhcmNoLyNsYW5ndWFnZS1jb3ZlcmFnZVxuICAnZGUnOiAnU3VjaGUnLCAvLyBnZXJtYW5cbiAgJ2l0JzogJ1JpY2VyY2EnLCAvL2l0YWxpYW5cbiAgJ2VuJzogJ1NlYXJjaCcsIC8vIGVuZ2xpc2hcbiAgJ25sJzogJ1pvZWtlbicsIC8vZHV0Y2hcbiAgJ2ZyJzogJ0NoZXJjaGVyJywgIC8vZnJlbmNoXG4gICdjYSc6ICdDZXJjYScsIC8vY2F0YWxhblxuICAnaGUnOiAn15zXl9ek16knLCAvL2hlYnJld1xuICAnamEnOiAn44K144O844OBJywgIC8vamFwYW5lc2VcbiAgJ2x2JzogJ01la2zEk3QnLCAvL2xhdHZpYW5cbiAgJ3B0JzogJ1Byb2N1cmFyJywgLy9wb3J0dWd1ZXNlIFxuICAnc3InOiAn0J/RgNC10YLRgNCw0LPQsCcsIC8vc2VyYmlhblxuICAnemgnOiAn5pCc57SiJywgLy9jaGluZXNlLXNpbXBsaWZpZWRcbiAgJ2NzJzogJ1Z5aGxlZMOhdsOhbsOtJywgLy9jemVjaFxuICAnaHUnOiAnS2VyZXPDqXMnLCAvL2h1bmdhcmlhblxuICAna2EnOiAn4YOr4YOY4YOU4YOR4YOQJywgLy8gZ2VvcmdpYW5cbiAgJ25iJzogJ1PDuGtlJywgLy9ub3J3ZWdpYW5cbiAgJ3NrJzogJ1Z5aMS+YWTDoXZhbmllJywgLy9zbG92YWtcbiAgJ3RoJzogJ+C4hOC5ieC4meC4q+C4sicsIC8vdGhhaVxuICAnZmknOiAnSGFlJywvL2Zpbm5pc2hcbiAgJ2lzJzogJ0xlaXRhJywvL2ljZWxhbmRpY1xuICAna28nOiAn7IiY7IOJJywvL2tvcmVhblxuICAncGwnOiAgJ1N6dWthaicsIC8vcG9saXNoXG4gICdzbCc6ICdJc2thbmplJyAvL3Nsb3ZlbmlhblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtwbGFjZWhvbGRlcjogcGxhY2Vob2xkZXJ9OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTs7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBekJBO0FBMkJBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-gl-geocoder/lib/localization.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar client = __webpack_require__(/*! ./lib/client */ \"./node_modules/@mapbox/mapbox-sdk/lib/browser/browser-client.js\");\n\nmodule.exports = client;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtYXBib3gvbWFwYm94LXNkay9pbmRleC5qcz9kMGE4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGNsaWVudCA9IHJlcXVpcmUoJy4vbGliL2NsaWVudCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNsaWVudDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/index.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/browser/browser-client.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/browser/browser-client.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar browser = __webpack_require__(/*! ./browser-layer */ \"./node_modules/@mapbox/mapbox-sdk/lib/browser/browser-layer.js\");\n\nvar MapiClient = __webpack_require__(/*! ../classes/mapi-client */ \"./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js\");\n\nfunction BrowserClient(options) {\n  MapiClient.call(this, options);\n}\n\nBrowserClient.prototype = Object.create(MapiClient.prototype);\nBrowserClient.prototype.constructor = BrowserClient;\nBrowserClient.prototype.sendRequest = browser.browserSend;\nBrowserClient.prototype.abortRequest = browser.browserAbort;\n/**\n * Create a client for the browser.\n *\n * @param {Object} options\n * @param {string} options.accessToken\n * @param {string} [options.origin]\n * @returns {MapiClient}\n */\n\nfunction createBrowserClient(options) {\n  return new BrowserClient(options);\n}\n\nmodule.exports = createBrowserClient;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9icm93c2VyL2Jyb3dzZXItY2xpZW50LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtYXBib3gvbWFwYm94LXNkay9saWIvYnJvd3Nlci9icm93c2VyLWNsaWVudC5qcz8yOTdjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGJyb3dzZXIgPSByZXF1aXJlKCcuL2Jyb3dzZXItbGF5ZXInKTtcbnZhciBNYXBpQ2xpZW50ID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9tYXBpLWNsaWVudCcpO1xuXG5mdW5jdGlvbiBCcm93c2VyQ2xpZW50KG9wdGlvbnMpIHtcbiAgTWFwaUNsaWVudC5jYWxsKHRoaXMsIG9wdGlvbnMpO1xufVxuQnJvd3NlckNsaWVudC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKE1hcGlDbGllbnQucHJvdG90eXBlKTtcbkJyb3dzZXJDbGllbnQucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gQnJvd3NlckNsaWVudDtcblxuQnJvd3NlckNsaWVudC5wcm90b3R5cGUuc2VuZFJlcXVlc3QgPSBicm93c2VyLmJyb3dzZXJTZW5kO1xuQnJvd3NlckNsaWVudC5wcm90b3R5cGUuYWJvcnRSZXF1ZXN0ID0gYnJvd3Nlci5icm93c2VyQWJvcnQ7XG5cbi8qKlxuICogQ3JlYXRlIGEgY2xpZW50IGZvciB0aGUgYnJvd3Nlci5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICogQHBhcmFtIHtzdHJpbmd9IG9wdGlvbnMuYWNjZXNzVG9rZW5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5vcmlnaW5dXG4gKiBAcmV0dXJucyB7TWFwaUNsaWVudH1cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQnJvd3NlckNsaWVudChvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgQnJvd3NlckNsaWVudChvcHRpb25zKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVCcm93c2VyQ2xpZW50O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7Ozs7Ozs7OztBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/lib/browser/browser-client.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/browser/browser-layer.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/browser/browser-layer.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar MapiResponse = __webpack_require__(/*! ../classes/mapi-response */ \"./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-response.js\");\n\nvar MapiError = __webpack_require__(/*! ../classes/mapi-error */ \"./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-error.js\");\n\nvar constants = __webpack_require__(/*! ../constants */ \"./node_modules/@mapbox/mapbox-sdk/lib/constants.js\");\n\nvar parseHeaders = __webpack_require__(/*! ../helpers/parse-headers */ \"./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-headers.js\"); // Keys are request IDs, values are XHRs.\n\n\nvar requestsUnderway = {};\n\nfunction browserAbort(request) {\n  var xhr = requestsUnderway[request.id];\n  if (!xhr) return;\n  xhr.abort();\n  delete requestsUnderway[request.id];\n}\n\nfunction createResponse(request, xhr) {\n  return new MapiResponse(request, {\n    body: xhr.response,\n    headers: parseHeaders(xhr.getAllResponseHeaders()),\n    statusCode: xhr.status\n  });\n}\n\nfunction normalizeBrowserProgressEvent(event) {\n  var total = event.total;\n  var transferred = event.loaded;\n  var percent = 100 * transferred / total;\n  return {\n    total: total,\n    transferred: transferred,\n    percent: percent\n  };\n}\n\nfunction sendRequestXhr(request, xhr) {\n  return new Promise(function (resolve, reject) {\n    xhr.onprogress = function (event) {\n      request.emitter.emit(constants.EVENT_PROGRESS_DOWNLOAD, normalizeBrowserProgressEvent(event));\n    };\n\n    var file = request.file;\n\n    if (file) {\n      xhr.upload.onprogress = function (event) {\n        request.emitter.emit(constants.EVENT_PROGRESS_UPLOAD, normalizeBrowserProgressEvent(event));\n      };\n    }\n\n    xhr.onerror = function (error) {\n      reject(error);\n    };\n\n    xhr.onabort = function () {\n      var mapiError = new MapiError({\n        request: request,\n        type: constants.ERROR_REQUEST_ABORTED\n      });\n      reject(mapiError);\n    };\n\n    xhr.onload = function () {\n      delete requestsUnderway[request.id];\n\n      if (xhr.status < 200 || xhr.status >= 400) {\n        var mapiError = new MapiError({\n          request: request,\n          body: xhr.response,\n          statusCode: xhr.status\n        });\n        reject(mapiError);\n        return;\n      }\n\n      resolve(xhr);\n    };\n\n    var body = request.body; // matching service needs to send a www-form-urlencoded request\n\n    if (typeof body === 'string') {\n      xhr.send(body);\n    } else if (body) {\n      xhr.send(JSON.stringify(body));\n    } else if (file) {\n      xhr.send(file);\n    } else {\n      xhr.send();\n    }\n\n    requestsUnderway[request.id] = xhr;\n  }).then(function (xhr) {\n    return createResponse(request, xhr);\n  });\n} // The accessToken argument gives this function flexibility\n// for Mapbox's internal client.\n\n\nfunction createRequestXhr(request, accessToken) {\n  var url = request.url(accessToken);\n  var xhr = new window.XMLHttpRequest();\n  xhr.open(request.method, url);\n  Object.keys(request.headers).forEach(function (key) {\n    xhr.setRequestHeader(key, request.headers[key]);\n  });\n  return xhr;\n}\n\nfunction browserSend(request) {\n  return Promise.resolve().then(function () {\n    var xhr = createRequestXhr(request, request.client.accessToken);\n    return sendRequestXhr(request, xhr);\n  });\n}\n\nmodule.exports = {\n  browserAbort: browserAbort,\n  sendRequestXhr: sendRequestXhr,\n  browserSend: browserSend,\n  createRequestXhr: createRequestXhr\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9icm93c2VyL2Jyb3dzZXItbGF5ZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9icm93c2VyL2Jyb3dzZXItbGF5ZXIuanM/YTA2NiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBNYXBpUmVzcG9uc2UgPSByZXF1aXJlKCcuLi9jbGFzc2VzL21hcGktcmVzcG9uc2UnKTtcbnZhciBNYXBpRXJyb3IgPSByZXF1aXJlKCcuLi9jbGFzc2VzL21hcGktZXJyb3InKTtcbnZhciBjb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMnKTtcbnZhciBwYXJzZUhlYWRlcnMgPSByZXF1aXJlKCcuLi9oZWxwZXJzL3BhcnNlLWhlYWRlcnMnKTtcblxuLy8gS2V5cyBhcmUgcmVxdWVzdCBJRHMsIHZhbHVlcyBhcmUgWEhScy5cbnZhciByZXF1ZXN0c1VuZGVyd2F5ID0ge307XG5cbmZ1bmN0aW9uIGJyb3dzZXJBYm9ydChyZXF1ZXN0KSB7XG4gIHZhciB4aHIgPSByZXF1ZXN0c1VuZGVyd2F5W3JlcXVlc3QuaWRdO1xuICBpZiAoIXhocikgcmV0dXJuO1xuICB4aHIuYWJvcnQoKTtcbiAgZGVsZXRlIHJlcXVlc3RzVW5kZXJ3YXlbcmVxdWVzdC5pZF07XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVJlc3BvbnNlKHJlcXVlc3QsIHhocikge1xuICByZXR1cm4gbmV3IE1hcGlSZXNwb25zZShyZXF1ZXN0LCB7XG4gICAgYm9keTogeGhyLnJlc3BvbnNlLFxuICAgIGhlYWRlcnM6IHBhcnNlSGVhZGVycyh4aHIuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCkpLFxuICAgIHN0YXR1c0NvZGU6IHhoci5zdGF0dXNcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZUJyb3dzZXJQcm9ncmVzc0V2ZW50KGV2ZW50KSB7XG4gIHZhciB0b3RhbCA9IGV2ZW50LnRvdGFsO1xuICB2YXIgdHJhbnNmZXJyZWQgPSBldmVudC5sb2FkZWQ7XG4gIHZhciBwZXJjZW50ID0gKDEwMCAqIHRyYW5zZmVycmVkKSAvIHRvdGFsO1xuICByZXR1cm4ge1xuICAgIHRvdGFsOiB0b3RhbCxcbiAgICB0cmFuc2ZlcnJlZDogdHJhbnNmZXJyZWQsXG4gICAgcGVyY2VudDogcGVyY2VudFxuICB9O1xufVxuXG5mdW5jdGlvbiBzZW5kUmVxdWVzdFhocihyZXF1ZXN0LCB4aHIpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgIHhoci5vbnByb2dyZXNzID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgIHJlcXVlc3QuZW1pdHRlci5lbWl0KFxuICAgICAgICBjb25zdGFudHMuRVZFTlRfUFJPR1JFU1NfRE9XTkxPQUQsXG4gICAgICAgIG5vcm1hbGl6ZUJyb3dzZXJQcm9ncmVzc0V2ZW50KGV2ZW50KVxuICAgICAgKTtcbiAgICB9O1xuXG4gICAgdmFyIGZpbGUgPSByZXF1ZXN0LmZpbGU7XG4gICAgaWYgKGZpbGUpIHtcbiAgICAgIHhoci51cGxvYWQub25wcm9ncmVzcyA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIHJlcXVlc3QuZW1pdHRlci5lbWl0KFxuICAgICAgICAgIGNvbnN0YW50cy5FVkVOVF9QUk9HUkVTU19VUExPQUQsXG4gICAgICAgICAgbm9ybWFsaXplQnJvd3NlclByb2dyZXNzRXZlbnQoZXZlbnQpXG4gICAgICAgICk7XG4gICAgICB9O1xuICAgIH1cblxuICAgIHhoci5vbmVycm9yID0gZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgIHJlamVjdChlcnJvcik7XG4gICAgfTtcblxuICAgIHhoci5vbmFib3J0ID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgbWFwaUVycm9yID0gbmV3IE1hcGlFcnJvcih7XG4gICAgICAgIHJlcXVlc3Q6IHJlcXVlc3QsXG4gICAgICAgIHR5cGU6IGNvbnN0YW50cy5FUlJPUl9SRVFVRVNUX0FCT1JURURcbiAgICAgIH0pO1xuICAgICAgcmVqZWN0KG1hcGlFcnJvcik7XG4gICAgfTtcblxuICAgIHhoci5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICAgIGRlbGV0ZSByZXF1ZXN0c1VuZGVyd2F5W3JlcXVlc3QuaWRdO1xuICAgICAgaWYgKHhoci5zdGF0dXMgPCAyMDAgfHwgeGhyLnN0YXR1cyA+PSA0MDApIHtcbiAgICAgICAgdmFyIG1hcGlFcnJvciA9IG5ldyBNYXBpRXJyb3Ioe1xuICAgICAgICAgIHJlcXVlc3Q6IHJlcXVlc3QsXG4gICAgICAgICAgYm9keTogeGhyLnJlc3BvbnNlLFxuICAgICAgICAgIHN0YXR1c0NvZGU6IHhoci5zdGF0dXNcbiAgICAgICAgfSk7XG4gICAgICAgIHJlamVjdChtYXBpRXJyb3IpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICByZXNvbHZlKHhocik7XG4gICAgfTtcblxuICAgIHZhciBib2R5ID0gcmVxdWVzdC5ib2R5O1xuXG4gICAgLy8gbWF0Y2hpbmcgc2VydmljZSBuZWVkcyB0byBzZW5kIGEgd3d3LWZvcm0tdXJsZW5jb2RlZCByZXF1ZXN0XG4gICAgaWYgKHR5cGVvZiBib2R5ID09PSAnc3RyaW5nJykge1xuICAgICAgeGhyLnNlbmQoYm9keSk7XG4gICAgfSBlbHNlIGlmIChib2R5KSB7XG4gICAgICB4aHIuc2VuZChKU09OLnN0cmluZ2lmeShib2R5KSk7XG4gICAgfSBlbHNlIGlmIChmaWxlKSB7XG4gICAgICB4aHIuc2VuZChmaWxlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgeGhyLnNlbmQoKTtcbiAgICB9XG5cbiAgICByZXF1ZXN0c1VuZGVyd2F5W3JlcXVlc3QuaWRdID0geGhyO1xuICB9KS50aGVuKGZ1bmN0aW9uKHhocikge1xuICAgIHJldHVybiBjcmVhdGVSZXNwb25zZShyZXF1ZXN0LCB4aHIpO1xuICB9KTtcbn1cblxuLy8gVGhlIGFjY2Vzc1Rva2VuIGFyZ3VtZW50IGdpdmVzIHRoaXMgZnVuY3Rpb24gZmxleGliaWxpdHlcbi8vIGZvciBNYXBib3gncyBpbnRlcm5hbCBjbGllbnQuXG5mdW5jdGlvbiBjcmVhdGVSZXF1ZXN0WGhyKHJlcXVlc3QsIGFjY2Vzc1Rva2VuKSB7XG4gIHZhciB1cmwgPSByZXF1ZXN0LnVybChhY2Nlc3NUb2tlbik7XG4gIHZhciB4aHIgPSBuZXcgd2luZG93LlhNTEh0dHBSZXF1ZXN0KCk7XG4gIHhoci5vcGVuKHJlcXVlc3QubWV0aG9kLCB1cmwpO1xuICBPYmplY3Qua2V5cyhyZXF1ZXN0LmhlYWRlcnMpLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG4gICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoa2V5LCByZXF1ZXN0LmhlYWRlcnNba2V5XSk7XG4gIH0pO1xuICByZXR1cm4geGhyO1xufVxuXG5mdW5jdGlvbiBicm93c2VyU2VuZChyZXF1ZXN0KSB7XG4gIHJldHVybiBQcm9taXNlLnJlc29sdmUoKS50aGVuKGZ1bmN0aW9uKCkge1xuICAgIHZhciB4aHIgPSBjcmVhdGVSZXF1ZXN0WGhyKHJlcXVlc3QsIHJlcXVlc3QuY2xpZW50LmFjY2Vzc1Rva2VuKTtcbiAgICByZXR1cm4gc2VuZFJlcXVlc3RYaHIocmVxdWVzdCwgeGhyKTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBicm93c2VyQWJvcnQ6IGJyb3dzZXJBYm9ydCxcbiAgc2VuZFJlcXVlc3RYaHI6IHNlbmRSZXF1ZXN0WGhyLFxuICBicm93c2VyU2VuZDogYnJvd3NlclNlbmQsXG4gIGNyZWF0ZVJlcXVlc3RYaHI6IGNyZWF0ZVJlcXVlc3RYaHJcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/lib/browser/browser-layer.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js":
/*!********************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar parseToken = __webpack_require__(/*! @mapbox/parse-mapbox-token */ \"./node_modules/@mapbox/parse-mapbox-token/index.js\");\n\nvar MapiRequest = __webpack_require__(/*! ./mapi-request */ \"./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-request.js\");\n\nvar constants = __webpack_require__(/*! ../constants */ \"./node_modules/@mapbox/mapbox-sdk/lib/constants.js\");\n/**\n * A low-level Mapbox API client. Use it to create service clients\n * that share the same configuration.\n *\n * Services and `MapiRequest`s use the underlying `MapiClient` to\n * determine how to create, send, and abort requests in a way\n * that is appropriate to the configuration and environment\n * (Node or the browser).\n *\n * @class MapiClient\n * @property {string} accessToken - The Mapbox access token assigned\n *   to this client.\n * @property {string} [origin] - The origin\n *   to use for API requests. Defaults to https://api.mapbox.com.\n */\n\n\nfunction MapiClient(options) {\n  if (!options || !options.accessToken) {\n    throw new Error('Cannot create a client without an access token');\n  } // Try parsing the access token to determine right away if it's valid.\n\n\n  parseToken(options.accessToken);\n  this.accessToken = options.accessToken;\n  this.origin = options.origin || constants.API_ORIGIN;\n}\n\nMapiClient.prototype.createRequest = function createRequest(requestOptions) {\n  return new MapiRequest(this, requestOptions);\n};\n\nmodule.exports = MapiClient;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9jbGFzc2VzL21hcGktY2xpZW50LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtYXBib3gvbWFwYm94LXNkay9saWIvY2xhc3Nlcy9tYXBpLWNsaWVudC5qcz85ZGM1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHBhcnNlVG9rZW4gPSByZXF1aXJlKCdAbWFwYm94L3BhcnNlLW1hcGJveC10b2tlbicpO1xudmFyIE1hcGlSZXF1ZXN0ID0gcmVxdWlyZSgnLi9tYXBpLXJlcXVlc3QnKTtcbnZhciBjb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMnKTtcblxuLyoqXG4gKiBBIGxvdy1sZXZlbCBNYXBib3ggQVBJIGNsaWVudC4gVXNlIGl0IHRvIGNyZWF0ZSBzZXJ2aWNlIGNsaWVudHNcbiAqIHRoYXQgc2hhcmUgdGhlIHNhbWUgY29uZmlndXJhdGlvbi5cbiAqXG4gKiBTZXJ2aWNlcyBhbmQgYE1hcGlSZXF1ZXN0YHMgdXNlIHRoZSB1bmRlcmx5aW5nIGBNYXBpQ2xpZW50YCB0b1xuICogZGV0ZXJtaW5lIGhvdyB0byBjcmVhdGUsIHNlbmQsIGFuZCBhYm9ydCByZXF1ZXN0cyBpbiBhIHdheVxuICogdGhhdCBpcyBhcHByb3ByaWF0ZSB0byB0aGUgY29uZmlndXJhdGlvbiBhbmQgZW52aXJvbm1lbnRcbiAqIChOb2RlIG9yIHRoZSBicm93c2VyKS5cbiAqXG4gKiBAY2xhc3MgTWFwaUNsaWVudFxuICogQHByb3BlcnR5IHtzdHJpbmd9IGFjY2Vzc1Rva2VuIC0gVGhlIE1hcGJveCBhY2Nlc3MgdG9rZW4gYXNzaWduZWRcbiAqICAgdG8gdGhpcyBjbGllbnQuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gW29yaWdpbl0gLSBUaGUgb3JpZ2luXG4gKiAgIHRvIHVzZSBmb3IgQVBJIHJlcXVlc3RzLiBEZWZhdWx0cyB0byBodHRwczovL2FwaS5tYXBib3guY29tLlxuICovXG5cbmZ1bmN0aW9uIE1hcGlDbGllbnQob3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMgfHwgIW9wdGlvbnMuYWNjZXNzVG9rZW4pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBjcmVhdGUgYSBjbGllbnQgd2l0aG91dCBhbiBhY2Nlc3MgdG9rZW4nKTtcbiAgfVxuICAvLyBUcnkgcGFyc2luZyB0aGUgYWNjZXNzIHRva2VuIHRvIGRldGVybWluZSByaWdodCBhd2F5IGlmIGl0J3MgdmFsaWQuXG4gIHBhcnNlVG9rZW4ob3B0aW9ucy5hY2Nlc3NUb2tlbik7XG5cbiAgdGhpcy5hY2Nlc3NUb2tlbiA9IG9wdGlvbnMuYWNjZXNzVG9rZW47XG4gIHRoaXMub3JpZ2luID0gb3B0aW9ucy5vcmlnaW4gfHwgY29uc3RhbnRzLkFQSV9PUklHSU47XG59XG5cbk1hcGlDbGllbnQucHJvdG90eXBlLmNyZWF0ZVJlcXVlc3QgPSBmdW5jdGlvbiBjcmVhdGVSZXF1ZXN0KHJlcXVlc3RPcHRpb25zKSB7XG4gIHJldHVybiBuZXcgTWFwaVJlcXVlc3QodGhpcywgcmVxdWVzdE9wdGlvbnMpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBNYXBpQ2xpZW50O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWdCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-error.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-error.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar constants = __webpack_require__(/*! ../constants */ \"./node_modules/@mapbox/mapbox-sdk/lib/constants.js\");\n/**\n * A Mapbox API error.\n *\n * If there's an error during the API transaction,\n * the Promise returned by `MapiRequest`'s [`send`](#send)\n * method should reject with a `MapiError`.\n *\n * @class MapiError\n * @hideconstructor\n * @property {MapiRequest} request - The errored request.\n * @property {string} type - The type of error. Usually this is `'HttpError'`.\n *   If the request was aborted, so the error was\n *   not sent from the server, the type will be\n *   `'RequestAbortedError'`.\n * @property {number} [statusCode] - The numeric status code of\n *   the HTTP response.\n * @property {Object | string} [body] - If the server sent a response body,\n *   this property exposes that response, parsed as JSON if possible.\n * @property {string} [message] - Whatever message could be derived from the\n *   call site and HTTP response.\n *\n * @param {MapiRequest} options.request\n * @param {number} [options.statusCode]\n * @param {string} [options.body]\n * @param {string} [options.message]\n * @param {string} [options.type]\n */\n\n\nfunction MapiError(options) {\n  var errorType = options.type || constants.ERROR_HTTP;\n  var body;\n\n  if (options.body) {\n    try {\n      body = JSON.parse(options.body);\n    } catch (e) {\n      body = options.body;\n    }\n  } else {\n    body = null;\n  }\n\n  var message = options.message || null;\n\n  if (!message) {\n    if (typeof body === 'string') {\n      message = body;\n    } else if (body && typeof body.message === 'string') {\n      message = body.message;\n    } else if (errorType === constants.ERROR_REQUEST_ABORTED) {\n      message = 'Request aborted';\n    }\n  }\n\n  this.message = message;\n  this.type = errorType;\n  this.statusCode = options.statusCode || null;\n  this.request = options.request;\n  this.body = body;\n}\n\nmodule.exports = MapiError;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9jbGFzc2VzL21hcGktZXJyb3IuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9jbGFzc2VzL21hcGktZXJyb3IuanM/ZWY3OCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBjb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMnKTtcblxuLyoqXG4gKiBBIE1hcGJveCBBUEkgZXJyb3IuXG4gKlxuICogSWYgdGhlcmUncyBhbiBlcnJvciBkdXJpbmcgdGhlIEFQSSB0cmFuc2FjdGlvbixcbiAqIHRoZSBQcm9taXNlIHJldHVybmVkIGJ5IGBNYXBpUmVxdWVzdGAncyBbYHNlbmRgXSgjc2VuZClcbiAqIG1ldGhvZCBzaG91bGQgcmVqZWN0IHdpdGggYSBgTWFwaUVycm9yYC5cbiAqXG4gKiBAY2xhc3MgTWFwaUVycm9yXG4gKiBAaGlkZWNvbnN0cnVjdG9yXG4gKiBAcHJvcGVydHkge01hcGlSZXF1ZXN0fSByZXF1ZXN0IC0gVGhlIGVycm9yZWQgcmVxdWVzdC5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB0eXBlIC0gVGhlIHR5cGUgb2YgZXJyb3IuIFVzdWFsbHkgdGhpcyBpcyBgJ0h0dHBFcnJvcidgLlxuICogICBJZiB0aGUgcmVxdWVzdCB3YXMgYWJvcnRlZCwgc28gdGhlIGVycm9yIHdhc1xuICogICBub3Qgc2VudCBmcm9tIHRoZSBzZXJ2ZXIsIHRoZSB0eXBlIHdpbGwgYmVcbiAqICAgYCdSZXF1ZXN0QWJvcnRlZEVycm9yJ2AuXG4gKiBAcHJvcGVydHkge251bWJlcn0gW3N0YXR1c0NvZGVdIC0gVGhlIG51bWVyaWMgc3RhdHVzIGNvZGUgb2ZcbiAqICAgdGhlIEhUVFAgcmVzcG9uc2UuXG4gKiBAcHJvcGVydHkge09iamVjdCB8IHN0cmluZ30gW2JvZHldIC0gSWYgdGhlIHNlcnZlciBzZW50IGEgcmVzcG9uc2UgYm9keSxcbiAqICAgdGhpcyBwcm9wZXJ0eSBleHBvc2VzIHRoYXQgcmVzcG9uc2UsIHBhcnNlZCBhcyBKU09OIGlmIHBvc3NpYmxlLlxuICogQHByb3BlcnR5IHtzdHJpbmd9IFttZXNzYWdlXSAtIFdoYXRldmVyIG1lc3NhZ2UgY291bGQgYmUgZGVyaXZlZCBmcm9tIHRoZVxuICogICBjYWxsIHNpdGUgYW5kIEhUVFAgcmVzcG9uc2UuXG4gKlxuICogQHBhcmFtIHtNYXBpUmVxdWVzdH0gb3B0aW9ucy5yZXF1ZXN0XG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuc3RhdHVzQ29kZV1cbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5ib2R5XVxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLm1lc3NhZ2VdXG4gKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMudHlwZV1cbiAqL1xuZnVuY3Rpb24gTWFwaUVycm9yKG9wdGlvbnMpIHtcbiAgdmFyIGVycm9yVHlwZSA9IG9wdGlvbnMudHlwZSB8fCBjb25zdGFudHMuRVJST1JfSFRUUDtcblxuICB2YXIgYm9keTtcbiAgaWYgKG9wdGlvbnMuYm9keSkge1xuICAgIHRyeSB7XG4gICAgICBib2R5ID0gSlNPTi5wYXJzZShvcHRpb25zLmJvZHkpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGJvZHkgPSBvcHRpb25zLmJvZHk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGJvZHkgPSBudWxsO1xuICB9XG5cbiAgdmFyIG1lc3NhZ2UgPSBvcHRpb25zLm1lc3NhZ2UgfHwgbnVsbDtcbiAgaWYgKCFtZXNzYWdlKSB7XG4gICAgaWYgKHR5cGVvZiBib2R5ID09PSAnc3RyaW5nJykge1xuICAgICAgbWVzc2FnZSA9IGJvZHk7XG4gICAgfSBlbHNlIGlmIChib2R5ICYmIHR5cGVvZiBib2R5Lm1lc3NhZ2UgPT09ICdzdHJpbmcnKSB7XG4gICAgICBtZXNzYWdlID0gYm9keS5tZXNzYWdlO1xuICAgIH0gZWxzZSBpZiAoZXJyb3JUeXBlID09PSBjb25zdGFudHMuRVJST1JfUkVRVUVTVF9BQk9SVEVEKSB7XG4gICAgICBtZXNzYWdlID0gJ1JlcXVlc3QgYWJvcnRlZCc7XG4gICAgfVxuICB9XG5cbiAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgdGhpcy50eXBlID0gZXJyb3JUeXBlO1xuICB0aGlzLnN0YXR1c0NvZGUgPSBvcHRpb25zLnN0YXR1c0NvZGUgfHwgbnVsbDtcbiAgdGhpcy5yZXF1ZXN0ID0gb3B0aW9ucy5yZXF1ZXN0O1xuICB0aGlzLmJvZHkgPSBib2R5O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IE1hcGlFcnJvcjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkJBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-error.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-request.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-request.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar parseToken = __webpack_require__(/*! @mapbox/parse-mapbox-token */ \"./node_modules/@mapbox/parse-mapbox-token/index.js\");\n\nvar xtend = __webpack_require__(/*! xtend */ \"./node_modules/xtend/immutable.js\");\n\nvar EventEmitter = __webpack_require__(/*! eventemitter3 */ \"./node_modules/@mapbox/mapbox-sdk/node_modules/eventemitter3/index.js\");\n\nvar urlUtils = __webpack_require__(/*! ../helpers/url-utils */ \"./node_modules/@mapbox/mapbox-sdk/lib/helpers/url-utils.js\");\n\nvar constants = __webpack_require__(/*! ../constants */ \"./node_modules/@mapbox/mapbox-sdk/lib/constants.js\");\n\nvar requestId = 1;\n/**\n * A Mapbox API request.\n *\n * Note that creating a `MapiRequest` does *not* send the request automatically.\n * Use the request's `send` method to send it off and get a `Promise`.\n *\n * The `emitter` property is an `EventEmitter` that emits the following events:\n *\n * - `'response'` - Listeners will be called with a `MapiResponse`.\n * - `'error'` - Listeners will be called with a `MapiError`.\n * - `'downloadProgress'` - Listeners will be called with `ProgressEvents`.\n * - `'uploadProgress'` - Listeners will be called with `ProgressEvents`.\n *   Upload events are only available when the request includes a file.\n *\n * @class MapiRequest\n * @property {EventEmitter} emitter - An event emitter. See above.\n * @property {MapiClient} client - This request's `MapiClient`.\n * @property {MapiResponse|null} response - If this request has been sent and received\n *   a response, the response is available on this property.\n * @property {MapiError|Error|null} error - If this request has been sent and\n *   received an error in response, the error is available on this property.\n * @property {boolean} aborted - If the request has been aborted\n *   (via [`abort`](#abort)), this property will be `true`.\n * @property {boolean} sent - If the request has been sent, this property will\n *   be `true`. You cannot send the same request twice, so if you need to create\n *   a new request that is the equivalent of an existing one, use\n *   [`clone`](#clone).\n * @property {string} path - The request's path, including colon-prefixed route\n *   parameters.\n * @property {string} origin - The request's origin.\n * @property {string} method - The request's HTTP method.\n * @property {Object} query - A query object, which will be transformed into\n *   a URL query string.\n * @property {Object} params - A route parameters object, whose values will\n *   be interpolated the path.\n * @property {Object} headers - The request's headers.\n * @property {Object|string|null} body - Data to send with the request.\n *   If the request has a body, it will also be sent with the header\n *   `'Content-Type: application/json'`.\n * @property {Blob|ArrayBuffer|string|ReadStream} file - A file to\n *   send with the request. The browser client accepts Blobs and ArrayBuffers;\n *   the Node client accepts strings (filepaths) and ReadStreams.\n */\n\n/**\n * @ignore\n * @param {MapiClient} client\n * @param {Object} options\n * @param {string} options.method\n * @param {string} options.path\n * @param {Object} [options.query={}]\n * @param {Object} [options.params={}]\n * @param {string} [options.origin]\n * @param {Object} [options.headers]\n * @param {Object} [options.body=null]\n * @param {Blob|ArrayBuffer|string|ReadStream} [options.file=null]\n */\n\nfunction MapiRequest(client, options) {\n  if (!client) {\n    throw new Error('MapiRequest requires a client');\n  }\n\n  if (!options || !options.path || !options.method) {\n    throw new Error('MapiRequest requires an options object with path and method properties');\n  }\n\n  var defaultHeaders = {};\n\n  if (options.body) {\n    defaultHeaders['content-type'] = 'application/json';\n  }\n\n  var headersWithDefaults = xtend(defaultHeaders, options.headers); // Disallows duplicate header names of mixed case,\n  // e.g. Content-Type and content-type.\n\n  var headers = Object.keys(headersWithDefaults).reduce(function (memo, name) {\n    memo[name.toLowerCase()] = headersWithDefaults[name];\n    return memo;\n  }, {});\n  this.id = requestId++;\n  this._options = options;\n  this.emitter = new EventEmitter();\n  this.client = client;\n  this.response = null;\n  this.error = null;\n  this.sent = false;\n  this.aborted = false;\n  this.path = options.path;\n  this.method = options.method;\n  this.origin = options.origin || client.origin;\n  this.query = options.query || {};\n  this.params = options.params || {};\n  this.body = options.body || null;\n  this.file = options.file || null;\n  this.headers = headers;\n}\n/**\n * Get the URL of the request.\n *\n * @param {string} [accessToken] - By default, the access token of the request's\n *   client is used.\n * @return {string}\n */\n\n\nMapiRequest.prototype.url = function url(accessToken) {\n  var url = urlUtils.prependOrigin(this.path, this.origin);\n  url = urlUtils.appendQueryObject(url, this.query);\n  var routeParams = this.params;\n\n  if (accessToken) {\n    url = urlUtils.appendQueryParam(url, 'access_token', accessToken);\n    var accessTokenOwnerId = parseToken(accessToken).user;\n    routeParams = xtend({\n      ownerId: accessTokenOwnerId\n    }, routeParams);\n  }\n\n  url = urlUtils.interpolateRouteParams(url, routeParams);\n  return url;\n};\n/**\n * Send the request. Returns a Promise that resolves with a `MapiResponse`.\n * You probably want to use `response.body`.\n *\n * `send` only retrieves the first page of paginated results. You can get\n * the next page by using the `MapiResponse`'s [`nextPage`](#nextpage)\n * function, or iterate through all pages using [`eachPage`](#eachpage)\n * instead of `send`.\n *\n * @returns {Promise<MapiResponse>}\n */\n\n\nMapiRequest.prototype.send = function send() {\n  var self = this;\n\n  if (self.sent) {\n    throw new Error('This request has already been sent. Check the response and error properties. Create a new request with clone().');\n  }\n\n  self.sent = true;\n  return self.client.sendRequest(self).then(function (response) {\n    self.response = response;\n    self.emitter.emit(constants.EVENT_RESPONSE, response);\n    return response;\n  }, function (error) {\n    self.error = error;\n    self.emitter.emit(constants.EVENT_ERROR, error);\n    throw error;\n  });\n};\n/**\n * Abort the request.\n *\n * Any pending `Promise` returned by [`send`](#send) will be rejected with\n * an error with `type: 'RequestAbortedError'`. If you've created a request\n * that might be aborted, you need to catch and handle such errors.\n *\n * This method will also abort any requests created while fetching subsequent\n * pages via [`eachPage`](#eachpage).\n *\n * If the request has not been sent or has already been aborted, nothing\n * will happen.\n */\n\n\nMapiRequest.prototype.abort = function abort() {\n  if (this._nextPageRequest) {\n    this._nextPageRequest.abort();\n\n    delete this._nextPageRequest;\n  }\n\n  if (this.response || this.error || this.aborted) return;\n  this.aborted = true;\n  this.client.abortRequest(this);\n};\n/**\n * Invoke a callback for each page of a paginated API response.\n *\n * The callback should have the following signature:\n *\n * ```js\n * (\n *   error: MapiError,\n *   response: MapiResponse,\n *   next: () => void\n * ) => void\n * ```\n *\n * **The next page will not be fetched until you've invoked the\n * `next` callback**, indicating that you're ready for it.\n *\n * @param {Function} callback\n */\n\n\nMapiRequest.prototype.eachPage = function eachPage(callback) {\n  var self = this;\n\n  function handleResponse(response) {\n    function getNextPage() {\n      delete self._nextPageRequest;\n      var nextPageRequest = response.nextPage();\n\n      if (nextPageRequest) {\n        self._nextPageRequest = nextPageRequest;\n        getPage(nextPageRequest);\n      }\n    }\n\n    callback(null, response, getNextPage);\n  }\n\n  function handleError(error) {\n    callback(error, null, function () {});\n  }\n\n  function getPage(request) {\n    request.send().then(handleResponse, handleError);\n  }\n\n  getPage(this);\n};\n/**\n * Clone this request.\n *\n * Each request can only be sent *once*. So if you'd like to send the\n * same request again, clone it and send away.\n *\n * @returns {MapiRequest} - A new `MapiRequest` configured just like this one.\n */\n\n\nMapiRequest.prototype.clone = function clone() {\n  return this._extend();\n};\n/**\n * @ignore\n */\n\n\nMapiRequest.prototype._extend = function _extend(options) {\n  var extendedOptions = xtend(this._options, options);\n  return new MapiRequest(this.client, extendedOptions);\n};\n\nmodule.exports = MapiRequest;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-request.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-response.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-response.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar parseLinkHeader = __webpack_require__(/*! ../helpers/parse-link-header */ \"./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-link-header.js\");\n/**\n * A Mapbox API response.\n *\n * @class MapiResponse\n * @property {Object} body - The response body, parsed as JSON.\n * @property {string} rawBody - The raw response body.\n * @property {number} statusCode - The response's status code.\n * @property {Object} headers - The parsed response headers.\n * @property {Object} links - The parsed response links.\n * @property {MapiRequest} request - The response's originating `MapiRequest`.\n */\n\n/**\n * @ignore\n * @param {MapiRequest} request\n * @param {Object} responseData\n * @param {Object} responseData.headers\n * @param {string} responseData.body\n * @param {number} responseData.statusCode\n */\n\n\nfunction MapiResponse(request, responseData) {\n  this.request = request;\n  this.headers = responseData.headers;\n  this.rawBody = responseData.body;\n  this.statusCode = responseData.statusCode;\n\n  try {\n    this.body = JSON.parse(responseData.body || '{}');\n  } catch (parseError) {\n    this.body = responseData.body;\n  }\n\n  this.links = parseLinkHeader(this.headers.link);\n}\n/**\n * Check if there is a next page that you can fetch.\n *\n * @returns {boolean}\n */\n\n\nMapiResponse.prototype.hasNextPage = function hasNextPage() {\n  return !!this.links.next;\n};\n/**\n * Create a request for the next page, if there is one.\n * If there is no next page, returns `null`.\n *\n * @returns {MapiRequest | null}\n */\n\n\nMapiResponse.prototype.nextPage = function nextPage() {\n  if (!this.hasNextPage()) return null;\n  return this.request._extend({\n    path: this.links.next.url\n  });\n};\n\nmodule.exports = MapiResponse;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9jbGFzc2VzL21hcGktcmVzcG9uc2UuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9jbGFzc2VzL21hcGktcmVzcG9uc2UuanM/NzExOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBwYXJzZUxpbmtIZWFkZXIgPSByZXF1aXJlKCcuLi9oZWxwZXJzL3BhcnNlLWxpbmstaGVhZGVyJyk7XG5cbi8qKlxuICogQSBNYXBib3ggQVBJIHJlc3BvbnNlLlxuICpcbiAqIEBjbGFzcyBNYXBpUmVzcG9uc2VcbiAqIEBwcm9wZXJ0eSB7T2JqZWN0fSBib2R5IC0gVGhlIHJlc3BvbnNlIGJvZHksIHBhcnNlZCBhcyBKU09OLlxuICogQHByb3BlcnR5IHtzdHJpbmd9IHJhd0JvZHkgLSBUaGUgcmF3IHJlc3BvbnNlIGJvZHkuXG4gKiBAcHJvcGVydHkge251bWJlcn0gc3RhdHVzQ29kZSAtIFRoZSByZXNwb25zZSdzIHN0YXR1cyBjb2RlLlxuICogQHByb3BlcnR5IHtPYmplY3R9IGhlYWRlcnMgLSBUaGUgcGFyc2VkIHJlc3BvbnNlIGhlYWRlcnMuXG4gKiBAcHJvcGVydHkge09iamVjdH0gbGlua3MgLSBUaGUgcGFyc2VkIHJlc3BvbnNlIGxpbmtzLlxuICogQHByb3BlcnR5IHtNYXBpUmVxdWVzdH0gcmVxdWVzdCAtIFRoZSByZXNwb25zZSdzIG9yaWdpbmF0aW5nIGBNYXBpUmVxdWVzdGAuXG4gKi9cblxuLyoqXG4gKiBAaWdub3JlXG4gKiBAcGFyYW0ge01hcGlSZXF1ZXN0fSByZXF1ZXN0XG4gKiBAcGFyYW0ge09iamVjdH0gcmVzcG9uc2VEYXRhXG4gKiBAcGFyYW0ge09iamVjdH0gcmVzcG9uc2VEYXRhLmhlYWRlcnNcbiAqIEBwYXJhbSB7c3RyaW5nfSByZXNwb25zZURhdGEuYm9keVxuICogQHBhcmFtIHtudW1iZXJ9IHJlc3BvbnNlRGF0YS5zdGF0dXNDb2RlXG4gKi9cbmZ1bmN0aW9uIE1hcGlSZXNwb25zZShyZXF1ZXN0LCByZXNwb25zZURhdGEpIHtcbiAgdGhpcy5yZXF1ZXN0ID0gcmVxdWVzdDtcbiAgdGhpcy5oZWFkZXJzID0gcmVzcG9uc2VEYXRhLmhlYWRlcnM7XG4gIHRoaXMucmF3Qm9keSA9IHJlc3BvbnNlRGF0YS5ib2R5O1xuICB0aGlzLnN0YXR1c0NvZGUgPSByZXNwb25zZURhdGEuc3RhdHVzQ29kZTtcbiAgdHJ5IHtcbiAgICB0aGlzLmJvZHkgPSBKU09OLnBhcnNlKHJlc3BvbnNlRGF0YS5ib2R5IHx8ICd7fScpO1xuICB9IGNhdGNoIChwYXJzZUVycm9yKSB7XG4gICAgdGhpcy5ib2R5ID0gcmVzcG9uc2VEYXRhLmJvZHk7XG4gIH1cbiAgdGhpcy5saW5rcyA9IHBhcnNlTGlua0hlYWRlcih0aGlzLmhlYWRlcnMubGluayk7XG59XG5cbi8qKlxuICogQ2hlY2sgaWYgdGhlcmUgaXMgYSBuZXh0IHBhZ2UgdGhhdCB5b3UgY2FuIGZldGNoLlxuICpcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5NYXBpUmVzcG9uc2UucHJvdG90eXBlLmhhc05leHRQYWdlID0gZnVuY3Rpb24gaGFzTmV4dFBhZ2UoKSB7XG4gIHJldHVybiAhIXRoaXMubGlua3MubmV4dDtcbn07XG5cbi8qKlxuICogQ3JlYXRlIGEgcmVxdWVzdCBmb3IgdGhlIG5leHQgcGFnZSwgaWYgdGhlcmUgaXMgb25lLlxuICogSWYgdGhlcmUgaXMgbm8gbmV4dCBwYWdlLCByZXR1cm5zIGBudWxsYC5cbiAqXG4gKiBAcmV0dXJucyB7TWFwaVJlcXVlc3QgfCBudWxsfVxuICovXG5NYXBpUmVzcG9uc2UucHJvdG90eXBlLm5leHRQYWdlID0gZnVuY3Rpb24gbmV4dFBhZ2UoKSB7XG4gIGlmICghdGhpcy5oYXNOZXh0UGFnZSgpKSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIHRoaXMucmVxdWVzdC5fZXh0ZW5kKHtcbiAgICBwYXRoOiB0aGlzLmxpbmtzLm5leHQudXJsXG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBNYXBpUmVzcG9uc2U7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUVBOzs7Ozs7Ozs7Ozs7QUFZQTs7Ozs7Ozs7OztBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFFQTs7Ozs7OztBQUtBO0FBQ0E7QUFDQTtBQUVBOzs7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-response.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/constants.js":
/*!**********************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/constants.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = {\n  API_ORIGIN: 'https://api.mapbox.com',\n  EVENT_PROGRESS_DOWNLOAD: 'downloadProgress',\n  EVENT_PROGRESS_UPLOAD: 'uploadProgress',\n  EVENT_ERROR: 'error',\n  EVENT_RESPONSE: 'response',\n  ERROR_HTTP: 'HttpError',\n  ERROR_REQUEST_ABORTED: 'RequestAbortedError'\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9jb25zdGFudHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9jb25zdGFudHMuanM/OGNiNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBBUElfT1JJR0lOOiAnaHR0cHM6Ly9hcGkubWFwYm94LmNvbScsXG4gIEVWRU5UX1BST0dSRVNTX0RPV05MT0FEOiAnZG93bmxvYWRQcm9ncmVzcycsXG4gIEVWRU5UX1BST0dSRVNTX1VQTE9BRDogJ3VwbG9hZFByb2dyZXNzJyxcbiAgRVZFTlRfRVJST1I6ICdlcnJvcicsXG4gIEVWRU5UX1JFU1BPTlNFOiAncmVzcG9uc2UnLFxuICBFUlJPUl9IVFRQOiAnSHR0cEVycm9yJyxcbiAgRVJST1JfUkVRVUVTVF9BQk9SVEVEOiAnUmVxdWVzdEFib3J0ZWRFcnJvcidcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUEEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/lib/constants.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-headers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-headers.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction parseSingleHeader(raw) {\n  var boundary = raw.indexOf(':');\n  var name = raw.substring(0, boundary).trim().toLowerCase();\n  var value = raw.substring(boundary + 1).trim();\n  return {\n    name: name,\n    value: value\n  };\n}\n/**\n * Parse raw headers into an object with lowercase properties.\n * Does not fully parse headings into more complete data structure,\n * as larger libraries might do. Also does not deal with duplicate\n * headers because Node doesn't seem to deal with those well, so\n * we shouldn't let the browser either, for consistency.\n *\n * @param {string} raw\n * @returns {Object}\n */\n\n\nfunction parseHeaders(raw) {\n  var headers = {};\n\n  if (!raw) {\n    return headers;\n  }\n\n  raw.trim().split(/[\\r|\\n]+/).forEach(function (rawHeader) {\n    var parsed = parseSingleHeader(rawHeader);\n    headers[parsed.name] = parsed.value;\n  });\n  return headers;\n}\n\nmodule.exports = parseHeaders;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9oZWxwZXJzL3BhcnNlLWhlYWRlcnMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9oZWxwZXJzL3BhcnNlLWhlYWRlcnMuanM/NzJiYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIHBhcnNlU2luZ2xlSGVhZGVyKHJhdykge1xuICB2YXIgYm91bmRhcnkgPSByYXcuaW5kZXhPZignOicpO1xuICB2YXIgbmFtZSA9IHJhd1xuICAgIC5zdWJzdHJpbmcoMCwgYm91bmRhcnkpXG4gICAgLnRyaW0oKVxuICAgIC50b0xvd2VyQ2FzZSgpO1xuICB2YXIgdmFsdWUgPSByYXcuc3Vic3RyaW5nKGJvdW5kYXJ5ICsgMSkudHJpbSgpO1xuICByZXR1cm4ge1xuICAgIG5hbWU6IG5hbWUsXG4gICAgdmFsdWU6IHZhbHVlXG4gIH07XG59XG5cbi8qKlxuICogUGFyc2UgcmF3IGhlYWRlcnMgaW50byBhbiBvYmplY3Qgd2l0aCBsb3dlcmNhc2UgcHJvcGVydGllcy5cbiAqIERvZXMgbm90IGZ1bGx5IHBhcnNlIGhlYWRpbmdzIGludG8gbW9yZSBjb21wbGV0ZSBkYXRhIHN0cnVjdHVyZSxcbiAqIGFzIGxhcmdlciBsaWJyYXJpZXMgbWlnaHQgZG8uIEFsc28gZG9lcyBub3QgZGVhbCB3aXRoIGR1cGxpY2F0ZVxuICogaGVhZGVycyBiZWNhdXNlIE5vZGUgZG9lc24ndCBzZWVtIHRvIGRlYWwgd2l0aCB0aG9zZSB3ZWxsLCBzb1xuICogd2Ugc2hvdWxkbid0IGxldCB0aGUgYnJvd3NlciBlaXRoZXIsIGZvciBjb25zaXN0ZW5jeS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gcmF3XG4gKiBAcmV0dXJucyB7T2JqZWN0fVxuICovXG5mdW5jdGlvbiBwYXJzZUhlYWRlcnMocmF3KSB7XG4gIHZhciBoZWFkZXJzID0ge307XG4gIGlmICghcmF3KSB7XG4gICAgcmV0dXJuIGhlYWRlcnM7XG4gIH1cblxuICByYXdcbiAgICAudHJpbSgpXG4gICAgLnNwbGl0KC9bXFxyfFxcbl0rLylcbiAgICAuZm9yRWFjaChmdW5jdGlvbihyYXdIZWFkZXIpIHtcbiAgICAgIHZhciBwYXJzZWQgPSBwYXJzZVNpbmdsZUhlYWRlcihyYXdIZWFkZXIpO1xuICAgICAgaGVhZGVyc1twYXJzZWQubmFtZV0gPSBwYXJzZWQudmFsdWU7XG4gICAgfSk7XG5cbiAgcmV0dXJuIGhlYWRlcnM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcGFyc2VIZWFkZXJzO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBRUE7Ozs7Ozs7Ozs7OztBQVVBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-headers.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-link-header.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-link-header.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // Like https://github.com/thlorenz/lib/parse-link-header but without any\n// additional dependencies.\n\nfunction parseParam(param) {\n  var parts = param.match(/\\s*(.+)\\s*=\\s*\"?([^\"]+)\"?/);\n  if (!parts) return null;\n  return {\n    key: parts[1],\n    value: parts[2]\n  };\n}\n\nfunction parseLink(link) {\n  var parts = link.match(/<?([^>]*)>(.*)/);\n  if (!parts) return null;\n  var linkUrl = parts[1];\n  var linkParams = parts[2].split(';');\n  var rel = null;\n  var parsedLinkParams = linkParams.reduce(function (result, param) {\n    var parsed = parseParam(param);\n    if (!parsed) return result;\n\n    if (parsed.key === 'rel') {\n      if (!rel) {\n        rel = parsed.value;\n      }\n\n      return result;\n    }\n\n    result[parsed.key] = parsed.value;\n    return result;\n  }, {});\n  if (!rel) return null;\n  return {\n    url: linkUrl,\n    rel: rel,\n    params: parsedLinkParams\n  };\n}\n/**\n * Parse a Link header.\n *\n * @param {string} linkHeader\n * @returns {{\n *   [string]: {\n *     url: string,\n *     params: { [string]: string }\n *   }\n * }}\n */\n\n\nfunction parseLinkHeader(linkHeader) {\n  if (!linkHeader) return {};\n  return linkHeader.split(/,\\s*</).reduce(function (result, link) {\n    var parsed = parseLink(link);\n    if (!parsed) return result; // rel value can be multiple whitespace-separated rels.\n\n    var splitRel = parsed.rel.split(/\\s+/);\n    splitRel.forEach(function (rel) {\n      if (!result[rel]) {\n        result[rel] = {\n          url: parsed.url,\n          params: parsed.params\n        };\n      }\n    });\n    return result;\n  }, {});\n}\n\nmodule.exports = parseLinkHeader;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9oZWxwZXJzL3BhcnNlLWxpbmstaGVhZGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtYXBib3gvbWFwYm94LXNkay9saWIvaGVscGVycy9wYXJzZS1saW5rLWhlYWRlci5qcz8wMzFiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy8gTGlrZSBodHRwczovL2dpdGh1Yi5jb20vdGhsb3JlbnovbGliL3BhcnNlLWxpbmstaGVhZGVyIGJ1dCB3aXRob3V0IGFueVxuLy8gYWRkaXRpb25hbCBkZXBlbmRlbmNpZXMuXG5cbmZ1bmN0aW9uIHBhcnNlUGFyYW0ocGFyYW0pIHtcbiAgdmFyIHBhcnRzID0gcGFyYW0ubWF0Y2goL1xccyooLispXFxzKj1cXHMqXCI/KFteXCJdKylcIj8vKTtcbiAgaWYgKCFwYXJ0cykgcmV0dXJuIG51bGw7XG5cbiAgcmV0dXJuIHtcbiAgICBrZXk6IHBhcnRzWzFdLFxuICAgIHZhbHVlOiBwYXJ0c1syXVxuICB9O1xufVxuXG5mdW5jdGlvbiBwYXJzZUxpbmsobGluaykge1xuICB2YXIgcGFydHMgPSBsaW5rLm1hdGNoKC88PyhbXj5dKik+KC4qKS8pO1xuICBpZiAoIXBhcnRzKSByZXR1cm4gbnVsbDtcblxuICB2YXIgbGlua1VybCA9IHBhcnRzWzFdO1xuICB2YXIgbGlua1BhcmFtcyA9IHBhcnRzWzJdLnNwbGl0KCc7Jyk7XG4gIHZhciByZWwgPSBudWxsO1xuICB2YXIgcGFyc2VkTGlua1BhcmFtcyA9IGxpbmtQYXJhbXMucmVkdWNlKGZ1bmN0aW9uKHJlc3VsdCwgcGFyYW0pIHtcbiAgICB2YXIgcGFyc2VkID0gcGFyc2VQYXJhbShwYXJhbSk7XG4gICAgaWYgKCFwYXJzZWQpIHJldHVybiByZXN1bHQ7XG4gICAgaWYgKHBhcnNlZC5rZXkgPT09ICdyZWwnKSB7XG4gICAgICBpZiAoIXJlbCkge1xuICAgICAgICByZWwgPSBwYXJzZWQudmFsdWU7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICByZXN1bHRbcGFyc2VkLmtleV0gPSBwYXJzZWQudmFsdWU7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfSwge30pO1xuICBpZiAoIXJlbCkgcmV0dXJuIG51bGw7XG5cbiAgcmV0dXJuIHtcbiAgICB1cmw6IGxpbmtVcmwsXG4gICAgcmVsOiByZWwsXG4gICAgcGFyYW1zOiBwYXJzZWRMaW5rUGFyYW1zXG4gIH07XG59XG5cbi8qKlxuICogUGFyc2UgYSBMaW5rIGhlYWRlci5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbGlua0hlYWRlclxuICogQHJldHVybnMge3tcbiAqICAgW3N0cmluZ106IHtcbiAqICAgICB1cmw6IHN0cmluZyxcbiAqICAgICBwYXJhbXM6IHsgW3N0cmluZ106IHN0cmluZyB9XG4gKiAgIH1cbiAqIH19XG4gKi9cbmZ1bmN0aW9uIHBhcnNlTGlua0hlYWRlcihsaW5rSGVhZGVyKSB7XG4gIGlmICghbGlua0hlYWRlcikgcmV0dXJuIHt9O1xuXG4gIHJldHVybiBsaW5rSGVhZGVyLnNwbGl0KC8sXFxzKjwvKS5yZWR1Y2UoZnVuY3Rpb24ocmVzdWx0LCBsaW5rKSB7XG4gICAgdmFyIHBhcnNlZCA9IHBhcnNlTGluayhsaW5rKTtcbiAgICBpZiAoIXBhcnNlZCkgcmV0dXJuIHJlc3VsdDtcbiAgICAvLyByZWwgdmFsdWUgY2FuIGJlIG11bHRpcGxlIHdoaXRlc3BhY2Utc2VwYXJhdGVkIHJlbHMuXG4gICAgdmFyIHNwbGl0UmVsID0gcGFyc2VkLnJlbC5zcGxpdCgvXFxzKy8pO1xuICAgIHNwbGl0UmVsLmZvckVhY2goZnVuY3Rpb24ocmVsKSB7XG4gICAgICBpZiAoIXJlc3VsdFtyZWxdKSB7XG4gICAgICAgIHJlc3VsdFtyZWxdID0ge1xuICAgICAgICAgIHVybDogcGFyc2VkLnVybCxcbiAgICAgICAgICBwYXJhbXM6IHBhcnNlZC5wYXJhbXNcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9LCB7fSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcGFyc2VMaW5rSGVhZGVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTtBQUVBOzs7Ozs7Ozs7Ozs7O0FBV0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-link-header.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/helpers/url-utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/helpers/url-utils.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // Encode each item of an array individually. The comma\n// delimiters should not themselves be encoded.\n\nfunction encodeArray(arrayValue) {\n  return arrayValue.map(encodeURIComponent).join(',');\n}\n\nfunction encodeValue(value) {\n  if (Array.isArray(value)) {\n    return encodeArray(value);\n  }\n\n  return encodeURIComponent(String(value));\n}\n/**\n * Append a query parameter to a URL.\n *\n * @param {string} url\n * @param {string} key\n * @param {string|number|boolean|Array<*>>} [value] - Provide an array\n *   if the value is a list and commas between values need to be\n *   preserved, unencoded.\n * @returns {string} - Modified URL.\n */\n\n\nfunction appendQueryParam(url, key, value) {\n  if (value === false || value === null) {\n    return url;\n  }\n\n  var punctuation = /\\?/.test(url) ? '&' : '?';\n  var query = encodeURIComponent(key);\n\n  if (value !== undefined && value !== '' && value !== true) {\n    query += '=' + encodeValue(value);\n  }\n\n  return '' + url + punctuation + query;\n}\n/**\n * Derive a query string from an object and append it\n * to a URL.\n *\n * @param {string} url\n * @param {Object} [queryObject] - Values should be primitives.\n * @returns {string} - Modified URL.\n */\n\n\nfunction appendQueryObject(url, queryObject) {\n  if (!queryObject) {\n    return url;\n  }\n\n  var result = url;\n  Object.keys(queryObject).forEach(function (key) {\n    var value = queryObject[key];\n\n    if (value === undefined) {\n      return;\n    }\n\n    if (Array.isArray(value)) {\n      value = value.filter(function (v) {\n        return !!v;\n      }).join(',');\n    }\n\n    result = appendQueryParam(result, key, value);\n  });\n  return result;\n}\n/**\n * Prepend an origin to a URL. If the URL already has an\n * origin, do nothing.\n *\n * @param {string} url\n * @param {string} origin\n * @returns {string} - Modified URL.\n */\n\n\nfunction prependOrigin(url, origin) {\n  if (!origin) {\n    return url;\n  }\n\n  if (url.slice(0, 4) === 'http') {\n    return url;\n  }\n\n  var delimiter = url[0] === '/' ? '' : '/';\n  return '' + origin.replace(/\\/$/, '') + delimiter + url;\n}\n/**\n * Interpolate values into a route with express-style,\n * colon-prefixed route parameters.\n *\n * @param {string} route\n * @param {Object} [params] - Values should be primitives\n *   or arrays of primitives. Provide an array if the value\n *   is a list and commas between values need to be\n *   preserved, unencoded.\n * @returns {string} - Modified URL.\n */\n\n\nfunction interpolateRouteParams(route, params) {\n  if (!params) {\n    return route;\n  }\n\n  return route.replace(/\\/:([a-zA-Z0-9]+)/g, function (_, paramId) {\n    var value = params[paramId];\n\n    if (value === undefined) {\n      throw new Error('Unspecified route parameter ' + paramId);\n    }\n\n    var preppedValue = encodeValue(value);\n    return '/' + preppedValue;\n  });\n}\n\nmodule.exports = {\n  appendQueryObject: appendQueryObject,\n  appendQueryParam: appendQueryParam,\n  prependOrigin: prependOrigin,\n  interpolateRouteParams: interpolateRouteParams\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL2xpYi9oZWxwZXJzL3VybC11dGlscy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbWFwYm94L21hcGJveC1zZGsvbGliL2hlbHBlcnMvdXJsLXV0aWxzLmpzPzc3NGEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBFbmNvZGUgZWFjaCBpdGVtIG9mIGFuIGFycmF5IGluZGl2aWR1YWxseS4gVGhlIGNvbW1hXG4vLyBkZWxpbWl0ZXJzIHNob3VsZCBub3QgdGhlbXNlbHZlcyBiZSBlbmNvZGVkLlxuZnVuY3Rpb24gZW5jb2RlQXJyYXkoYXJyYXlWYWx1ZSkge1xuICByZXR1cm4gYXJyYXlWYWx1ZS5tYXAoZW5jb2RlVVJJQ29tcG9uZW50KS5qb2luKCcsJyk7XG59XG5cbmZ1bmN0aW9uIGVuY29kZVZhbHVlKHZhbHVlKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIHJldHVybiBlbmNvZGVBcnJheSh2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChTdHJpbmcodmFsdWUpKTtcbn1cblxuLyoqXG4gKiBBcHBlbmQgYSBxdWVyeSBwYXJhbWV0ZXIgdG8gYSBVUkwuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybFxuICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICogQHBhcmFtIHtzdHJpbmd8bnVtYmVyfGJvb2xlYW58QXJyYXk8Kj4+fSBbdmFsdWVdIC0gUHJvdmlkZSBhbiBhcnJheVxuICogICBpZiB0aGUgdmFsdWUgaXMgYSBsaXN0IGFuZCBjb21tYXMgYmV0d2VlbiB2YWx1ZXMgbmVlZCB0byBiZVxuICogICBwcmVzZXJ2ZWQsIHVuZW5jb2RlZC5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IC0gTW9kaWZpZWQgVVJMLlxuICovXG5mdW5jdGlvbiBhcHBlbmRRdWVyeVBhcmFtKHVybCwga2V5LCB2YWx1ZSkge1xuICBpZiAodmFsdWUgPT09IGZhbHNlIHx8IHZhbHVlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuICB2YXIgcHVuY3R1YXRpb24gPSAvXFw/Ly50ZXN0KHVybCkgPyAnJicgOiAnPyc7XG4gIHZhciBxdWVyeSA9IGVuY29kZVVSSUNvbXBvbmVudChrZXkpO1xuICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCAmJiB2YWx1ZSAhPT0gJycgJiYgdmFsdWUgIT09IHRydWUpIHtcbiAgICBxdWVyeSArPSAnPScgKyBlbmNvZGVWYWx1ZSh2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuICcnICsgdXJsICsgcHVuY3R1YXRpb24gKyBxdWVyeTtcbn1cblxuLyoqXG4gKiBEZXJpdmUgYSBxdWVyeSBzdHJpbmcgZnJvbSBhbiBvYmplY3QgYW5kIGFwcGVuZCBpdFxuICogdG8gYSBVUkwuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybFxuICogQHBhcmFtIHtPYmplY3R9IFtxdWVyeU9iamVjdF0gLSBWYWx1ZXMgc2hvdWxkIGJlIHByaW1pdGl2ZXMuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSAtIE1vZGlmaWVkIFVSTC5cbiAqL1xuZnVuY3Rpb24gYXBwZW5kUXVlcnlPYmplY3QodXJsLCBxdWVyeU9iamVjdCkge1xuICBpZiAoIXF1ZXJ5T2JqZWN0KSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuXG4gIHZhciByZXN1bHQgPSB1cmw7XG4gIE9iamVjdC5rZXlzKHF1ZXJ5T2JqZWN0KS5mb3JFYWNoKGZ1bmN0aW9uKGtleSkge1xuICAgIHZhciB2YWx1ZSA9IHF1ZXJ5T2JqZWN0W2tleV07XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICB2YWx1ZSA9IHZhbHVlXG4gICAgICAgIC5maWx0ZXIoZnVuY3Rpb24odikge1xuICAgICAgICAgIHJldHVybiAhIXY7XG4gICAgICAgIH0pXG4gICAgICAgIC5qb2luKCcsJyk7XG4gICAgfVxuICAgIHJlc3VsdCA9IGFwcGVuZFF1ZXJ5UGFyYW0ocmVzdWx0LCBrZXksIHZhbHVlKTtcbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogUHJlcGVuZCBhbiBvcmlnaW4gdG8gYSBVUkwuIElmIHRoZSBVUkwgYWxyZWFkeSBoYXMgYW5cbiAqIG9yaWdpbiwgZG8gbm90aGluZy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsXG4gKiBAcGFyYW0ge3N0cmluZ30gb3JpZ2luXG4gKiBAcmV0dXJucyB7c3RyaW5nfSAtIE1vZGlmaWVkIFVSTC5cbiAqL1xuZnVuY3Rpb24gcHJlcGVuZE9yaWdpbih1cmwsIG9yaWdpbikge1xuICBpZiAoIW9yaWdpbikge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICBpZiAodXJsLnNsaWNlKDAsIDQpID09PSAnaHR0cCcpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG5cbiAgdmFyIGRlbGltaXRlciA9IHVybFswXSA9PT0gJy8nID8gJycgOiAnLyc7XG4gIHJldHVybiAnJyArIG9yaWdpbi5yZXBsYWNlKC9cXC8kLywgJycpICsgZGVsaW1pdGVyICsgdXJsO1xufVxuXG4vKipcbiAqIEludGVycG9sYXRlIHZhbHVlcyBpbnRvIGEgcm91dGUgd2l0aCBleHByZXNzLXN0eWxlLFxuICogY29sb24tcHJlZml4ZWQgcm91dGUgcGFyYW1ldGVycy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gcm91dGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbcGFyYW1zXSAtIFZhbHVlcyBzaG91bGQgYmUgcHJpbWl0aXZlc1xuICogICBvciBhcnJheXMgb2YgcHJpbWl0aXZlcy4gUHJvdmlkZSBhbiBhcnJheSBpZiB0aGUgdmFsdWVcbiAqICAgaXMgYSBsaXN0IGFuZCBjb21tYXMgYmV0d2VlbiB2YWx1ZXMgbmVlZCB0byBiZVxuICogICBwcmVzZXJ2ZWQsIHVuZW5jb2RlZC5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IC0gTW9kaWZpZWQgVVJMLlxuICovXG5mdW5jdGlvbiBpbnRlcnBvbGF0ZVJvdXRlUGFyYW1zKHJvdXRlLCBwYXJhbXMpIHtcbiAgaWYgKCFwYXJhbXMpIHtcbiAgICByZXR1cm4gcm91dGU7XG4gIH1cbiAgcmV0dXJuIHJvdXRlLnJlcGxhY2UoL1xcLzooW2EtekEtWjAtOV0rKS9nLCBmdW5jdGlvbihfLCBwYXJhbUlkKSB7XG4gICAgdmFyIHZhbHVlID0gcGFyYW1zW3BhcmFtSWRdO1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vuc3BlY2lmaWVkIHJvdXRlIHBhcmFtZXRlciAnICsgcGFyYW1JZCk7XG4gICAgfVxuICAgIHZhciBwcmVwcGVkVmFsdWUgPSBlbmNvZGVWYWx1ZSh2YWx1ZSk7XG4gICAgcmV0dXJuICcvJyArIHByZXBwZWRWYWx1ZTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBhcHBlbmRRdWVyeU9iamVjdDogYXBwZW5kUXVlcnlPYmplY3QsXG4gIGFwcGVuZFF1ZXJ5UGFyYW06IGFwcGVuZFF1ZXJ5UGFyYW0sXG4gIHByZXBlbmRPcmlnaW46IHByZXBlbmRPcmlnaW4sXG4gIGludGVycG9sYXRlUm91dGVQYXJhbXM6IGludGVycG9sYXRlUm91dGVQYXJhbXNcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBR0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFFQTs7Ozs7Ozs7Ozs7O0FBVUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUVBOzs7Ozs7Ozs7O0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7Ozs7Ozs7O0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7Ozs7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/lib/helpers/url-utils.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/node_modules/eventemitter3/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/node_modules/eventemitter3/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar has = Object.prototype.hasOwnProperty,\n    prefix = '~';\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\n\nfunction Events() {} //\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\n\n\nif (Object.create) {\n  Events.prototype = Object.create(null); //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n\n  if (!new Events().__proto__) prefix = false;\n}\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\n\n\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\n\n\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once),\n      evt = prefix ? prefix + event : event;\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);else emitter._events[evt] = [emitter._events[evt], listener];\n  return emitter;\n}\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\n\n\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();else delete emitter._events[evt];\n}\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\n\n\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\n\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = [],\n      events,\n      name;\n  if (this._eventsCount === 0) return names;\n\n  for (name in events = this._events) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\n\n\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event,\n      handlers = this._events[evt];\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\n\n\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event,\n      listeners = this._events[evt];\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\n\n\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n  if (!this._events[evt]) return false;\n  var listeners = this._events[evt],\n      len = arguments.length,\n      args,\n      i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1:\n        return listeners.fn.call(listeners.context), true;\n\n      case 2:\n        return listeners.fn.call(listeners.context, a1), true;\n\n      case 3:\n        return listeners.fn.call(listeners.context, a1, a2), true;\n\n      case 4:\n        return listeners.fn.call(listeners.context, a1, a2, a3), true;\n\n      case 5:\n        return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n\n      case 6:\n        return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len - 1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length,\n        j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1:\n          listeners[i].fn.call(listeners[i].context);\n          break;\n\n        case 2:\n          listeners[i].fn.call(listeners[i].context, a1);\n          break;\n\n        case 3:\n          listeners[i].fn.call(listeners[i].context, a1, a2);\n          break;\n\n        case 4:\n          listeners[i].fn.call(listeners[i].context, a1, a2, a3);\n          break;\n\n        default:\n          if (!args) for (j = 1, args = new Array(len - 1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\n\n\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\n\n\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\n\n\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n  if (!this._events[evt]) return this;\n\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {\n        events.push(listeners[i]);\n      }\n    } //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n\n\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;else clearEvent(this, evt);\n  }\n\n  return this;\n};\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\n\n\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n}; //\n// Alias methods names because people roll like that.\n//\n\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on; //\n// Expose the prefix.\n//\n\nEventEmitter.prefixed = prefix; //\n// Allow `EventEmitter` to be imported as module namespace.\n//\n\nEventEmitter.EventEmitter = EventEmitter; //\n// Expose the module.\n//\n\nif (true) {\n  module.exports = EventEmitter;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/node_modules/eventemitter3/index.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/services/geocoding.js":
/*!***************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/geocoding.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar xtend = __webpack_require__(/*! xtend */ \"./node_modules/xtend/immutable.js\");\n\nvar v = __webpack_require__(/*! ./service-helpers/validator */ \"./node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js\");\n\nvar pick = __webpack_require__(/*! ./service-helpers/pick */ \"./node_modules/@mapbox/mapbox-sdk/services/service-helpers/pick.js\");\n\nvar stringifyBooleans = __webpack_require__(/*! ./service-helpers/stringify-booleans */ \"./node_modules/@mapbox/mapbox-sdk/services/service-helpers/stringify-booleans.js\");\n\nvar createServiceFactory = __webpack_require__(/*! ./service-helpers/create-service-factory */ \"./node_modules/@mapbox/mapbox-sdk/services/service-helpers/create-service-factory.js\");\n/**\n * Geocoding API service.\n *\n * Learn more about this service and its responses in\n * [the HTTP service documentation](https://www.mapbox.com/api-documentation/#geocoding).\n */\n\n\nvar Geocoding = {};\nvar featureTypes = ['country', 'region', 'postcode', 'district', 'place', 'locality', 'neighborhood', 'address', 'poi', 'poi.landmark'];\n/**\n * Search for a place.\n *\n * See the [public documentation](https://www.mapbox.com/api-documentation/#search-for-places).\n *\n * @param {Object} config\n * @param {string} config.query - A place name.\n * @param {'mapbox.places'|'mapbox.places-permanent'} [config.mode=\"mapbox.places\"] - Either `mapbox.places` for ephemeral geocoding, or `mapbox.places-permanent` for storing results and batch geocoding.\n * @param {Array<string>} [config.countries] - Limits results to the specified countries.\n *   Each item in the array should be an [ISO 3166 alpha 2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n * @param {Coordinates} [config.proximity] - Bias local results based on a provided location.\n * @param {Array<'country'|'region'|'postcode'|'district'|'place'|'locality'|'neighborhood'|'address'|'poi'|'poi.landmark'>} [config.types] - Filter results by feature types.\n * @param {boolean} [config.autocomplete=true] - Return autocomplete results or not.\n * @param {BoundingBox} [config.bbox] - Limit results to a bounding box.\n * @param {number} [config.limit=5] - Limit the number of results returned.\n * @param {Array<string>} [config.language] - Specify the language to use for response text and, for forward geocoding, query result weighting.\n *  Options are [IETF language tags](https://en.wikipedia.org/wiki/IETF_language_tag) comprised of a mandatory\n *  [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) and optionally one or more IETF subtags for country or script.\n * @return {MapiRequest}\n */\n\nGeocoding.forwardGeocode = function (config) {\n  v.assertShape({\n    query: v.required(v.string),\n    mode: v.oneOf('mapbox.places', 'mapbox.places-permanent'),\n    countries: v.arrayOf(v.string),\n    proximity: v.coordinates,\n    types: v.arrayOf(v.oneOf(featureTypes)),\n    autocomplete: v.boolean,\n    bbox: v.arrayOf(v.number),\n    limit: v.number,\n    language: v.arrayOf(v.string)\n  })(config);\n  config.mode = config.mode || 'mapbox.places';\n  var query = stringifyBooleans(xtend({\n    country: config.countries\n  }, pick(config, ['proximity', 'types', 'autocomplete', 'bbox', 'limit', 'language'])));\n  return this.client.createRequest({\n    method: 'GET',\n    path: '/geocoding/v5/:mode/:query.json',\n    params: pick(config, ['mode', 'query']),\n    query: query\n  });\n};\n/**\n * Search for places near coordinates.\n *\n * See the [public documentation](https://www.mapbox.com/api-documentation/#retrieve-places-near-a-location).\n *\n * @param {Object} config\n * @param {Coordinates} config.query - Coordinates at which features will be searched.\n * @param {'mapbox.places'|'mapbox.places-permanent'} [config.mode=\"mapbox.places\"] - Either `mapbox.places` for ephemeral geocoding, or `mapbox.places-permanent` for storing results and batch geocoding.\n * @param {Array<string>} [config.countries] - Limits results to the specified countries.\n *   Each item in the array should be an [ISO 3166 alpha 2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n * @param {Array<'country'|'region'|'postcode'|'district'|'place'|'locality'|'neighborhood'|'address'|'poi'|'poi.landmark'>} [config.types] - Filter results by feature types.\n * @param {BoundingBox} [config.bbox] - Limit results to a bounding box.\n * @param {number} [config.limit=1] - Limit the number of results returned. If using this option, you must provide a single item for `types`.\n * @param {Array<string>} [config.language] - Specify the language to use for response text and, for forward geocoding, query result weighting.\n *  Options are [IETF language tags](https://en.wikipedia.org/wiki/IETF_language_tag) comprised of a mandatory\n *  [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) and optionally one or more IETF subtags for country or script.\n * @param {'distance'|'score'} [config.reverseMode='distance'] - Set the factors that are used to sort nearby results.\n * @return {MapiRequest}\n */\n\n\nGeocoding.reverseGeocode = function (config) {\n  v.assertShape({\n    query: v.required(v.coordinates),\n    mode: v.oneOf('mapbox.places', 'mapbox.places-permanent'),\n    countries: v.arrayOf(v.string),\n    types: v.arrayOf(v.oneOf(featureTypes)),\n    bbox: v.arrayOf(v.number),\n    limit: v.number,\n    language: v.arrayOf(v.string),\n    reverseMode: v.oneOf('distance', 'score')\n  })(config);\n  config.mode = config.mode || 'mapbox.places';\n  var query = stringifyBooleans(xtend({\n    country: config.countries\n  }, pick(config, ['country', 'types', 'bbox', 'limit', 'language', 'reverseMode'])));\n  return this.client.createRequest({\n    method: 'GET',\n    path: '/geocoding/v5/:mode/:query.json',\n    params: pick(config, ['mode', 'query']),\n    query: query\n  });\n};\n\nmodule.exports = createServiceFactory(Geocoding);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/services/geocoding.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/services/service-helpers/create-service-factory.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/service-helpers/create-service-factory.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar MapiClient = __webpack_require__(/*! ../../lib/classes/mapi-client */ \"./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js\"); // This will create the environment-appropriate client.\n\n\nvar createClient = __webpack_require__(/*! ../../lib/client */ \"./node_modules/@mapbox/mapbox-sdk/lib/browser/browser-client.js\");\n\nfunction createServiceFactory(ServicePrototype) {\n  return function (clientOrConfig) {\n    var client;\n\n    if (MapiClient.prototype.isPrototypeOf(clientOrConfig)) {\n      client = clientOrConfig;\n    } else {\n      client = createClient(clientOrConfig);\n    }\n\n    var service = Object.create(ServicePrototype);\n    service.client = client;\n    return service;\n  };\n}\n\nmodule.exports = createServiceFactory;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL3NlcnZpY2VzL3NlcnZpY2UtaGVscGVycy9jcmVhdGUtc2VydmljZS1mYWN0b3J5LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtYXBib3gvbWFwYm94LXNkay9zZXJ2aWNlcy9zZXJ2aWNlLWhlbHBlcnMvY3JlYXRlLXNlcnZpY2UtZmFjdG9yeS5qcz8wYWVkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIE1hcGlDbGllbnQgPSByZXF1aXJlKCcuLi8uLi9saWIvY2xhc3Nlcy9tYXBpLWNsaWVudCcpO1xuLy8gVGhpcyB3aWxsIGNyZWF0ZSB0aGUgZW52aXJvbm1lbnQtYXBwcm9wcmlhdGUgY2xpZW50LlxudmFyIGNyZWF0ZUNsaWVudCA9IHJlcXVpcmUoJy4uLy4uL2xpYi9jbGllbnQnKTtcblxuZnVuY3Rpb24gY3JlYXRlU2VydmljZUZhY3RvcnkoU2VydmljZVByb3RvdHlwZSkge1xuICByZXR1cm4gZnVuY3Rpb24oY2xpZW50T3JDb25maWcpIHtcbiAgICB2YXIgY2xpZW50O1xuICAgIGlmIChNYXBpQ2xpZW50LnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGNsaWVudE9yQ29uZmlnKSkge1xuICAgICAgY2xpZW50ID0gY2xpZW50T3JDb25maWc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNsaWVudCA9IGNyZWF0ZUNsaWVudChjbGllbnRPckNvbmZpZyk7XG4gICAgfVxuICAgIHZhciBzZXJ2aWNlID0gT2JqZWN0LmNyZWF0ZShTZXJ2aWNlUHJvdG90eXBlKTtcbiAgICBzZXJ2aWNlLmNsaWVudCA9IGNsaWVudDtcbiAgICByZXR1cm4gc2VydmljZTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVTZXJ2aWNlRmFjdG9yeTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/services/service-helpers/create-service-factory.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/services/service-helpers/object-map.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/service-helpers/object-map.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction objectMap(obj, cb) {\n  return Object.keys(obj).reduce(function (result, key) {\n    result[key] = cb(key, obj[key]);\n    return result;\n  }, {});\n}\n\nmodule.exports = objectMap;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL3NlcnZpY2VzL3NlcnZpY2UtaGVscGVycy9vYmplY3QtbWFwLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtYXBib3gvbWFwYm94LXNkay9zZXJ2aWNlcy9zZXJ2aWNlLWhlbHBlcnMvb2JqZWN0LW1hcC5qcz80YTY5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gb2JqZWN0TWFwKG9iaiwgY2IpIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaikucmVkdWNlKGZ1bmN0aW9uKHJlc3VsdCwga2V5KSB7XG4gICAgcmVzdWx0W2tleV0gPSBjYihrZXksIG9ialtrZXldKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9LCB7fSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gb2JqZWN0TWFwO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/services/service-helpers/object-map.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/services/service-helpers/pick.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/service-helpers/pick.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Create a new object by picking properties off an existing object.\n * The second param can be overloaded as a callback for\n * more fine grained picking of properties.\n * @param {Object} source\n * @param {Array<string>|function(string, Object):boolean} keys\n * @returns {Object}\n */\n\nfunction pick(source, keys) {\n  var filter = function (key, val) {\n    return keys.indexOf(key) !== -1 && val !== undefined;\n  };\n\n  if (typeof keys === 'function') {\n    filter = keys;\n  }\n\n  return Object.keys(source).filter(function (key) {\n    return filter(key, source[key]);\n  }).reduce(function (result, key) {\n    result[key] = source[key];\n    return result;\n  }, {});\n}\n\nmodule.exports = pick;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL3NlcnZpY2VzL3NlcnZpY2UtaGVscGVycy9waWNrLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtYXBib3gvbWFwYm94LXNkay9zZXJ2aWNlcy9zZXJ2aWNlLWhlbHBlcnMvcGljay5qcz82ZGEzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDcmVhdGUgYSBuZXcgb2JqZWN0IGJ5IHBpY2tpbmcgcHJvcGVydGllcyBvZmYgYW4gZXhpc3Rpbmcgb2JqZWN0LlxuICogVGhlIHNlY29uZCBwYXJhbSBjYW4gYmUgb3ZlcmxvYWRlZCBhcyBhIGNhbGxiYWNrIGZvclxuICogbW9yZSBmaW5lIGdyYWluZWQgcGlja2luZyBvZiBwcm9wZXJ0aWVzLlxuICogQHBhcmFtIHtPYmplY3R9IHNvdXJjZVxuICogQHBhcmFtIHtBcnJheTxzdHJpbmc+fGZ1bmN0aW9uKHN0cmluZywgT2JqZWN0KTpib29sZWFufSBrZXlzXG4gKiBAcmV0dXJucyB7T2JqZWN0fVxuICovXG5mdW5jdGlvbiBwaWNrKHNvdXJjZSwga2V5cykge1xuICB2YXIgZmlsdGVyID0gZnVuY3Rpb24oa2V5LCB2YWwpIHtcbiAgICByZXR1cm4ga2V5cy5pbmRleE9mKGtleSkgIT09IC0xICYmIHZhbCAhPT0gdW5kZWZpbmVkO1xuICB9O1xuXG4gIGlmICh0eXBlb2Yga2V5cyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZpbHRlciA9IGtleXM7XG4gIH1cblxuICByZXR1cm4gT2JqZWN0LmtleXMoc291cmNlKVxuICAgIC5maWx0ZXIoZnVuY3Rpb24oa2V5KSB7XG4gICAgICByZXR1cm4gZmlsdGVyKGtleSwgc291cmNlW2tleV0pO1xuICAgIH0pXG4gICAgLnJlZHVjZShmdW5jdGlvbihyZXN1bHQsIGtleSkge1xuICAgICAgcmVzdWx0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSwge30pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHBpY2s7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBRUE7Ozs7Ozs7OztBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/services/service-helpers/pick.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/services/service-helpers/stringify-booleans.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/service-helpers/stringify-booleans.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar objectMap = __webpack_require__(/*! ./object-map */ \"./node_modules/@mapbox/mapbox-sdk/services/service-helpers/object-map.js\");\n/**\n * Stringify all the boolean values in an object, so true becomes \"true\".\n *\n * @param {Object} obj\n * @returns {Object}\n */\n\n\nfunction stringifyBoolean(obj) {\n  return objectMap(obj, function (_, value) {\n    return typeof value === 'boolean' ? JSON.stringify(value) : value;\n  });\n}\n\nmodule.exports = stringifyBoolean;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL3NlcnZpY2VzL3NlcnZpY2UtaGVscGVycy9zdHJpbmdpZnktYm9vbGVhbnMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL3NlcnZpY2VzL3NlcnZpY2UtaGVscGVycy9zdHJpbmdpZnktYm9vbGVhbnMuanM/Nzg1NCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBvYmplY3RNYXAgPSByZXF1aXJlKCcuL29iamVjdC1tYXAnKTtcblxuLyoqXG4gKiBTdHJpbmdpZnkgYWxsIHRoZSBib29sZWFuIHZhbHVlcyBpbiBhbiBvYmplY3QsIHNvIHRydWUgYmVjb21lcyBcInRydWVcIi5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqXG4gKiBAcmV0dXJucyB7T2JqZWN0fVxuICovXG5mdW5jdGlvbiBzdHJpbmdpZnlCb29sZWFuKG9iaikge1xuICByZXR1cm4gb2JqZWN0TWFwKG9iaiwgZnVuY3Rpb24oXywgdmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnYm9vbGVhbicgPyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgOiB2YWx1ZTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RyaW5naWZ5Qm9vbGVhbjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/services/service-helpers/stringify-booleans.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar xtend = __webpack_require__(/*! xtend */ \"./node_modules/xtend/immutable.js\");\n\nvar v = __webpack_require__(/*! @mapbox/fusspot */ \"./node_modules/@mapbox/fusspot/lib/index.js\");\n\nfunction file(value) {\n  // If we're in a browser so Blob is available, the file must be that.\n  // In Node, however, it could be a filepath or a pipeable (Readable) stream.\n  if (typeof window !== 'undefined') {\n    if (value instanceof global.Blob || value instanceof global.ArrayBuffer) {\n      return;\n    }\n\n    return 'Blob or ArrayBuffer';\n  }\n\n  if (typeof value === 'string' || value.pipe !== undefined) {\n    return;\n  }\n\n  return 'Filename or Readable stream';\n}\n\nfunction assertShape(validatorObj, apiName) {\n  return v.assert(v.strictShape(validatorObj), apiName);\n}\n\nfunction date(value) {\n  var msg = 'date';\n\n  if (typeof value === 'boolean') {\n    return msg;\n  }\n\n  try {\n    var date = new Date(value);\n\n    if (date.getTime && isNaN(date.getTime())) {\n      return msg;\n    }\n  } catch (e) {\n    return msg;\n  }\n}\n\nfunction coordinates(value) {\n  return v.tuple(v.number, v.number)(value);\n}\n\nmodule.exports = xtend(v, {\n  file: file,\n  date: date,\n  coordinates: coordinates,\n  assertShape: assertShape\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL3NlcnZpY2VzL3NlcnZpY2UtaGVscGVycy92YWxpZGF0b3IuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG1hcGJveC9tYXBib3gtc2RrL3NlcnZpY2VzL3NlcnZpY2UtaGVscGVycy92YWxpZGF0b3IuanM/MmFkNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB4dGVuZCA9IHJlcXVpcmUoJ3h0ZW5kJyk7XG52YXIgdiA9IHJlcXVpcmUoJ0BtYXBib3gvZnVzc3BvdCcpO1xuXG5mdW5jdGlvbiBmaWxlKHZhbHVlKSB7XG4gIC8vIElmIHdlJ3JlIGluIGEgYnJvd3NlciBzbyBCbG9iIGlzIGF2YWlsYWJsZSwgdGhlIGZpbGUgbXVzdCBiZSB0aGF0LlxuICAvLyBJbiBOb2RlLCBob3dldmVyLCBpdCBjb3VsZCBiZSBhIGZpbGVwYXRoIG9yIGEgcGlwZWFibGUgKFJlYWRhYmxlKSBzdHJlYW0uXG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIGdsb2JhbC5CbG9iIHx8IHZhbHVlIGluc3RhbmNlb2YgZ2xvYmFsLkFycmF5QnVmZmVyKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHJldHVybiAnQmxvYiBvciBBcnJheUJ1ZmZlcic7XG4gIH1cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgfHwgdmFsdWUucGlwZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHJldHVybiAnRmlsZW5hbWUgb3IgUmVhZGFibGUgc3RyZWFtJztcbn1cblxuZnVuY3Rpb24gYXNzZXJ0U2hhcGUodmFsaWRhdG9yT2JqLCBhcGlOYW1lKSB7XG4gIHJldHVybiB2LmFzc2VydCh2LnN0cmljdFNoYXBlKHZhbGlkYXRvck9iaiksIGFwaU5hbWUpO1xufVxuXG5mdW5jdGlvbiBkYXRlKHZhbHVlKSB7XG4gIHZhciBtc2cgPSAnZGF0ZSc7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJykge1xuICAgIHJldHVybiBtc2c7XG4gIH1cbiAgdHJ5IHtcbiAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKHZhbHVlKTtcbiAgICBpZiAoZGF0ZS5nZXRUaW1lICYmIGlzTmFOKGRhdGUuZ2V0VGltZSgpKSkge1xuICAgICAgcmV0dXJuIG1zZztcbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gbXNnO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNvb3JkaW5hdGVzKHZhbHVlKSB7XG4gIHJldHVybiB2LnR1cGxlKHYubnVtYmVyLCB2Lm51bWJlcikodmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHh0ZW5kKHYsIHtcbiAgZmlsZTogZmlsZSxcbiAgZGF0ZTogZGF0ZSxcbiAgY29vcmRpbmF0ZXM6IGNvb3JkaW5hdGVzLFxuICBhc3NlcnRTaGFwZTogYXNzZXJ0U2hhcGVcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/parse-mapbox-token/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@mapbox/parse-mapbox-token/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar base64 = __webpack_require__(/*! base-64 */ \"./node_modules/base-64/base64.js\");\n\nvar tokenCache = {};\n\nfunction parseToken(token) {\n  if (tokenCache[token]) {\n    return tokenCache[token];\n  }\n\n  var parts = token.split('.');\n  var usage = parts[0];\n  var rawPayload = parts[1];\n\n  if (!rawPayload) {\n    throw new Error('Invalid token');\n  }\n\n  var parsedPayload = parsePaylod(rawPayload);\n  var result = {\n    usage: usage,\n    user: parsedPayload.u\n  };\n  if (has(parsedPayload, 'a')) result.authorization = parsedPayload.a;\n  if (has(parsedPayload, 'exp')) result.expires = parsedPayload.exp * 1000;\n  if (has(parsedPayload, 'iat')) result.created = parsedPayload.iat * 1000;\n  if (has(parsedPayload, 'scopes')) result.scopes = parsedPayload.scopes;\n  if (has(parsedPayload, 'client')) result.client = parsedPayload.client;\n  if (has(parsedPayload, 'll')) result.lastLogin = parsedPayload.ll;\n  if (has(parsedPayload, 'iu')) result.impersonator = parsedPayload.iu;\n  tokenCache[token] = result;\n  return result;\n}\n\nfunction parsePaylod(rawPayload) {\n  try {\n    return JSON.parse(base64.decode(rawPayload));\n  } catch (parseError) {\n    throw new Error('Invalid token');\n  }\n}\n\nfunction has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nmodule.exports = parseToken;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hcGJveC9wYXJzZS1tYXBib3gtdG9rZW4vaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG1hcGJveC9wYXJzZS1tYXBib3gtdG9rZW4vaW5kZXguanM/NjA4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBiYXNlNjQgPSByZXF1aXJlKCdiYXNlLTY0Jyk7XG5cbnZhciB0b2tlbkNhY2hlID0ge307XG5cbmZ1bmN0aW9uIHBhcnNlVG9rZW4odG9rZW4pIHtcbiAgaWYgKHRva2VuQ2FjaGVbdG9rZW5dKSB7XG4gICAgcmV0dXJuIHRva2VuQ2FjaGVbdG9rZW5dO1xuICB9XG5cbiAgdmFyIHBhcnRzID0gdG9rZW4uc3BsaXQoJy4nKTtcbiAgdmFyIHVzYWdlID0gcGFydHNbMF07XG4gIHZhciByYXdQYXlsb2FkID0gcGFydHNbMV07XG4gIGlmICghcmF3UGF5bG9hZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCB0b2tlbicpO1xuICB9XG5cbiAgdmFyIHBhcnNlZFBheWxvYWQgPSBwYXJzZVBheWxvZChyYXdQYXlsb2FkKTtcblxuICB2YXIgcmVzdWx0ID0ge1xuICAgIHVzYWdlOiB1c2FnZSxcbiAgICB1c2VyOiBwYXJzZWRQYXlsb2FkLnVcbiAgfTtcbiAgaWYgKGhhcyhwYXJzZWRQYXlsb2FkLCAnYScpKSByZXN1bHQuYXV0aG9yaXphdGlvbiA9IHBhcnNlZFBheWxvYWQuYTtcbiAgaWYgKGhhcyhwYXJzZWRQYXlsb2FkLCAnZXhwJykpIHJlc3VsdC5leHBpcmVzID0gcGFyc2VkUGF5bG9hZC5leHAgKiAxMDAwO1xuICBpZiAoaGFzKHBhcnNlZFBheWxvYWQsICdpYXQnKSkgcmVzdWx0LmNyZWF0ZWQgPSBwYXJzZWRQYXlsb2FkLmlhdCAqIDEwMDA7XG4gIGlmIChoYXMocGFyc2VkUGF5bG9hZCwgJ3Njb3BlcycpKSByZXN1bHQuc2NvcGVzID0gcGFyc2VkUGF5bG9hZC5zY29wZXM7XG4gIGlmIChoYXMocGFyc2VkUGF5bG9hZCwgJ2NsaWVudCcpKSByZXN1bHQuY2xpZW50ID0gcGFyc2VkUGF5bG9hZC5jbGllbnQ7XG4gIGlmIChoYXMocGFyc2VkUGF5bG9hZCwgJ2xsJykpIHJlc3VsdC5sYXN0TG9naW4gPSBwYXJzZWRQYXlsb2FkLmxsO1xuICBpZiAoaGFzKHBhcnNlZFBheWxvYWQsICdpdScpKSByZXN1bHQuaW1wZXJzb25hdG9yID0gcGFyc2VkUGF5bG9hZC5pdTtcblxuICB0b2tlbkNhY2hlW3Rva2VuXSA9IHJlc3VsdDtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gcGFyc2VQYXlsb2QocmF3UGF5bG9hZCkge1xuICB0cnkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKGJhc2U2NC5kZWNvZGUocmF3UGF5bG9hZCkpO1xuICB9IGNhdGNoIChwYXJzZUVycm9yKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHRva2VuJyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFzKG9iaiwga2V5KSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHBhcnNlVG9rZW47XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/parse-mapbox-token/index.js\n");

/***/ }),

/***/ "./node_modules/base-64/base64.js":
/*!****************************************!*\
  !*** ./node_modules/base-64/base64.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;\n\n(function (root) {\n  // Detect free variables `exports`.\n  var freeExports =  true && exports; // Detect free variable `module`.\n\n  var freeModule =  true && module && module.exports == freeExports && module; // Detect free variable `global`, from Node.js or Browserified code, and use\n  // it as `root`.\n\n  var freeGlobal = typeof global == 'object' && global;\n\n  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n    root = freeGlobal;\n  }\n  /*--------------------------------------------------------------------------*/\n\n\n  var InvalidCharacterError = function (message) {\n    this.message = message;\n  };\n\n  InvalidCharacterError.prototype = new Error();\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  var error = function (message) {\n    // Note: the error messages used throughout this file match those used by\n    // the native `atob`/`btoa` implementation in Chromium.\n    throw new InvalidCharacterError(message);\n  };\n\n  var TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'; // http://whatwg.org/html/common-microsyntaxes.html#space-character\n\n  var REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g; // `decode` is designed to be fully compatible with `atob` as described in the\n  // HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n  // The optimized base64-decoding algorithm used is based on @atk’s excellent\n  // implementation. https://gist.github.com/atk/1020396\n\n  var decode = function (input) {\n    input = String(input).replace(REGEX_SPACE_CHARACTERS, '');\n    var length = input.length;\n\n    if (length % 4 == 0) {\n      input = input.replace(/==?$/, '');\n      length = input.length;\n    }\n\n    if (length % 4 == 1 || // http://whatwg.org/C#alphanumeric-ascii-characters\n    /[^+a-zA-Z0-9/]/.test(input)) {\n      error('Invalid character: the string to be decoded is not correctly encoded.');\n    }\n\n    var bitCounter = 0;\n    var bitStorage;\n    var buffer;\n    var output = '';\n    var position = -1;\n\n    while (++position < length) {\n      buffer = TABLE.indexOf(input.charAt(position));\n      bitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer; // Unless this is the first of a group of 4 characters…\n\n      if (bitCounter++ % 4) {\n        // …convert the first 8 bits to a single ASCII character.\n        output += String.fromCharCode(0xFF & bitStorage >> (-2 * bitCounter & 6));\n      }\n    }\n\n    return output;\n  }; // `encode` is designed to be fully compatible with `btoa` as described in the\n  // HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\n\n  var encode = function (input) {\n    input = String(input);\n\n    if (/[^\\0-\\xFF]/.test(input)) {\n      // Note: no need to special-case astral symbols here, as surrogates are\n      // matched, and the input is supposed to only contain ASCII anyway.\n      error('The string to be encoded contains characters outside of the ' + 'Latin1 range.');\n    }\n\n    var padding = input.length % 3;\n    var output = '';\n    var position = -1;\n    var a;\n    var b;\n    var c;\n    var d;\n    var buffer; // Make sure any padding is handled outside of the loop.\n\n    var length = input.length - padding;\n\n    while (++position < length) {\n      // Read three bytes, i.e. 24 bits.\n      a = input.charCodeAt(position) << 16;\n      b = input.charCodeAt(++position) << 8;\n      c = input.charCodeAt(++position);\n      buffer = a + b + c; // Turn the 24 bits into four chunks of 6 bits each, and append the\n      // matching character for each of them to the output.\n\n      output += TABLE.charAt(buffer >> 18 & 0x3F) + TABLE.charAt(buffer >> 12 & 0x3F) + TABLE.charAt(buffer >> 6 & 0x3F) + TABLE.charAt(buffer & 0x3F);\n    }\n\n    if (padding == 2) {\n      a = input.charCodeAt(position) << 8;\n      b = input.charCodeAt(++position);\n      buffer = a + b;\n      output += TABLE.charAt(buffer >> 10) + TABLE.charAt(buffer >> 4 & 0x3F) + TABLE.charAt(buffer << 2 & 0x3F) + '=';\n    } else if (padding == 1) {\n      buffer = input.charCodeAt(position);\n      output += TABLE.charAt(buffer >> 2) + TABLE.charAt(buffer << 4 & 0x3F) + '==';\n    }\n\n    return output;\n  };\n\n  var base64 = {\n    'encode': encode,\n    'decode': decode,\n    'version': '0.1.0'\n  }; // Some AMD build optimizers, like r.js, check for specific condition patterns\n  // like the following:\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return base64;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else { var key; }\n})(this);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module), __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/base-64/base64.js\n");

/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null;\nvar ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n  return Function.prototype.apply.call(target, receiver, args);\n};\nvar ReflectOwnKeys;\n\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys;\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n};\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\n\nmodule.exports = EventEmitter; // Backwards-compat with node 0.10.x\n\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\n\nvar defaultMaxListeners = 10;\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function () {\n    return defaultMaxListeners;\n  },\n  set: function (arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function () {\n  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}; // Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\n\n\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n\n  var doError = type === 'error';\n  var events = this._events;\n  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.\n\n  if (doError) {\n    var er;\n    if (args.length > 0) er = args[0];\n\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    } // At least give some kind of context to the user\n\n\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n  if (handler === undefined) return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n\n    for (var i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n\n      events = target._events;\n    }\n\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    } // Check for listener leak\n\n\n    m = $getMaxListeners(target);\n\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true; // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n\n      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener = function prependListener(type, listener) {\n  return _addListener(this, type, listener, true);\n};\n\nfunction onceWrapper() {\n  var args = [];\n\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = {\n    fired: false,\n    wrapFn: undefined,\n    target: target,\n    type: type,\n    listener: listener\n  };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  this.prependListener(type, _onceWrap(this, type, listener));\n  return this;\n}; // Emits a 'removeListener' event if and only if the listener was removed.\n\n\nEventEmitter.prototype.removeListener = function removeListener(type, listener) {\n  var list, events, position, i, originalListener;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = this._events;\n  if (events === undefined) return this;\n  list = events[type];\n  if (list === undefined) return this;\n\n  if (list === listener || list.listener === listener) {\n    if (--this._eventsCount === 0) this._events = Object.create(null);else {\n      delete events[type];\n      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n    }\n  } else if (typeof list !== 'function') {\n    position = -1;\n\n    for (i = list.length - 1; i >= 0; i--) {\n      if (list[i] === listener || list[i].listener === listener) {\n        originalListener = list[i].listener;\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0) return this;\n    if (position === 0) list.shift();else {\n      spliceOne(list, position);\n    }\n    if (list.length === 1) events[type] = list[0];\n    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n  var listeners, events, i;\n  events = this._events;\n  if (events === undefined) return this; // not listening for removeListener, no need to emit\n\n  if (events.removeListener === undefined) {\n    if (arguments.length === 0) {\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n    } else if (events[type] !== undefined) {\n      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n    }\n\n    return this;\n  } // emit removeListener for all listeners on all events\n\n\n  if (arguments.length === 0) {\n    var keys = Object.keys(events);\n    var key;\n\n    for (i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n\n    this.removeAllListeners('removeListener');\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n    return this;\n  }\n\n  listeners = events[type];\n\n  if (typeof listeners === 'function') {\n    this.removeListener(type, listeners);\n  } else if (listeners !== undefined) {\n    // LIFO order\n    for (i = listeners.length - 1; i >= 0; i--) {\n      this.removeListener(type, listeners[i]);\n    }\n  }\n\n  return this;\n};\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n  if (events === undefined) return [];\n  var evlistener = events[type];\n  if (evlistener === undefined) return [];\n  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function (emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\n\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n\n  for (var i = 0; i < n; ++i) copy[i] = arr[i];\n\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++) list[index] = list[index + 1];\n\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n\n  return ret;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/events/events.js\n");

/***/ }),

/***/ "./node_modules/fuzzy/lib/fuzzy.js":
/*!*****************************************!*\
  !*** ./node_modules/fuzzy/lib/fuzzy.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Fuzzy\n * https://github.com/myork/fuzzy\n *\n * Copyright (c) 2012 Matt York\n * Licensed under the MIT license.\n */\n(function () {\n  var root = this;\n  var fuzzy = {}; // Use in node or in browser\n\n  if (true) {\n    module.exports = fuzzy;\n  } else {} // Return all elements of `array` that have a fuzzy\n  // match against `pattern`.\n\n\n  fuzzy.simpleFilter = function (pattern, array) {\n    return array.filter(function (str) {\n      return fuzzy.test(pattern, str);\n    });\n  }; // Does `pattern` fuzzy match `str`?\n\n\n  fuzzy.test = function (pattern, str) {\n    return fuzzy.match(pattern, str) !== null;\n  }; // If `pattern` matches `str`, wrap each matching character\n  // in `opts.pre` and `opts.post`. If no match, return null\n\n\n  fuzzy.match = function (pattern, str, opts) {\n    opts = opts || {};\n    var patternIdx = 0,\n        result = [],\n        len = str.length,\n        totalScore = 0,\n        currScore = 0 // prefix\n    ,\n        pre = opts.pre || '' // suffix\n    ,\n        post = opts.post || '' // String to compare against. This might be a lowercase version of the\n    // raw string\n    ,\n        compareString = opts.caseSensitive && str || str.toLowerCase(),\n        ch;\n    pattern = opts.caseSensitive && pattern || pattern.toLowerCase(); // For each character in the string, either add it to the result\n    // or wrap in template if it's the next string in the pattern\n\n    for (var idx = 0; idx < len; idx++) {\n      ch = str[idx];\n\n      if (compareString[idx] === pattern[patternIdx]) {\n        ch = pre + ch + post;\n        patternIdx += 1; // consecutive characters should increase the score more than linearly\n\n        currScore += 1 + currScore;\n      } else {\n        currScore = 0;\n      }\n\n      totalScore += currScore;\n      result[result.length] = ch;\n    } // return rendered string if we have a match for every char\n\n\n    if (patternIdx === pattern.length) {\n      // if the string is an exact match with pattern, totalScore should be maxed\n      totalScore = compareString === pattern ? Infinity : totalScore;\n      return {\n        rendered: result.join(''),\n        score: totalScore\n      };\n    }\n\n    return null;\n  }; // The normal entry point. Filters `arr` for matches against `pattern`.\n  // It returns an array with matching values of the type:\n  //\n  //     [{\n  //         string:   '<b>lah' // The rendered string\n  //       , index:    2        // The index of the element in `arr`\n  //       , original: 'blah'   // The original element in `arr`\n  //     }]\n  //\n  // `opts` is an optional argument bag. Details:\n  //\n  //    opts = {\n  //        // string to put before a matching character\n  //        pre:     '<b>'\n  //\n  //        // string to put after matching character\n  //      , post:    '</b>'\n  //\n  //        // Optional function. Input is an entry in the given arr`,\n  //        // output should be the string to test `pattern` against.\n  //        // In this example, if `arr = [{crying: 'koala'}]` we would return\n  //        // 'koala'.\n  //      , extract: function(arg) { return arg.crying; }\n  //    }\n\n\n  fuzzy.filter = function (pattern, arr, opts) {\n    if (!arr || arr.length === 0) {\n      return [];\n    }\n\n    if (typeof pattern !== 'string') {\n      return arr;\n    }\n\n    opts = opts || {};\n    return arr.reduce(function (prev, element, idx, arr) {\n      var str = element;\n\n      if (opts.extract) {\n        str = opts.extract(element);\n      }\n\n      var rendered = fuzzy.match(pattern, str, opts);\n\n      if (rendered != null) {\n        prev[prev.length] = {\n          string: rendered.rendered,\n          score: rendered.score,\n          index: idx,\n          original: element\n        };\n      }\n\n      return prev;\n    }, []) // Sort by score. Browsers are inconsistent wrt stable/unstable\n    // sorting, so force stable by using the index in the case of tie.\n    // See http://ofb.net/~sethml/is-sort-stable.html\n    .sort(function (a, b) {\n      var compare = b.score - a.score;\n      if (compare) return compare;\n      return a.index - b.index;\n    });\n  };\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZnV6enkvbGliL2Z1enp5LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Z1enp5L2xpYi9mdXp6eS5qcz8zZmNmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBGdXp6eVxuICogaHR0cHM6Ly9naXRodWIuY29tL215b3JrL2Z1enp5XG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEyIE1hdHQgWW9ya1xuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuICovXG5cbihmdW5jdGlvbigpIHtcblxudmFyIHJvb3QgPSB0aGlzO1xuXG52YXIgZnV6enkgPSB7fTtcblxuLy8gVXNlIGluIG5vZGUgb3IgaW4gYnJvd3NlclxuaWYgKHR5cGVvZiBleHBvcnRzICE9PSAndW5kZWZpbmVkJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IGZ1enp5O1xufSBlbHNlIHtcbiAgcm9vdC5mdXp6eSA9IGZ1enp5O1xufVxuXG4vLyBSZXR1cm4gYWxsIGVsZW1lbnRzIG9mIGBhcnJheWAgdGhhdCBoYXZlIGEgZnV6enlcbi8vIG1hdGNoIGFnYWluc3QgYHBhdHRlcm5gLlxuZnV6enkuc2ltcGxlRmlsdGVyID0gZnVuY3Rpb24ocGF0dGVybiwgYXJyYXkpIHtcbiAgcmV0dXJuIGFycmF5LmZpbHRlcihmdW5jdGlvbihzdHIpIHtcbiAgICByZXR1cm4gZnV6enkudGVzdChwYXR0ZXJuLCBzdHIpO1xuICB9KTtcbn07XG5cbi8vIERvZXMgYHBhdHRlcm5gIGZ1enp5IG1hdGNoIGBzdHJgP1xuZnV6enkudGVzdCA9IGZ1bmN0aW9uKHBhdHRlcm4sIHN0cikge1xuICByZXR1cm4gZnV6enkubWF0Y2gocGF0dGVybiwgc3RyKSAhPT0gbnVsbDtcbn07XG5cbi8vIElmIGBwYXR0ZXJuYCBtYXRjaGVzIGBzdHJgLCB3cmFwIGVhY2ggbWF0Y2hpbmcgY2hhcmFjdGVyXG4vLyBpbiBgb3B0cy5wcmVgIGFuZCBgb3B0cy5wb3N0YC4gSWYgbm8gbWF0Y2gsIHJldHVybiBudWxsXG5mdXp6eS5tYXRjaCA9IGZ1bmN0aW9uKHBhdHRlcm4sIHN0ciwgb3B0cykge1xuICBvcHRzID0gb3B0cyB8fCB7fTtcbiAgdmFyIHBhdHRlcm5JZHggPSAwXG4gICAgLCByZXN1bHQgPSBbXVxuICAgICwgbGVuID0gc3RyLmxlbmd0aFxuICAgICwgdG90YWxTY29yZSA9IDBcbiAgICAsIGN1cnJTY29yZSA9IDBcbiAgICAvLyBwcmVmaXhcbiAgICAsIHByZSA9IG9wdHMucHJlIHx8ICcnXG4gICAgLy8gc3VmZml4XG4gICAgLCBwb3N0ID0gb3B0cy5wb3N0IHx8ICcnXG4gICAgLy8gU3RyaW5nIHRvIGNvbXBhcmUgYWdhaW5zdC4gVGhpcyBtaWdodCBiZSBhIGxvd2VyY2FzZSB2ZXJzaW9uIG9mIHRoZVxuICAgIC8vIHJhdyBzdHJpbmdcbiAgICAsIGNvbXBhcmVTdHJpbmcgPSAgb3B0cy5jYXNlU2Vuc2l0aXZlICYmIHN0ciB8fCBzdHIudG9Mb3dlckNhc2UoKVxuICAgICwgY2g7XG5cbiAgcGF0dGVybiA9IG9wdHMuY2FzZVNlbnNpdGl2ZSAmJiBwYXR0ZXJuIHx8IHBhdHRlcm4udG9Mb3dlckNhc2UoKTtcblxuICAvLyBGb3IgZWFjaCBjaGFyYWN0ZXIgaW4gdGhlIHN0cmluZywgZWl0aGVyIGFkZCBpdCB0byB0aGUgcmVzdWx0XG4gIC8vIG9yIHdyYXAgaW4gdGVtcGxhdGUgaWYgaXQncyB0aGUgbmV4dCBzdHJpbmcgaW4gdGhlIHBhdHRlcm5cbiAgZm9yKHZhciBpZHggPSAwOyBpZHggPCBsZW47IGlkeCsrKSB7XG4gICAgY2ggPSBzdHJbaWR4XTtcbiAgICBpZihjb21wYXJlU3RyaW5nW2lkeF0gPT09IHBhdHRlcm5bcGF0dGVybklkeF0pIHtcbiAgICAgIGNoID0gcHJlICsgY2ggKyBwb3N0O1xuICAgICAgcGF0dGVybklkeCArPSAxO1xuXG4gICAgICAvLyBjb25zZWN1dGl2ZSBjaGFyYWN0ZXJzIHNob3VsZCBpbmNyZWFzZSB0aGUgc2NvcmUgbW9yZSB0aGFuIGxpbmVhcmx5XG4gICAgICBjdXJyU2NvcmUgKz0gMSArIGN1cnJTY29yZTtcbiAgICB9IGVsc2Uge1xuICAgICAgY3VyclNjb3JlID0gMDtcbiAgICB9XG4gICAgdG90YWxTY29yZSArPSBjdXJyU2NvcmU7XG4gICAgcmVzdWx0W3Jlc3VsdC5sZW5ndGhdID0gY2g7XG4gIH1cblxuICAvLyByZXR1cm4gcmVuZGVyZWQgc3RyaW5nIGlmIHdlIGhhdmUgYSBtYXRjaCBmb3IgZXZlcnkgY2hhclxuICBpZihwYXR0ZXJuSWR4ID09PSBwYXR0ZXJuLmxlbmd0aCkge1xuICAgIC8vIGlmIHRoZSBzdHJpbmcgaXMgYW4gZXhhY3QgbWF0Y2ggd2l0aCBwYXR0ZXJuLCB0b3RhbFNjb3JlIHNob3VsZCBiZSBtYXhlZFxuICAgIHRvdGFsU2NvcmUgPSAoY29tcGFyZVN0cmluZyA9PT0gcGF0dGVybikgPyBJbmZpbml0eSA6IHRvdGFsU2NvcmU7XG4gICAgcmV0dXJuIHtyZW5kZXJlZDogcmVzdWx0LmpvaW4oJycpLCBzY29yZTogdG90YWxTY29yZX07XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn07XG5cbi8vIFRoZSBub3JtYWwgZW50cnkgcG9pbnQuIEZpbHRlcnMgYGFycmAgZm9yIG1hdGNoZXMgYWdhaW5zdCBgcGF0dGVybmAuXG4vLyBJdCByZXR1cm5zIGFuIGFycmF5IHdpdGggbWF0Y2hpbmcgdmFsdWVzIG9mIHRoZSB0eXBlOlxuLy9cbi8vICAgICBbe1xuLy8gICAgICAgICBzdHJpbmc6ICAgJzxiPmxhaCcgLy8gVGhlIHJlbmRlcmVkIHN0cmluZ1xuLy8gICAgICAgLCBpbmRleDogICAgMiAgICAgICAgLy8gVGhlIGluZGV4IG9mIHRoZSBlbGVtZW50IGluIGBhcnJgXG4vLyAgICAgICAsIG9yaWdpbmFsOiAnYmxhaCcgICAvLyBUaGUgb3JpZ2luYWwgZWxlbWVudCBpbiBgYXJyYFxuLy8gICAgIH1dXG4vL1xuLy8gYG9wdHNgIGlzIGFuIG9wdGlvbmFsIGFyZ3VtZW50IGJhZy4gRGV0YWlsczpcbi8vXG4vLyAgICBvcHRzID0ge1xuLy8gICAgICAgIC8vIHN0cmluZyB0byBwdXQgYmVmb3JlIGEgbWF0Y2hpbmcgY2hhcmFjdGVyXG4vLyAgICAgICAgcHJlOiAgICAgJzxiPidcbi8vXG4vLyAgICAgICAgLy8gc3RyaW5nIHRvIHB1dCBhZnRlciBtYXRjaGluZyBjaGFyYWN0ZXJcbi8vICAgICAgLCBwb3N0OiAgICAnPC9iPidcbi8vXG4vLyAgICAgICAgLy8gT3B0aW9uYWwgZnVuY3Rpb24uIElucHV0IGlzIGFuIGVudHJ5IGluIHRoZSBnaXZlbiBhcnJgLFxuLy8gICAgICAgIC8vIG91dHB1dCBzaG91bGQgYmUgdGhlIHN0cmluZyB0byB0ZXN0IGBwYXR0ZXJuYCBhZ2FpbnN0LlxuLy8gICAgICAgIC8vIEluIHRoaXMgZXhhbXBsZSwgaWYgYGFyciA9IFt7Y3J5aW5nOiAna29hbGEnfV1gIHdlIHdvdWxkIHJldHVyblxuLy8gICAgICAgIC8vICdrb2FsYScuXG4vLyAgICAgICwgZXh0cmFjdDogZnVuY3Rpb24oYXJnKSB7IHJldHVybiBhcmcuY3J5aW5nOyB9XG4vLyAgICB9XG5mdXp6eS5maWx0ZXIgPSBmdW5jdGlvbihwYXR0ZXJuLCBhcnIsIG9wdHMpIHtcbiAgaWYoIWFyciB8fCBhcnIubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG4gIGlmICh0eXBlb2YgcGF0dGVybiAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gYXJyO1xuICB9XG4gIG9wdHMgPSBvcHRzIHx8IHt9O1xuICByZXR1cm4gYXJyXG4gICAgLnJlZHVjZShmdW5jdGlvbihwcmV2LCBlbGVtZW50LCBpZHgsIGFycikge1xuICAgICAgdmFyIHN0ciA9IGVsZW1lbnQ7XG4gICAgICBpZihvcHRzLmV4dHJhY3QpIHtcbiAgICAgICAgc3RyID0gb3B0cy5leHRyYWN0KGVsZW1lbnQpO1xuICAgICAgfVxuICAgICAgdmFyIHJlbmRlcmVkID0gZnV6enkubWF0Y2gocGF0dGVybiwgc3RyLCBvcHRzKTtcbiAgICAgIGlmKHJlbmRlcmVkICE9IG51bGwpIHtcbiAgICAgICAgcHJldltwcmV2Lmxlbmd0aF0gPSB7XG4gICAgICAgICAgICBzdHJpbmc6IHJlbmRlcmVkLnJlbmRlcmVkXG4gICAgICAgICAgLCBzY29yZTogcmVuZGVyZWQuc2NvcmVcbiAgICAgICAgICAsIGluZGV4OiBpZHhcbiAgICAgICAgICAsIG9yaWdpbmFsOiBlbGVtZW50XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICByZXR1cm4gcHJldjtcbiAgICB9LCBbXSlcblxuICAgIC8vIFNvcnQgYnkgc2NvcmUuIEJyb3dzZXJzIGFyZSBpbmNvbnNpc3RlbnQgd3J0IHN0YWJsZS91bnN0YWJsZVxuICAgIC8vIHNvcnRpbmcsIHNvIGZvcmNlIHN0YWJsZSBieSB1c2luZyB0aGUgaW5kZXggaW4gdGhlIGNhc2Ugb2YgdGllLlxuICAgIC8vIFNlZSBodHRwOi8vb2ZiLm5ldC9+c2V0aG1sL2lzLXNvcnQtc3RhYmxlLmh0bWxcbiAgICAuc29ydChmdW5jdGlvbihhLGIpIHtcbiAgICAgIHZhciBjb21wYXJlID0gYi5zY29yZSAtIGEuc2NvcmU7XG4gICAgICBpZihjb21wYXJlKSByZXR1cm4gY29tcGFyZTtcbiAgICAgIHJldHVybiBhLmluZGV4IC0gYi5pbmRleDtcbiAgICB9KTtcbn07XG5cblxufSgpKTtcblxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztBQVFBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBLFdBRUE7QUFHQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFVQTtBQVZBO0FBQUE7QUFBQTtBQWNBO0FBR0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7QUFDQTtBQUFBO0FBQ0E7QUFHQTtBQUNBO0FBcEJBO0FBc0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/fuzzy/lib/fuzzy.js\n");

/***/ }),

/***/ "./node_modules/is-plain-obj/index.js":
/*!********************************************!*\
  !*** ./node_modules/is-plain-obj/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar toString = Object.prototype.toString;\n\nmodule.exports = function (x) {\n  var prototype;\n  return toString.call(x) === '[object Object]' && (prototype = Object.getPrototypeOf(x), prototype === null || prototype === Object.getPrototypeOf({}));\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaXMtcGxhaW4tb2JqL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lzLXBsYWluLW9iai9pbmRleC5qcz8zNjQyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHgpIHtcblx0dmFyIHByb3RvdHlwZTtcblx0cmV0dXJuIHRvU3RyaW5nLmNhbGwoeCkgPT09ICdbb2JqZWN0IE9iamVjdF0nICYmIChwcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoeCksIHByb3RvdHlwZSA9PT0gbnVsbCB8fCBwcm90b3R5cGUgPT09IE9iamVjdC5nZXRQcm90b3R5cGVPZih7fSkpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/is-plain-obj/index.js\n");

/***/ }),

/***/ "./node_modules/lodash.debounce/index.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash.debounce/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/** Used as references for various `Number` constants. */\n\nvar NAN = 0 / 0;\n/** `Object#toString` result references. */\n\nvar symbolTag = '[object Symbol]';\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/** Detect free variable `global` from Node.js. */\n\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n/** Detect free variable `self`. */\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar objectToString = objectProto.toString;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\n\nvar now = function () {\n  return root.Date.now();\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\n\n\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  wait = toNumber(wait) || 0;\n\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time; // Start the timer for the trailing edge.\n\n    timerId = setTimeout(timerExpired, wait); // Invoke the leading edge.\n\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime; // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n\n    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n  }\n\n  function timerExpired() {\n    var time = now();\n\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    } // Restart the timer.\n\n\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined; // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n\n    return result;\n  }\n\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\n\n\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\n\n\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n}\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = debounce;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLmRlYm91bmNlL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC5kZWJvdW5jZS9pbmRleC5qcz9mN2ZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogbG9kYXNoIChDdXN0b20gQnVpbGQpIDxodHRwczovL2xvZGFzaC5jb20vPlxuICogQnVpbGQ6IGBsb2Rhc2ggbW9kdWxhcml6ZSBleHBvcnRzPVwibnBtXCIgLW8gLi9gXG4gKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycyA8aHR0cHM6Ly9qcXVlcnkub3JnLz5cbiAqIFJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlIDxodHRwczovL2xvZGFzaC5jb20vbGljZW5zZT5cbiAqIEJhc2VkIG9uIFVuZGVyc2NvcmUuanMgMS44LjMgPGh0dHA6Ly91bmRlcnNjb3JlanMub3JnL0xJQ0VOU0U+XG4gKiBDb3B5cmlnaHQgSmVyZW15IEFzaGtlbmFzLCBEb2N1bWVudENsb3VkIGFuZCBJbnZlc3RpZ2F0aXZlIFJlcG9ydGVycyAmIEVkaXRvcnNcbiAqL1xuXG4vKiogVXNlZCBhcyB0aGUgYFR5cGVFcnJvcmAgbWVzc2FnZSBmb3IgXCJGdW5jdGlvbnNcIiBtZXRob2RzLiAqL1xudmFyIEZVTkNfRVJST1JfVEVYVCA9ICdFeHBlY3RlZCBhIGZ1bmN0aW9uJztcblxuLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovXG52YXIgTkFOID0gMCAvIDA7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBzeW1ib2xUYWcgPSAnW29iamVjdCBTeW1ib2xdJztcblxuLyoqIFVzZWQgdG8gbWF0Y2ggbGVhZGluZyBhbmQgdHJhaWxpbmcgd2hpdGVzcGFjZS4gKi9cbnZhciByZVRyaW0gPSAvXlxccyt8XFxzKyQvZztcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IGJhZCBzaWduZWQgaGV4YWRlY2ltYWwgc3RyaW5nIHZhbHVlcy4gKi9cbnZhciByZUlzQmFkSGV4ID0gL15bLStdMHhbMC05YS1mXSskL2k7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBiaW5hcnkgc3RyaW5nIHZhbHVlcy4gKi9cbnZhciByZUlzQmluYXJ5ID0gL14wYlswMV0rJC9pO1xuXG4vKiogVXNlZCB0byBkZXRlY3Qgb2N0YWwgc3RyaW5nIHZhbHVlcy4gKi9cbnZhciByZUlzT2N0YWwgPSAvXjBvWzAtN10rJC9pO1xuXG4vKiogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgd2l0aG91dCBhIGRlcGVuZGVuY3kgb24gYHJvb3RgLiAqL1xudmFyIGZyZWVQYXJzZUludCA9IHBhcnNlSW50O1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYGdsb2JhbGAgZnJvbSBOb2RlLmpzLiAqL1xudmFyIGZyZWVHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsID09ICdvYmplY3QnICYmIGdsb2JhbCAmJiBnbG9iYWwuT2JqZWN0ID09PSBPYmplY3QgJiYgZ2xvYmFsO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYHNlbGZgLiAqL1xudmFyIGZyZWVTZWxmID0gdHlwZW9mIHNlbGYgPT0gJ29iamVjdCcgJiYgc2VsZiAmJiBzZWxmLk9iamVjdCA9PT0gT2JqZWN0ICYmIHNlbGY7XG5cbi8qKiBVc2VkIGFzIGEgcmVmZXJlbmNlIHRvIHRoZSBnbG9iYWwgb2JqZWN0LiAqL1xudmFyIHJvb3QgPSBmcmVlR2xvYmFsIHx8IGZyZWVTZWxmIHx8IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKlxuICogVXNlZCB0byByZXNvbHZlIHRoZVxuICogW2B0b1N0cmluZ1RhZ2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmcpXG4gKiBvZiB2YWx1ZXMuXG4gKi9cbnZhciBvYmplY3RUb1N0cmluZyA9IG9iamVjdFByb3RvLnRvU3RyaW5nO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlTWF4ID0gTWF0aC5tYXgsXG4gICAgbmF0aXZlTWluID0gTWF0aC5taW47XG5cbi8qKlxuICogR2V0cyB0aGUgdGltZXN0YW1wIG9mIHRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRoYXQgaGF2ZSBlbGFwc2VkIHNpbmNlXG4gKiB0aGUgVW5peCBlcG9jaCAoMSBKYW51YXJ5IDE5NzAgMDA6MDA6MDAgVVRDKS5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDIuNC4wXG4gKiBAY2F0ZWdvcnkgRGF0ZVxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgdGltZXN0YW1wLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmRlZmVyKGZ1bmN0aW9uKHN0YW1wKSB7XG4gKiAgIGNvbnNvbGUubG9nKF8ubm93KCkgLSBzdGFtcCk7XG4gKiB9LCBfLm5vdygpKTtcbiAqIC8vID0+IExvZ3MgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgaXQgdG9vayBmb3IgdGhlIGRlZmVycmVkIGludm9jYXRpb24uXG4gKi9cbnZhciBub3cgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHJvb3QuRGF0ZS5ub3coKTtcbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhIGRlYm91bmNlZCBmdW5jdGlvbiB0aGF0IGRlbGF5cyBpbnZva2luZyBgZnVuY2AgdW50aWwgYWZ0ZXIgYHdhaXRgXG4gKiBtaWxsaXNlY29uZHMgaGF2ZSBlbGFwc2VkIHNpbmNlIHRoZSBsYXN0IHRpbWUgdGhlIGRlYm91bmNlZCBmdW5jdGlvbiB3YXNcbiAqIGludm9rZWQuIFRoZSBkZWJvdW5jZWQgZnVuY3Rpb24gY29tZXMgd2l0aCBhIGBjYW5jZWxgIG1ldGhvZCB0byBjYW5jZWxcbiAqIGRlbGF5ZWQgYGZ1bmNgIGludm9jYXRpb25zIGFuZCBhIGBmbHVzaGAgbWV0aG9kIHRvIGltbWVkaWF0ZWx5IGludm9rZSB0aGVtLlxuICogUHJvdmlkZSBgb3B0aW9uc2AgdG8gaW5kaWNhdGUgd2hldGhlciBgZnVuY2Agc2hvdWxkIGJlIGludm9rZWQgb24gdGhlXG4gKiBsZWFkaW5nIGFuZC9vciB0cmFpbGluZyBlZGdlIG9mIHRoZSBgd2FpdGAgdGltZW91dC4gVGhlIGBmdW5jYCBpcyBpbnZva2VkXG4gKiB3aXRoIHRoZSBsYXN0IGFyZ3VtZW50cyBwcm92aWRlZCB0byB0aGUgZGVib3VuY2VkIGZ1bmN0aW9uLiBTdWJzZXF1ZW50XG4gKiBjYWxscyB0byB0aGUgZGVib3VuY2VkIGZ1bmN0aW9uIHJldHVybiB0aGUgcmVzdWx0IG9mIHRoZSBsYXN0IGBmdW5jYFxuICogaW52b2NhdGlvbi5cbiAqXG4gKiAqKk5vdGU6KiogSWYgYGxlYWRpbmdgIGFuZCBgdHJhaWxpbmdgIG9wdGlvbnMgYXJlIGB0cnVlYCwgYGZ1bmNgIGlzXG4gKiBpbnZva2VkIG9uIHRoZSB0cmFpbGluZyBlZGdlIG9mIHRoZSB0aW1lb3V0IG9ubHkgaWYgdGhlIGRlYm91bmNlZCBmdW5jdGlvblxuICogaXMgaW52b2tlZCBtb3JlIHRoYW4gb25jZSBkdXJpbmcgdGhlIGB3YWl0YCB0aW1lb3V0LlxuICpcbiAqIElmIGB3YWl0YCBpcyBgMGAgYW5kIGBsZWFkaW5nYCBpcyBgZmFsc2VgLCBgZnVuY2AgaW52b2NhdGlvbiBpcyBkZWZlcnJlZFxuICogdW50aWwgdG8gdGhlIG5leHQgdGljaywgc2ltaWxhciB0byBgc2V0VGltZW91dGAgd2l0aCBhIHRpbWVvdXQgb2YgYDBgLlxuICpcbiAqIFNlZSBbRGF2aWQgQ29yYmFjaG8ncyBhcnRpY2xlXShodHRwczovL2Nzcy10cmlja3MuY29tL2RlYm91bmNpbmctdGhyb3R0bGluZy1leHBsYWluZWQtZXhhbXBsZXMvKVxuICogZm9yIGRldGFpbHMgb3ZlciB0aGUgZGlmZmVyZW5jZXMgYmV0d2VlbiBgXy5kZWJvdW5jZWAgYW5kIGBfLnRocm90dGxlYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgRnVuY3Rpb25cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGRlYm91bmNlLlxuICogQHBhcmFtIHtudW1iZXJ9IFt3YWl0PTBdIFRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRvIGRlbGF5LlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zPXt9XSBUaGUgb3B0aW9ucyBvYmplY3QuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLmxlYWRpbmc9ZmFsc2VdXG4gKiAgU3BlY2lmeSBpbnZva2luZyBvbiB0aGUgbGVhZGluZyBlZGdlIG9mIHRoZSB0aW1lb3V0LlxuICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLm1heFdhaXRdXG4gKiAgVGhlIG1heGltdW0gdGltZSBgZnVuY2AgaXMgYWxsb3dlZCB0byBiZSBkZWxheWVkIGJlZm9yZSBpdCdzIGludm9rZWQuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLnRyYWlsaW5nPXRydWVdXG4gKiAgU3BlY2lmeSBpbnZva2luZyBvbiB0aGUgdHJhaWxpbmcgZWRnZSBvZiB0aGUgdGltZW91dC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGRlYm91bmNlZCBmdW5jdGlvbi5cbiAqIEBleGFtcGxlXG4gKlxuICogLy8gQXZvaWQgY29zdGx5IGNhbGN1bGF0aW9ucyB3aGlsZSB0aGUgd2luZG93IHNpemUgaXMgaW4gZmx1eC5cbiAqIGpRdWVyeSh3aW5kb3cpLm9uKCdyZXNpemUnLCBfLmRlYm91bmNlKGNhbGN1bGF0ZUxheW91dCwgMTUwKSk7XG4gKlxuICogLy8gSW52b2tlIGBzZW5kTWFpbGAgd2hlbiBjbGlja2VkLCBkZWJvdW5jaW5nIHN1YnNlcXVlbnQgY2FsbHMuXG4gKiBqUXVlcnkoZWxlbWVudCkub24oJ2NsaWNrJywgXy5kZWJvdW5jZShzZW5kTWFpbCwgMzAwLCB7XG4gKiAgICdsZWFkaW5nJzogdHJ1ZSxcbiAqICAgJ3RyYWlsaW5nJzogZmFsc2VcbiAqIH0pKTtcbiAqXG4gKiAvLyBFbnN1cmUgYGJhdGNoTG9nYCBpcyBpbnZva2VkIG9uY2UgYWZ0ZXIgMSBzZWNvbmQgb2YgZGVib3VuY2VkIGNhbGxzLlxuICogdmFyIGRlYm91bmNlZCA9IF8uZGVib3VuY2UoYmF0Y2hMb2csIDI1MCwgeyAnbWF4V2FpdCc6IDEwMDAgfSk7XG4gKiB2YXIgc291cmNlID0gbmV3IEV2ZW50U291cmNlKCcvc3RyZWFtJyk7XG4gKiBqUXVlcnkoc291cmNlKS5vbignbWVzc2FnZScsIGRlYm91bmNlZCk7XG4gKlxuICogLy8gQ2FuY2VsIHRoZSB0cmFpbGluZyBkZWJvdW5jZWQgaW52b2NhdGlvbi5cbiAqIGpRdWVyeSh3aW5kb3cpLm9uKCdwb3BzdGF0ZScsIGRlYm91bmNlZC5jYW5jZWwpO1xuICovXG5mdW5jdGlvbiBkZWJvdW5jZShmdW5jLCB3YWl0LCBvcHRpb25zKSB7XG4gIHZhciBsYXN0QXJncyxcbiAgICAgIGxhc3RUaGlzLFxuICAgICAgbWF4V2FpdCxcbiAgICAgIHJlc3VsdCxcbiAgICAgIHRpbWVySWQsXG4gICAgICBsYXN0Q2FsbFRpbWUsXG4gICAgICBsYXN0SW52b2tlVGltZSA9IDAsXG4gICAgICBsZWFkaW5nID0gZmFsc2UsXG4gICAgICBtYXhpbmcgPSBmYWxzZSxcbiAgICAgIHRyYWlsaW5nID0gdHJ1ZTtcblxuICBpZiAodHlwZW9mIGZ1bmMgIT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoRlVOQ19FUlJPUl9URVhUKTtcbiAgfVxuICB3YWl0ID0gdG9OdW1iZXIod2FpdCkgfHwgMDtcbiAgaWYgKGlzT2JqZWN0KG9wdGlvbnMpKSB7XG4gICAgbGVhZGluZyA9ICEhb3B0aW9ucy5sZWFkaW5nO1xuICAgIG1heGluZyA9ICdtYXhXYWl0JyBpbiBvcHRpb25zO1xuICAgIG1heFdhaXQgPSBtYXhpbmcgPyBuYXRpdmVNYXgodG9OdW1iZXIob3B0aW9ucy5tYXhXYWl0KSB8fCAwLCB3YWl0KSA6IG1heFdhaXQ7XG4gICAgdHJhaWxpbmcgPSAndHJhaWxpbmcnIGluIG9wdGlvbnMgPyAhIW9wdGlvbnMudHJhaWxpbmcgOiB0cmFpbGluZztcbiAgfVxuXG4gIGZ1bmN0aW9uIGludm9rZUZ1bmModGltZSkge1xuICAgIHZhciBhcmdzID0gbGFzdEFyZ3MsXG4gICAgICAgIHRoaXNBcmcgPSBsYXN0VGhpcztcblxuICAgIGxhc3RBcmdzID0gbGFzdFRoaXMgPSB1bmRlZmluZWQ7XG4gICAgbGFzdEludm9rZVRpbWUgPSB0aW1lO1xuICAgIHJlc3VsdCA9IGZ1bmMuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxlYWRpbmdFZGdlKHRpbWUpIHtcbiAgICAvLyBSZXNldCBhbnkgYG1heFdhaXRgIHRpbWVyLlxuICAgIGxhc3RJbnZva2VUaW1lID0gdGltZTtcbiAgICAvLyBTdGFydCB0aGUgdGltZXIgZm9yIHRoZSB0cmFpbGluZyBlZGdlLlxuICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgd2FpdCk7XG4gICAgLy8gSW52b2tlIHRoZSBsZWFkaW5nIGVkZ2UuXG4gICAgcmV0dXJuIGxlYWRpbmcgPyBpbnZva2VGdW5jKHRpbWUpIDogcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gcmVtYWluaW5nV2FpdCh0aW1lKSB7XG4gICAgdmFyIHRpbWVTaW5jZUxhc3RDYWxsID0gdGltZSAtIGxhc3RDYWxsVGltZSxcbiAgICAgICAgdGltZVNpbmNlTGFzdEludm9rZSA9IHRpbWUgLSBsYXN0SW52b2tlVGltZSxcbiAgICAgICAgcmVzdWx0ID0gd2FpdCAtIHRpbWVTaW5jZUxhc3RDYWxsO1xuXG4gICAgcmV0dXJuIG1heGluZyA/IG5hdGl2ZU1pbihyZXN1bHQsIG1heFdhaXQgLSB0aW1lU2luY2VMYXN0SW52b2tlKSA6IHJlc3VsdDtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNob3VsZEludm9rZSh0aW1lKSB7XG4gICAgdmFyIHRpbWVTaW5jZUxhc3RDYWxsID0gdGltZSAtIGxhc3RDYWxsVGltZSxcbiAgICAgICAgdGltZVNpbmNlTGFzdEludm9rZSA9IHRpbWUgLSBsYXN0SW52b2tlVGltZTtcblxuICAgIC8vIEVpdGhlciB0aGlzIGlzIHRoZSBmaXJzdCBjYWxsLCBhY3Rpdml0eSBoYXMgc3RvcHBlZCBhbmQgd2UncmUgYXQgdGhlXG4gICAgLy8gdHJhaWxpbmcgZWRnZSwgdGhlIHN5c3RlbSB0aW1lIGhhcyBnb25lIGJhY2t3YXJkcyBhbmQgd2UncmUgdHJlYXRpbmdcbiAgICAvLyBpdCBhcyB0aGUgdHJhaWxpbmcgZWRnZSwgb3Igd2UndmUgaGl0IHRoZSBgbWF4V2FpdGAgbGltaXQuXG4gICAgcmV0dXJuIChsYXN0Q2FsbFRpbWUgPT09IHVuZGVmaW5lZCB8fCAodGltZVNpbmNlTGFzdENhbGwgPj0gd2FpdCkgfHxcbiAgICAgICh0aW1lU2luY2VMYXN0Q2FsbCA8IDApIHx8IChtYXhpbmcgJiYgdGltZVNpbmNlTGFzdEludm9rZSA+PSBtYXhXYWl0KSk7XG4gIH1cblxuICBmdW5jdGlvbiB0aW1lckV4cGlyZWQoKSB7XG4gICAgdmFyIHRpbWUgPSBub3coKTtcbiAgICBpZiAoc2hvdWxkSW52b2tlKHRpbWUpKSB7XG4gICAgICByZXR1cm4gdHJhaWxpbmdFZGdlKHRpbWUpO1xuICAgIH1cbiAgICAvLyBSZXN0YXJ0IHRoZSB0aW1lci5cbiAgICB0aW1lcklkID0gc2V0VGltZW91dCh0aW1lckV4cGlyZWQsIHJlbWFpbmluZ1dhaXQodGltZSkpO1xuICB9XG5cbiAgZnVuY3Rpb24gdHJhaWxpbmdFZGdlKHRpbWUpIHtcbiAgICB0aW1lcklkID0gdW5kZWZpbmVkO1xuXG4gICAgLy8gT25seSBpbnZva2UgaWYgd2UgaGF2ZSBgbGFzdEFyZ3NgIHdoaWNoIG1lYW5zIGBmdW5jYCBoYXMgYmVlblxuICAgIC8vIGRlYm91bmNlZCBhdCBsZWFzdCBvbmNlLlxuICAgIGlmICh0cmFpbGluZyAmJiBsYXN0QXJncykge1xuICAgICAgcmV0dXJuIGludm9rZUZ1bmModGltZSk7XG4gICAgfVxuICAgIGxhc3RBcmdzID0gbGFzdFRoaXMgPSB1bmRlZmluZWQ7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNhbmNlbCgpIHtcbiAgICBpZiAodGltZXJJZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBjbGVhclRpbWVvdXQodGltZXJJZCk7XG4gICAgfVxuICAgIGxhc3RJbnZva2VUaW1lID0gMDtcbiAgICBsYXN0QXJncyA9IGxhc3RDYWxsVGltZSA9IGxhc3RUaGlzID0gdGltZXJJZCA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZsdXNoKCkge1xuICAgIHJldHVybiB0aW1lcklkID09PSB1bmRlZmluZWQgPyByZXN1bHQgOiB0cmFpbGluZ0VkZ2Uobm93KCkpO1xuICB9XG5cbiAgZnVuY3Rpb24gZGVib3VuY2VkKCkge1xuICAgIHZhciB0aW1lID0gbm93KCksXG4gICAgICAgIGlzSW52b2tpbmcgPSBzaG91bGRJbnZva2UodGltZSk7XG5cbiAgICBsYXN0QXJncyA9IGFyZ3VtZW50cztcbiAgICBsYXN0VGhpcyA9IHRoaXM7XG4gICAgbGFzdENhbGxUaW1lID0gdGltZTtcblxuICAgIGlmIChpc0ludm9raW5nKSB7XG4gICAgICBpZiAodGltZXJJZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBsZWFkaW5nRWRnZShsYXN0Q2FsbFRpbWUpO1xuICAgICAgfVxuICAgICAgaWYgKG1heGluZykge1xuICAgICAgICAvLyBIYW5kbGUgaW52b2NhdGlvbnMgaW4gYSB0aWdodCBsb29wLlxuICAgICAgICB0aW1lcklkID0gc2V0VGltZW91dCh0aW1lckV4cGlyZWQsIHdhaXQpO1xuICAgICAgICByZXR1cm4gaW52b2tlRnVuYyhsYXN0Q2FsbFRpbWUpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAodGltZXJJZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aW1lcklkID0gc2V0VGltZW91dCh0aW1lckV4cGlyZWQsIHdhaXQpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG4gIGRlYm91bmNlZC5jYW5jZWwgPSBjYW5jZWw7XG4gIGRlYm91bmNlZC5mbHVzaCA9IGZsdXNoO1xuICByZXR1cm4gZGVib3VuY2VkO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIHRoZVxuICogW2xhbmd1YWdlIHR5cGVdKGh0dHA6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1lY21hc2NyaXB0LWxhbmd1YWdlLXR5cGVzKVxuICogb2YgYE9iamVjdGAuIChlLmcuIGFycmF5cywgZnVuY3Rpb25zLCBvYmplY3RzLCByZWdleGVzLCBgbmV3IE51bWJlcigwKWAsIGFuZCBgbmV3IFN0cmluZygnJylgKVxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIG9iamVjdCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0KHt9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChfLm5vb3ApO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QobnVsbCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgcmV0dXJuICEhdmFsdWUgJiYgKHR5cGUgPT0gJ29iamVjdCcgfHwgdHlwZSA9PSAnZnVuY3Rpb24nKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZS4gQSB2YWx1ZSBpcyBvYmplY3QtbGlrZSBpZiBpdCdzIG5vdCBgbnVsbGBcbiAqIGFuZCBoYXMgYSBgdHlwZW9mYCByZXN1bHQgb2YgXCJvYmplY3RcIi5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZSh7fSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdExpa2UoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICByZXR1cm4gISF2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCc7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGBTeW1ib2xgIHByaW1pdGl2ZSBvciBvYmplY3QuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBzeW1ib2wsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc1N5bWJvbChTeW1ib2wuaXRlcmF0b3IpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNTeW1ib2woJ2FiYycpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNTeW1ib2wodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSAnc3ltYm9sJyB8fFxuICAgIChpc09iamVjdExpa2UodmFsdWUpICYmIG9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpID09IHN5bWJvbFRhZyk7XG59XG5cbi8qKlxuICogQ29udmVydHMgYHZhbHVlYCB0byBhIG51bWJlci5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcHJvY2Vzcy5cbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIG51bWJlci5cbiAqIEBleGFtcGxlXG4gKlxuICogXy50b051bWJlcigzLjIpO1xuICogLy8gPT4gMy4yXG4gKlxuICogXy50b051bWJlcihOdW1iZXIuTUlOX1ZBTFVFKTtcbiAqIC8vID0+IDVlLTMyNFxuICpcbiAqIF8udG9OdW1iZXIoSW5maW5pdHkpO1xuICogLy8gPT4gSW5maW5pdHlcbiAqXG4gKiBfLnRvTnVtYmVyKCczLjInKTtcbiAqIC8vID0+IDMuMlxuICovXG5mdW5jdGlvbiB0b051bWJlcih2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09ICdudW1iZXInKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIGlmIChpc1N5bWJvbCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gTkFOO1xuICB9XG4gIGlmIChpc09iamVjdCh2YWx1ZSkpIHtcbiAgICB2YXIgb3RoZXIgPSB0eXBlb2YgdmFsdWUudmFsdWVPZiA9PSAnZnVuY3Rpb24nID8gdmFsdWUudmFsdWVPZigpIDogdmFsdWU7XG4gICAgdmFsdWUgPSBpc09iamVjdChvdGhlcikgPyAob3RoZXIgKyAnJykgOiBvdGhlcjtcbiAgfVxuICBpZiAodHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHZhbHVlID09PSAwID8gdmFsdWUgOiArdmFsdWU7XG4gIH1cbiAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKHJlVHJpbSwgJycpO1xuICB2YXIgaXNCaW5hcnkgPSByZUlzQmluYXJ5LnRlc3QodmFsdWUpO1xuICByZXR1cm4gKGlzQmluYXJ5IHx8IHJlSXNPY3RhbC50ZXN0KHZhbHVlKSlcbiAgICA/IGZyZWVQYXJzZUludCh2YWx1ZS5zbGljZSgyKSwgaXNCaW5hcnkgPyAyIDogOClcbiAgICA6IChyZUlzQmFkSGV4LnRlc3QodmFsdWUpID8gTkFOIDogK3ZhbHVlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkZWJvdW5jZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztBQVNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFFQTs7Ozs7O0FBS0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUdBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWdCQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzREE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBVUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUlBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5QkE7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3QkE7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkE7QUFDQTtBQUVBO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF1QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lodash.debounce/index.js\n");

/***/ }),

/***/ "./node_modules/nanoid/index.browser.js":
/*!**********************************************!*\
  !*** ./node_modules/nanoid/index.browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("if (true) {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    throw new Error('React Native does not have a built-in secure random generator. ' + 'If you don’t need unpredictable IDs, you can use `nanoid/non-secure`. ' + 'For secure ID install `expo-random` locally and use `nanoid/async`.');\n  }\n\n  if (typeof self === 'undefined' || !self.crypto && !self.msCrypto) {\n    throw new Error('Your browser does not have secure random generator. ' + 'If you don’t need unpredictable IDs, you can use nanoid/non-secure.');\n  }\n}\n\nvar crypto = self.crypto || self.msCrypto;\n/*\n * This alphabet uses a-z A-Z 0-9 _- symbols.\n * Symbols order was changed for better gzip compression.\n */\n\nvar url = 'QLUint8ARdomValuesObj0h6345-79BCrypgJzHKTNYDSMkXPZ_FfG1WcqvwxEI2';\n\nmodule.exports = function (size) {\n  size = size || 21;\n  var id = '';\n  var bytes = crypto.getRandomValues(new Uint8Array(size));\n\n  while (size--) {\n    id += url[bytes[size] & 63];\n  }\n\n  return id;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmFub2lkL2luZGV4LmJyb3dzZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbmFub2lkL2luZGV4LmJyb3dzZXIuanM/ZTFiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBpZiAodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdSZWFjdE5hdGl2ZScpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAnUmVhY3QgTmF0aXZlIGRvZXMgbm90IGhhdmUgYSBidWlsdC1pbiBzZWN1cmUgcmFuZG9tIGdlbmVyYXRvci4gJyArXG4gICAgICAnSWYgeW91IGRvbuKAmXQgbmVlZCB1bnByZWRpY3RhYmxlIElEcywgeW91IGNhbiB1c2UgYG5hbm9pZC9ub24tc2VjdXJlYC4gJyArXG4gICAgICAnRm9yIHNlY3VyZSBJRCBpbnN0YWxsIGBleHBvLXJhbmRvbWAgbG9jYWxseSBhbmQgdXNlIGBuYW5vaWQvYXN5bmNgLidcbiAgICApXG4gIH1cbiAgaWYgKHR5cGVvZiBzZWxmID09PSAndW5kZWZpbmVkJyB8fCAoIXNlbGYuY3J5cHRvICYmICFzZWxmLm1zQ3J5cHRvKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICdZb3VyIGJyb3dzZXIgZG9lcyBub3QgaGF2ZSBzZWN1cmUgcmFuZG9tIGdlbmVyYXRvci4gJyArXG4gICAgICAnSWYgeW91IGRvbuKAmXQgbmVlZCB1bnByZWRpY3RhYmxlIElEcywgeW91IGNhbiB1c2UgbmFub2lkL25vbi1zZWN1cmUuJ1xuICAgIClcbiAgfVxufVxuXG52YXIgY3J5cHRvID0gc2VsZi5jcnlwdG8gfHwgc2VsZi5tc0NyeXB0b1xuXG4vKlxuICogVGhpcyBhbHBoYWJldCB1c2VzIGEteiBBLVogMC05IF8tIHN5bWJvbHMuXG4gKiBTeW1ib2xzIG9yZGVyIHdhcyBjaGFuZ2VkIGZvciBiZXR0ZXIgZ3ppcCBjb21wcmVzc2lvbi5cbiAqL1xudmFyIHVybCA9ICdRTFVpbnQ4QVJkb21WYWx1ZXNPYmowaDYzNDUtNzlCQ3J5cGdKekhLVE5ZRFNNa1hQWl9GZkcxV2Nxdnd4RUkyJ1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChzaXplKSB7XG4gIHNpemUgPSBzaXplIHx8IDIxXG4gIHZhciBpZCA9ICcnXG4gIHZhciBieXRlcyA9IGNyeXB0by5nZXRSYW5kb21WYWx1ZXMobmV3IFVpbnQ4QXJyYXkoc2l6ZSkpXG4gIHdoaWxlIChzaXplLS0pIHtcbiAgICBpZCArPSB1cmxbYnl0ZXNbc2l6ZV0gJiA2M11cbiAgfVxuICByZXR1cm4gaWRcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUFBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/nanoid/index.browser.js\n");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function () {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\n true ? module.exports : undefined);\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/regenerator-runtime/runtime.js\n");

/***/ }),

/***/ "./node_modules/subtag/subtag.js":
/*!***************************************!*\
  !*** ./node_modules/subtag/subtag.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function (root, name, make) {\n  if ( true && module.exports) module.exports = make();else root[name] = make();\n}(this, 'subtag', function () {\n  var empty = '';\n  var pattern = /^([a-zA-Z]{2,3})(?:[_-]+([a-zA-Z]{3})(?=$|[_-]+))?(?:[_-]+([a-zA-Z]{4})(?=$|[_-]+))?(?:[_-]+([a-zA-Z]{2}|[0-9]{3})(?=$|[_-]+))?/;\n\n  function match(tag) {\n    return tag.match(pattern) || [];\n  }\n\n  function split(tag) {\n    return match(tag).filter(function (v, i) {\n      return v && i;\n    });\n  }\n\n  function api(tag) {\n    tag = match(tag);\n    return {\n      language: tag[1] || empty,\n      extlang: tag[2] || empty,\n      script: tag[3] || empty,\n      region: tag[4] || empty\n    };\n  }\n\n  function expose(target, key, value) {\n    Object.defineProperty(target, key, {\n      value: value,\n      enumerable: true\n    });\n  }\n\n  function part(position, pattern, type) {\n    function method(tag) {\n      return match(tag)[position] || empty;\n    }\n\n    expose(method, 'pattern', pattern);\n    expose(api, type, method);\n  }\n\n  part(1, /^[a-zA-Z]{2,3}$/, 'language');\n  part(2, /^[a-zA-Z]{3}$/, 'extlang');\n  part(3, /^[a-zA-Z]{4}$/, 'script');\n  part(4, /^[a-zA-Z]{2}$|^[0-9]{3}$/, 'region');\n  expose(api, 'split', split);\n  return api;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VidGFnL3N1YnRhZy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdWJ0YWcvc3VidGFnLmpzP2U0YWUiXSwic291cmNlc0NvbnRlbnQiOlsiIWZ1bmN0aW9uKHJvb3QsIG5hbWUsIG1ha2UpIHtcclxuICBpZiAodHlwZW9mIG1vZHVsZSAhPSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykgbW9kdWxlLmV4cG9ydHMgPSBtYWtlKClcclxuICBlbHNlIHJvb3RbbmFtZV0gPSBtYWtlKClcclxufSh0aGlzLCAnc3VidGFnJywgZnVuY3Rpb24oKSB7XHJcblxyXG4gIHZhciBlbXB0eSA9ICcnXHJcbiAgdmFyIHBhdHRlcm4gPSAvXihbYS16QS1aXXsyLDN9KSg/OltfLV0rKFthLXpBLVpdezN9KSg/PSR8W18tXSspKT8oPzpbXy1dKyhbYS16QS1aXXs0fSkoPz0kfFtfLV0rKSk/KD86W18tXSsoW2EtekEtWl17Mn18WzAtOV17M30pKD89JHxbXy1dKykpPy9cclxuXHJcbiAgZnVuY3Rpb24gbWF0Y2godGFnKSB7XHJcbiAgICByZXR1cm4gdGFnLm1hdGNoKHBhdHRlcm4pIHx8IFtdXHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBzcGxpdCh0YWcpIHtcclxuICAgIHJldHVybiBtYXRjaCh0YWcpLmZpbHRlcihmdW5jdGlvbih2LCBpKSB7IHJldHVybiB2ICYmIGkgfSlcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGFwaSh0YWcpIHtcclxuICAgIHRhZyA9IG1hdGNoKHRhZylcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGxhbmd1YWdlOiB0YWdbMV0gfHwgZW1wdHksXHJcbiAgICAgIGV4dGxhbmc6IHRhZ1syXSB8fCBlbXB0eSxcclxuICAgICAgc2NyaXB0OiB0YWdbM10gfHwgZW1wdHksXHJcbiAgICAgIHJlZ2lvbjogdGFnWzRdIHx8IGVtcHR5XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBleHBvc2UodGFyZ2V0LCBrZXksIHZhbHVlKSB7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHtcclxuICAgICAgdmFsdWU6IHZhbHVlLFxyXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcGFydChwb3NpdGlvbiwgcGF0dGVybiwgdHlwZSkge1xyXG4gICAgZnVuY3Rpb24gbWV0aG9kKHRhZykge1xyXG4gICAgICByZXR1cm4gbWF0Y2godGFnKVtwb3NpdGlvbl0gfHwgZW1wdHlcclxuICAgIH1cclxuICAgIGV4cG9zZShtZXRob2QsICdwYXR0ZXJuJywgcGF0dGVybilcclxuICAgIGV4cG9zZShhcGksIHR5cGUsIG1ldGhvZClcclxuICB9XHJcblxyXG4gIHBhcnQoMSwgL15bYS16QS1aXXsyLDN9JC8sICdsYW5ndWFnZScpXHJcbiAgcGFydCgyLCAvXlthLXpBLVpdezN9JC8sICdleHRsYW5nJylcclxuICBwYXJ0KDMsIC9eW2EtekEtWl17NH0kLywgJ3NjcmlwdCcpXHJcbiAgcGFydCg0LCAvXlthLXpBLVpdezJ9JHxeWzAtOV17M30kLywgJ3JlZ2lvbicpXHJcblxyXG4gIGV4cG9zZShhcGksICdzcGxpdCcsIHNwbGl0KVxyXG5cclxuICByZXR1cm4gYXBpXHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/subtag/subtag.js\n");

/***/ }),

/***/ "./node_modules/suggestions/index.js":
/*!*******************************************!*\
  !*** ./node_modules/suggestions/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * A typeahead component for inputs\n * @class Suggestions\n *\n * @param {HTMLInputElement} el A valid HTML input element\n * @param {Array} data An array of data used for results\n * @param {Object} options\n * @param {Number} [options.limit=5] Max number of results to display in the auto suggest list.\n * @param {Number} [options.minLength=2] Number of characters typed into an input to trigger suggestions.\n * @param {Boolean} [options.hideOnBlur=true] If `true`, hides the suggestions when focus is lost.\n * @return {Suggestions} `this`\n * @example\n * // in the browser\n * var input = document.querySelector('input');\n * var data = [\n *   'Roy Eldridge',\n *   'Roy Hargrove',\n *   'Rex Stewart'\n * ];\n *\n * new Suggestions(input, data);\n *\n * // with options\n * var input = document.querySelector('input');\n * var data = [{\n *   name: 'Roy Eldridge',\n *   year: 1911\n * }, {\n *   name: 'Roy Hargrove',\n *   year: 1969\n * }, {\n *   name: 'Rex Stewart',\n *   year: 1907\n * }];\n *\n * var typeahead = new Suggestions(input, data, {\n *   filter: false, // Disable filtering\n *   minLength: 3, // Number of characters typed into an input to trigger suggestions.\n *   limit: 3, //  Max number of results to display.\n *   hideOnBlur: false // Don't hide results when input loses focus\n * });\n *\n * // As we're passing an object of an arrays as data, override\n * // `getItemValue` by specifying the specific property to search on.\n * typeahead.getItemValue = function(item) { return item.name };\n *\n * input.addEventListener('change', function() {\n *   console.log(typeahead.selected); // Current selected item.\n * });\n *\n * // With browserify\n * var Suggestions = require('suggestions');\n *\n * new Suggestions(input, data);\n */\n\nvar Suggestions = __webpack_require__(/*! ./src/suggestions */ \"./node_modules/suggestions/src/suggestions.js\");\n\nwindow.Suggestions = module.exports = Suggestions;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VnZ2VzdGlvbnMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3VnZ2VzdGlvbnMvaW5kZXguanM/MDYyZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQSB0eXBlYWhlYWQgY29tcG9uZW50IGZvciBpbnB1dHNcbiAqIEBjbGFzcyBTdWdnZXN0aW9uc1xuICpcbiAqIEBwYXJhbSB7SFRNTElucHV0RWxlbWVudH0gZWwgQSB2YWxpZCBIVE1MIGlucHV0IGVsZW1lbnRcbiAqIEBwYXJhbSB7QXJyYXl9IGRhdGEgQW4gYXJyYXkgb2YgZGF0YSB1c2VkIGZvciByZXN1bHRzXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLmxpbWl0PTVdIE1heCBudW1iZXIgb2YgcmVzdWx0cyB0byBkaXNwbGF5IGluIHRoZSBhdXRvIHN1Z2dlc3QgbGlzdC5cbiAqIEBwYXJhbSB7TnVtYmVyfSBbb3B0aW9ucy5taW5MZW5ndGg9Ml0gTnVtYmVyIG9mIGNoYXJhY3RlcnMgdHlwZWQgaW50byBhbiBpbnB1dCB0byB0cmlnZ2VyIHN1Z2dlc3Rpb25zLlxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5oaWRlT25CbHVyPXRydWVdIElmIGB0cnVlYCwgaGlkZXMgdGhlIHN1Z2dlc3Rpb25zIHdoZW4gZm9jdXMgaXMgbG9zdC5cbiAqIEByZXR1cm4ge1N1Z2dlc3Rpb25zfSBgdGhpc2BcbiAqIEBleGFtcGxlXG4gKiAvLyBpbiB0aGUgYnJvd3NlclxuICogdmFyIGlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXQnKTtcbiAqIHZhciBkYXRhID0gW1xuICogICAnUm95IEVsZHJpZGdlJyxcbiAqICAgJ1JveSBIYXJncm92ZScsXG4gKiAgICdSZXggU3Rld2FydCdcbiAqIF07XG4gKlxuICogbmV3IFN1Z2dlc3Rpb25zKGlucHV0LCBkYXRhKTtcbiAqXG4gKiAvLyB3aXRoIG9wdGlvbnNcbiAqIHZhciBpbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0Jyk7XG4gKiB2YXIgZGF0YSA9IFt7XG4gKiAgIG5hbWU6ICdSb3kgRWxkcmlkZ2UnLFxuICogICB5ZWFyOiAxOTExXG4gKiB9LCB7XG4gKiAgIG5hbWU6ICdSb3kgSGFyZ3JvdmUnLFxuICogICB5ZWFyOiAxOTY5XG4gKiB9LCB7XG4gKiAgIG5hbWU6ICdSZXggU3Rld2FydCcsXG4gKiAgIHllYXI6IDE5MDdcbiAqIH1dO1xuICpcbiAqIHZhciB0eXBlYWhlYWQgPSBuZXcgU3VnZ2VzdGlvbnMoaW5wdXQsIGRhdGEsIHtcbiAqICAgZmlsdGVyOiBmYWxzZSwgLy8gRGlzYWJsZSBmaWx0ZXJpbmdcbiAqICAgbWluTGVuZ3RoOiAzLCAvLyBOdW1iZXIgb2YgY2hhcmFjdGVycyB0eXBlZCBpbnRvIGFuIGlucHV0IHRvIHRyaWdnZXIgc3VnZ2VzdGlvbnMuXG4gKiAgIGxpbWl0OiAzLCAvLyAgTWF4IG51bWJlciBvZiByZXN1bHRzIHRvIGRpc3BsYXkuXG4gKiAgIGhpZGVPbkJsdXI6IGZhbHNlIC8vIERvbid0IGhpZGUgcmVzdWx0cyB3aGVuIGlucHV0IGxvc2VzIGZvY3VzXG4gKiB9KTtcbiAqXG4gKiAvLyBBcyB3ZSdyZSBwYXNzaW5nIGFuIG9iamVjdCBvZiBhbiBhcnJheXMgYXMgZGF0YSwgb3ZlcnJpZGVcbiAqIC8vIGBnZXRJdGVtVmFsdWVgIGJ5IHNwZWNpZnlpbmcgdGhlIHNwZWNpZmljIHByb3BlcnR5IHRvIHNlYXJjaCBvbi5cbiAqIHR5cGVhaGVhZC5nZXRJdGVtVmFsdWUgPSBmdW5jdGlvbihpdGVtKSB7IHJldHVybiBpdGVtLm5hbWUgfTtcbiAqXG4gKiBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBmdW5jdGlvbigpIHtcbiAqICAgY29uc29sZS5sb2codHlwZWFoZWFkLnNlbGVjdGVkKTsgLy8gQ3VycmVudCBzZWxlY3RlZCBpdGVtLlxuICogfSk7XG4gKlxuICogLy8gV2l0aCBicm93c2VyaWZ5XG4gKiB2YXIgU3VnZ2VzdGlvbnMgPSByZXF1aXJlKCdzdWdnZXN0aW9ucycpO1xuICpcbiAqIG5ldyBTdWdnZXN0aW9ucyhpbnB1dCwgZGF0YSk7XG4gKi9cbnZhciBTdWdnZXN0aW9ucyA9IHJlcXVpcmUoJy4vc3JjL3N1Z2dlc3Rpb25zJyk7XG53aW5kb3cuU3VnZ2VzdGlvbnMgPSBtb2R1bGUuZXhwb3J0cyA9IFN1Z2dlc3Rpb25zO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVEQTtBQUNBO0FBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/suggestions/index.js\n");

/***/ }),

/***/ "./node_modules/suggestions/src/list.js":
/*!**********************************************!*\
  !*** ./node_modules/suggestions/src/list.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar List = function (component) {\n  this.component = component;\n  this.items = [];\n  this.active = 0;\n  this.wrapper = document.createElement('div');\n  this.wrapper.className = 'suggestions-wrapper';\n  this.element = document.createElement('ul');\n  this.element.className = 'suggestions';\n  this.wrapper.appendChild(this.element); // selectingListItem is set to true in the time between the mousedown and mouseup when clicking an item in the list\n  // mousedown on a list item will cause the input to blur which normally hides the list, so this flag is used to keep\n  // the list open until the mouseup\n\n  this.selectingListItem = false;\n  component.el.parentNode.insertBefore(this.wrapper, component.el.nextSibling);\n  return this;\n};\n\nList.prototype.show = function () {\n  this.element.style.display = 'block';\n};\n\nList.prototype.hide = function () {\n  this.element.style.display = 'none';\n};\n\nList.prototype.add = function (item) {\n  this.items.push(item);\n};\n\nList.prototype.clear = function () {\n  this.items = [];\n  this.active = 0;\n};\n\nList.prototype.isEmpty = function () {\n  return !this.items.length;\n};\n\nList.prototype.isVisible = function () {\n  return this.element.style.display === 'block';\n};\n\nList.prototype.draw = function () {\n  this.element.innerHTML = '';\n\n  if (this.items.length === 0) {\n    this.hide();\n    return;\n  }\n\n  for (var i = 0; i < this.items.length; i++) {\n    this.drawItem(this.items[i], this.active === i);\n  }\n\n  this.show();\n};\n\nList.prototype.drawItem = function (item, active) {\n  var li = document.createElement('li'),\n      a = document.createElement('a');\n  if (active) li.className += ' active';\n  a.innerHTML = item.string;\n  li.appendChild(a);\n  this.element.appendChild(li);\n  li.addEventListener('mousedown', function () {\n    this.selectingListItem = true;\n  }.bind(this));\n  li.addEventListener('mouseup', function () {\n    this.handleMouseUp.call(this, item);\n  }.bind(this));\n};\n\nList.prototype.handleMouseUp = function (item) {\n  this.selectingListItem = false;\n  this.component.value(item.original);\n  this.clear();\n  this.draw();\n};\n\nList.prototype.move = function (index) {\n  this.active = index;\n  this.draw();\n};\n\nList.prototype.previous = function () {\n  this.move(this.active === 0 ? this.items.length - 1 : this.active - 1);\n};\n\nList.prototype.next = function () {\n  this.move(this.active === this.items.length - 1 ? 0 : this.active + 1);\n};\n\nList.prototype.drawError = function (msg) {\n  var li = document.createElement('li');\n  li.innerHTML = msg;\n  this.element.appendChild(li);\n  this.show();\n};\n\nmodule.exports = List;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VnZ2VzdGlvbnMvc3JjL2xpc3QuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3VnZ2VzdGlvbnMvc3JjL2xpc3QuanM/NDk3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBMaXN0ID0gZnVuY3Rpb24oY29tcG9uZW50KSB7XG4gIHRoaXMuY29tcG9uZW50ID0gY29tcG9uZW50O1xuICB0aGlzLml0ZW1zID0gW107XG4gIHRoaXMuYWN0aXZlID0gMDtcbiAgdGhpcy53cmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIHRoaXMud3JhcHBlci5jbGFzc05hbWUgPSAnc3VnZ2VzdGlvbnMtd3JhcHBlcic7XG4gIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJyk7XG4gIHRoaXMuZWxlbWVudC5jbGFzc05hbWUgPSAnc3VnZ2VzdGlvbnMnO1xuICB0aGlzLndyYXBwZXIuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50KTtcblxuICAvLyBzZWxlY3RpbmdMaXN0SXRlbSBpcyBzZXQgdG8gdHJ1ZSBpbiB0aGUgdGltZSBiZXR3ZWVuIHRoZSBtb3VzZWRvd24gYW5kIG1vdXNldXAgd2hlbiBjbGlja2luZyBhbiBpdGVtIGluIHRoZSBsaXN0XG4gIC8vIG1vdXNlZG93biBvbiBhIGxpc3QgaXRlbSB3aWxsIGNhdXNlIHRoZSBpbnB1dCB0byBibHVyIHdoaWNoIG5vcm1hbGx5IGhpZGVzIHRoZSBsaXN0LCBzbyB0aGlzIGZsYWcgaXMgdXNlZCB0byBrZWVwXG4gIC8vIHRoZSBsaXN0IG9wZW4gdW50aWwgdGhlIG1vdXNldXBcbiAgdGhpcy5zZWxlY3RpbmdMaXN0SXRlbSA9IGZhbHNlO1xuXG4gIGNvbXBvbmVudC5lbC5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzLndyYXBwZXIsIGNvbXBvbmVudC5lbC5uZXh0U2libGluZyk7XG4gIHJldHVybiB0aGlzO1xufTtcblxuTGlzdC5wcm90b3R5cGUuc2hvdyA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLmVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG59O1xuXG5MaXN0LnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xufTtcblxuTGlzdC5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24oaXRlbSkge1xuICB0aGlzLml0ZW1zLnB1c2goaXRlbSk7XG59O1xuXG5MaXN0LnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLml0ZW1zID0gW107XG4gIHRoaXMuYWN0aXZlID0gMDtcbn07XG5cbkxpc3QucHJvdG90eXBlLmlzRW1wdHkgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuICF0aGlzLml0ZW1zLmxlbmd0aDtcbn07XG5cbkxpc3QucHJvdG90eXBlLmlzVmlzaWJsZSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5lbGVtZW50LnN0eWxlLmRpc3BsYXkgPT09ICdibG9jayc7XG59O1xuXG5MaXN0LnByb3RvdHlwZS5kcmF3ID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuZWxlbWVudC5pbm5lckhUTUwgPSAnJztcblxuICBpZiAodGhpcy5pdGVtcy5sZW5ndGggPT09IDApIHtcbiAgICB0aGlzLmhpZGUoKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuaXRlbXMubGVuZ3RoOyBpKyspIHtcbiAgICB0aGlzLmRyYXdJdGVtKHRoaXMuaXRlbXNbaV0sIHRoaXMuYWN0aXZlID09PSBpKTtcbiAgfVxuXG4gIHRoaXMuc2hvdygpO1xufTtcblxuTGlzdC5wcm90b3R5cGUuZHJhd0l0ZW0gPSBmdW5jdGlvbihpdGVtLCBhY3RpdmUpIHtcbiAgdmFyIGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKSxcbiAgICBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuXG4gIGlmIChhY3RpdmUpIGxpLmNsYXNzTmFtZSArPSAnIGFjdGl2ZSc7XG5cbiAgYS5pbm5lckhUTUwgPSBpdGVtLnN0cmluZztcblxuICBsaS5hcHBlbmRDaGlsZChhKTtcbiAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKGxpKTtcblxuICBsaS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnNlbGVjdGluZ0xpc3RJdGVtID0gdHJ1ZTtcbiAgfS5iaW5kKHRoaXMpKTtcblxuICBsaS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5oYW5kbGVNb3VzZVVwLmNhbGwodGhpcywgaXRlbSk7XG4gIH0uYmluZCh0aGlzKSk7XG59O1xuXG5MaXN0LnByb3RvdHlwZS5oYW5kbGVNb3VzZVVwID0gZnVuY3Rpb24oaXRlbSkge1xuICB0aGlzLnNlbGVjdGluZ0xpc3RJdGVtID0gZmFsc2U7XG4gIHRoaXMuY29tcG9uZW50LnZhbHVlKGl0ZW0ub3JpZ2luYWwpO1xuICB0aGlzLmNsZWFyKCk7XG4gIHRoaXMuZHJhdygpO1xufTtcblxuTGlzdC5wcm90b3R5cGUubW92ZSA9IGZ1bmN0aW9uKGluZGV4KSB7XG4gIHRoaXMuYWN0aXZlID0gaW5kZXg7XG4gIHRoaXMuZHJhdygpO1xufTtcblxuTGlzdC5wcm90b3R5cGUucHJldmlvdXMgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5tb3ZlKHRoaXMuYWN0aXZlID09PSAwID8gdGhpcy5pdGVtcy5sZW5ndGggLSAxIDogdGhpcy5hY3RpdmUgLSAxKTtcbn07XG5cbkxpc3QucHJvdG90eXBlLm5leHQgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5tb3ZlKHRoaXMuYWN0aXZlID09PSB0aGlzLml0ZW1zLmxlbmd0aCAtIDEgPyAwIDogdGhpcy5hY3RpdmUgKyAxKTtcbn07XG5cbkxpc3QucHJvdG90eXBlLmRyYXdFcnJvciA9IGZ1bmN0aW9uKG1zZyl7XG4gIHZhciBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG5cbiAgbGkuaW5uZXJIVE1MID0gbXNnO1xuXG4gIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZChsaSk7XG4gIHRoaXMuc2hvdygpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IExpc3Q7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/suggestions/src/list.js\n");

/***/ }),

/***/ "./node_modules/suggestions/src/suggestions.js":
/*!*****************************************************!*\
  !*** ./node_modules/suggestions/src/suggestions.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar extend = __webpack_require__(/*! xtend */ \"./node_modules/xtend/immutable.js\");\n\nvar fuzzy = __webpack_require__(/*! fuzzy */ \"./node_modules/fuzzy/lib/fuzzy.js\");\n\nvar List = __webpack_require__(/*! ./list */ \"./node_modules/suggestions/src/list.js\");\n\nvar Suggestions = function (el, data, options) {\n  options = options || {};\n  this.options = extend({\n    minLength: 2,\n    limit: 5,\n    filter: true,\n    hideOnBlur: true\n  }, options);\n  this.el = el;\n  this.data = data || [];\n  this.list = new List(this);\n  this.query = '';\n  this.selected = null;\n  this.list.draw();\n  this.el.addEventListener('keyup', function (e) {\n    this.handleKeyUp(e.keyCode);\n  }.bind(this), false);\n  this.el.addEventListener('keydown', function (e) {\n    this.handleKeyDown(e);\n  }.bind(this));\n  this.el.addEventListener('focus', function () {\n    this.handleFocus();\n  }.bind(this));\n  this.el.addEventListener('blur', function () {\n    this.handleBlur();\n  }.bind(this));\n  this.el.addEventListener('paste', function (e) {\n    this.handlePaste(e);\n  }.bind(this)); // use user-provided render function if given, otherwise just use the default\n\n  this.render = this.options.render ? this.options.render.bind(this) : this.render.bind(this);\n  this.getItemValue = this.options.getItemValue ? this.options.getItemValue.bind(this) : this.getItemValue.bind(this);\n  return this;\n};\n\nSuggestions.prototype.handleKeyUp = function (keyCode) {\n  // 40 - DOWN\n  // 38 - UP\n  // 27 - ESC\n  // 13 - ENTER\n  // 9 - TAB\n  if (keyCode === 40 || keyCode === 38 || keyCode === 27 || keyCode === 13 || keyCode === 9) return;\n  this.handleInputChange(this.el.value);\n};\n\nSuggestions.prototype.handleKeyDown = function (e) {\n  switch (e.keyCode) {\n    case 13: // ENTER\n\n    case 9:\n      // TAB\n      if (!this.list.isEmpty()) {\n        if (this.list.isVisible()) {\n          e.preventDefault();\n        }\n\n        this.value(this.list.items[this.list.active].original);\n        this.list.hide();\n      }\n\n      break;\n\n    case 27:\n      // ESC\n      if (!this.list.isEmpty()) this.list.hide();\n      break;\n\n    case 38:\n      // UP\n      this.list.previous();\n      break;\n\n    case 40:\n      // DOWN\n      this.list.next();\n      break;\n  }\n};\n\nSuggestions.prototype.handleBlur = function () {\n  if (!this.list.selectingListItem && this.options.hideOnBlur) {\n    this.list.hide();\n  }\n};\n\nSuggestions.prototype.handlePaste = function (e) {\n  if (e.clipboardData) {\n    this.handleInputChange(e.clipboardData.getData('Text'));\n  } else {\n    var self = this;\n    setTimeout(function () {\n      self.handleInputChange(e.target.value);\n    }, 100);\n  }\n};\n\nSuggestions.prototype.handleInputChange = function (query) {\n  this.query = this.normalize(query);\n  this.list.clear();\n\n  if (this.query.length < this.options.minLength) {\n    this.list.draw();\n    return;\n  }\n\n  this.getCandidates(function (data) {\n    for (var i = 0; i < data.length; i++) {\n      this.list.add(data[i]);\n      if (i === this.options.limit - 1) break;\n    }\n\n    this.list.draw();\n  }.bind(this));\n};\n\nSuggestions.prototype.handleFocus = function () {\n  if (!this.list.isEmpty()) this.list.show();\n  this.list.selectingListItem = false;\n};\n/**\n * Update data previously passed\n *\n * @param {Array} revisedData\n */\n\n\nSuggestions.prototype.update = function (revisedData) {\n  this.data = revisedData;\n  this.handleKeyUp();\n};\n/**\n * Clears data\n */\n\n\nSuggestions.prototype.clear = function () {\n  this.data = [];\n  this.list.clear();\n};\n/**\n * Normalize the results list and input value for matching\n *\n * @param {String} value\n * @return {String}\n */\n\n\nSuggestions.prototype.normalize = function (value) {\n  value = value.toLowerCase();\n  return value;\n};\n/**\n * Evaluates whether an array item qualifies as a match with the current query\n *\n * @param {String} candidate a possible item from the array passed\n * @param {String} query the current query\n * @return {Boolean}\n */\n\n\nSuggestions.prototype.match = function (candidate, query) {\n  return candidate.indexOf(query) > -1;\n};\n\nSuggestions.prototype.value = function (value) {\n  this.selected = value;\n  this.el.value = this.getItemValue(value);\n\n  if (document.createEvent) {\n    var e = document.createEvent('HTMLEvents');\n    e.initEvent('change', true, false);\n    this.el.dispatchEvent(e);\n  } else {\n    this.el.fireEvent('onchange');\n  }\n};\n\nSuggestions.prototype.getCandidates = function (callback) {\n  var options = {\n    pre: '<strong>',\n    post: '</strong>',\n    extract: function (d) {\n      return this.getItemValue(d);\n    }.bind(this)\n  };\n  var results;\n\n  if (this.options.filter) {\n    results = fuzzy.filter(this.query, this.data, options);\n    results = results.map(function (item) {\n      return {\n        original: item.original,\n        string: this.render(item.original, item.string)\n      };\n    }.bind(this));\n  } else {\n    results = this.data.map(function (d) {\n      var renderedString = this.render(d);\n      return {\n        original: d,\n        string: renderedString\n      };\n    }.bind(this));\n  }\n\n  callback(results);\n};\n/**\n * For a given item in the data array, return what should be used as the candidate string\n *\n * @param {Object|String} item an item from the data array\n * @return {String} item\n */\n\n\nSuggestions.prototype.getItemValue = function (item) {\n  return item;\n};\n/**\n * For a given item in the data array, return a string of html that should be rendered in the dropdown\n * @param {Object|String} item an item from the data array\n * @param {String} sourceFormatting a string that has pre-formatted html that should be passed directly through the render function \n * @return {String} html\n */\n\n\nSuggestions.prototype.render = function (item, sourceFormatting) {\n  if (sourceFormatting) {\n    // use existing formatting on the source string\n    return sourceFormatting;\n  }\n\n  var boldString = item.original ? this.getItemValue(item.original) : this.getItemValue(item);\n  var indexString = this.normalize(boldString);\n  var indexOfQuery = indexString.lastIndexOf(this.query);\n\n  while (indexOfQuery > -1) {\n    var endIndexOfQuery = indexOfQuery + this.query.length;\n    boldString = boldString.slice(0, indexOfQuery) + '<strong>' + boldString.slice(indexOfQuery, endIndexOfQuery) + '</strong>' + boldString.slice(endIndexOfQuery);\n    indexOfQuery = indexString.slice(0, indexOfQuery).lastIndexOf(this.query);\n  }\n\n  return boldString;\n};\n/**\n * Render an custom error message in the suggestions list\n * @param {String} msg An html string to render as an error message\n */\n\n\nSuggestions.prototype.renderError = function (msg) {\n  this.list.drawError(msg);\n};\n\nmodule.exports = Suggestions;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VnZ2VzdGlvbnMvc3JjL3N1Z2dlc3Rpb25zLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N1Z2dlc3Rpb25zL3NyYy9zdWdnZXN0aW9ucy5qcz80N2Y1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGV4dGVuZCA9IHJlcXVpcmUoJ3h0ZW5kJyk7XG52YXIgZnV6enkgPSByZXF1aXJlKCdmdXp6eScpO1xudmFyIExpc3QgPSByZXF1aXJlKCcuL2xpc3QnKTtcblxudmFyIFN1Z2dlc3Rpb25zID0gZnVuY3Rpb24oZWwsIGRhdGEsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgdGhpcy5vcHRpb25zID0gZXh0ZW5kKHtcbiAgICBtaW5MZW5ndGg6IDIsXG4gICAgbGltaXQ6IDUsXG4gICAgZmlsdGVyOiB0cnVlLFxuICAgIGhpZGVPbkJsdXI6IHRydWVcbiAgfSwgb3B0aW9ucyk7XG5cbiAgdGhpcy5lbCA9IGVsO1xuICB0aGlzLmRhdGEgPSBkYXRhIHx8IFtdO1xuICB0aGlzLmxpc3QgPSBuZXcgTGlzdCh0aGlzKTtcblxuICB0aGlzLnF1ZXJ5ID0gJyc7XG4gIHRoaXMuc2VsZWN0ZWQgPSBudWxsO1xuXG4gIHRoaXMubGlzdC5kcmF3KCk7XG5cbiAgdGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIGZ1bmN0aW9uKGUpIHtcbiAgICB0aGlzLmhhbmRsZUtleVVwKGUua2V5Q29kZSk7XG4gIH0uYmluZCh0aGlzKSwgZmFsc2UpO1xuXG4gIHRoaXMuZWwuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGZ1bmN0aW9uKGUpIHtcbiAgICB0aGlzLmhhbmRsZUtleURvd24oZSk7XG4gIH0uYmluZCh0aGlzKSk7XG5cbiAgdGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKCdmb2N1cycsIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuaGFuZGxlRm9jdXMoKTtcbiAgfS5iaW5kKHRoaXMpKTtcblxuICB0aGlzLmVsLmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCBmdW5jdGlvbigpIHtcbiAgICB0aGlzLmhhbmRsZUJsdXIoKTtcbiAgfS5iaW5kKHRoaXMpKTtcblxuICB0aGlzLmVsLmFkZEV2ZW50TGlzdGVuZXIoJ3Bhc3RlJywgZnVuY3Rpb24oZSkge1xuICAgIHRoaXMuaGFuZGxlUGFzdGUoZSk7XG4gIH0uYmluZCh0aGlzKSk7XG5cbiAgLy8gdXNlIHVzZXItcHJvdmlkZWQgcmVuZGVyIGZ1bmN0aW9uIGlmIGdpdmVuLCBvdGhlcndpc2UganVzdCB1c2UgdGhlIGRlZmF1bHRcbiAgdGhpcy5yZW5kZXIgPSAodGhpcy5vcHRpb25zLnJlbmRlcikgPyB0aGlzLm9wdGlvbnMucmVuZGVyLmJpbmQodGhpcykgOiB0aGlzLnJlbmRlci5iaW5kKHRoaXMpXG5cbiAgdGhpcy5nZXRJdGVtVmFsdWUgPSAodGhpcy5vcHRpb25zLmdldEl0ZW1WYWx1ZSkgPyB0aGlzLm9wdGlvbnMuZ2V0SXRlbVZhbHVlLmJpbmQodGhpcykgOiB0aGlzLmdldEl0ZW1WYWx1ZS5iaW5kKHRoaXMpO1xuXG4gIHJldHVybiB0aGlzO1xufTtcblxuU3VnZ2VzdGlvbnMucHJvdG90eXBlLmhhbmRsZUtleVVwID0gZnVuY3Rpb24oa2V5Q29kZSkge1xuICAvLyA0MCAtIERPV05cbiAgLy8gMzggLSBVUFxuICAvLyAyNyAtIEVTQ1xuICAvLyAxMyAtIEVOVEVSXG4gIC8vIDkgLSBUQUJcblxuICBpZiAoa2V5Q29kZSA9PT0gNDAgfHxcbiAgICAgIGtleUNvZGUgPT09IDM4IHx8XG4gICAgICBrZXlDb2RlID09PSAyNyB8fFxuICAgICAga2V5Q29kZSA9PT0gMTMgfHxcbiAgICAgIGtleUNvZGUgPT09IDkpIHJldHVybjtcblxuICB0aGlzLmhhbmRsZUlucHV0Q2hhbmdlKHRoaXMuZWwudmFsdWUpO1xufTtcblxuU3VnZ2VzdGlvbnMucHJvdG90eXBlLmhhbmRsZUtleURvd24gPSBmdW5jdGlvbihlKSB7XG4gIHN3aXRjaCAoZS5rZXlDb2RlKSB7XG4gICAgY2FzZSAxMzogLy8gRU5URVJcbiAgICBjYXNlIDk6IC8vIFRBQlxuICAgICAgaWYgKCF0aGlzLmxpc3QuaXNFbXB0eSgpKSB7XG4gICAgICAgIGlmICh0aGlzLmxpc3QuaXNWaXNpYmxlKCkpIHtcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy52YWx1ZSh0aGlzLmxpc3QuaXRlbXNbdGhpcy5saXN0LmFjdGl2ZV0ub3JpZ2luYWwpO1xuICAgICAgICB0aGlzLmxpc3QuaGlkZSgpO1xuICAgICAgfVxuICAgIGJyZWFrO1xuICAgIGNhc2UgMjc6IC8vIEVTQ1xuICAgICAgaWYgKCF0aGlzLmxpc3QuaXNFbXB0eSgpKSB0aGlzLmxpc3QuaGlkZSgpO1xuICAgIGJyZWFrO1xuICAgIGNhc2UgMzg6IC8vIFVQXG4gICAgICB0aGlzLmxpc3QucHJldmlvdXMoKTtcbiAgICBicmVhaztcbiAgICBjYXNlIDQwOiAvLyBET1dOXG4gICAgICB0aGlzLmxpc3QubmV4dCgpO1xuICAgIGJyZWFrO1xuICB9XG59O1xuXG5TdWdnZXN0aW9ucy5wcm90b3R5cGUuaGFuZGxlQmx1ciA9IGZ1bmN0aW9uKCkge1xuICBpZiAoIXRoaXMubGlzdC5zZWxlY3RpbmdMaXN0SXRlbSAmJiB0aGlzLm9wdGlvbnMuaGlkZU9uQmx1cikge1xuICAgIHRoaXMubGlzdC5oaWRlKCk7XG4gIH1cbn07XG5cblN1Z2dlc3Rpb25zLnByb3RvdHlwZS5oYW5kbGVQYXN0ZSA9IGZ1bmN0aW9uKGUpIHtcbiAgaWYgKGUuY2xpcGJvYXJkRGF0YSkge1xuICAgIHRoaXMuaGFuZGxlSW5wdXRDaGFuZ2UoZS5jbGlwYm9hcmREYXRhLmdldERhdGEoJ1RleHQnKSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgc2VsZi5oYW5kbGVJbnB1dENoYW5nZShlLnRhcmdldC52YWx1ZSk7XG4gICAgfSwgMTAwKTtcbiAgfVxufTtcblxuU3VnZ2VzdGlvbnMucHJvdG90eXBlLmhhbmRsZUlucHV0Q2hhbmdlID0gZnVuY3Rpb24ocXVlcnkpIHtcbiAgdGhpcy5xdWVyeSA9IHRoaXMubm9ybWFsaXplKHF1ZXJ5KTtcblxuICB0aGlzLmxpc3QuY2xlYXIoKTtcblxuICBpZiAodGhpcy5xdWVyeS5sZW5ndGggPCB0aGlzLm9wdGlvbnMubWluTGVuZ3RoKSB7XG4gICAgdGhpcy5saXN0LmRyYXcoKTtcbiAgICByZXR1cm47XG4gIH1cblxuICB0aGlzLmdldENhbmRpZGF0ZXMoZnVuY3Rpb24oZGF0YSkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgdGhpcy5saXN0LmFkZChkYXRhW2ldKTtcbiAgICAgIGlmIChpID09PSAodGhpcy5vcHRpb25zLmxpbWl0IC0gMSkpIGJyZWFrO1xuICAgIH1cbiAgICB0aGlzLmxpc3QuZHJhdygpO1xuICB9LmJpbmQodGhpcykpO1xufTtcblxuU3VnZ2VzdGlvbnMucHJvdG90eXBlLmhhbmRsZUZvY3VzID0gZnVuY3Rpb24oKSB7XG4gIGlmICghdGhpcy5saXN0LmlzRW1wdHkoKSkgdGhpcy5saXN0LnNob3coKTtcbiAgdGhpcy5saXN0LnNlbGVjdGluZ0xpc3RJdGVtID0gZmFsc2U7XG59O1xuXG4vKipcbiAqIFVwZGF0ZSBkYXRhIHByZXZpb3VzbHkgcGFzc2VkXG4gKlxuICogQHBhcmFtIHtBcnJheX0gcmV2aXNlZERhdGFcbiAqL1xuU3VnZ2VzdGlvbnMucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uKHJldmlzZWREYXRhKSB7XG4gIHRoaXMuZGF0YSA9IHJldmlzZWREYXRhO1xuICB0aGlzLmhhbmRsZUtleVVwKCk7XG59O1xuXG4vKipcbiAqIENsZWFycyBkYXRhXG4gKi9cblN1Z2dlc3Rpb25zLnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLmRhdGEgPSBbXTtcbiAgdGhpcy5saXN0LmNsZWFyKCk7XG59O1xuXG4vKipcbiAqIE5vcm1hbGl6ZSB0aGUgcmVzdWx0cyBsaXN0IGFuZCBpbnB1dCB2YWx1ZSBmb3IgbWF0Y2hpbmdcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdmFsdWVcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqL1xuU3VnZ2VzdGlvbnMucHJvdG90eXBlLm5vcm1hbGl6ZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHZhbHVlID0gdmFsdWUudG9Mb3dlckNhc2UoKTtcbiAgcmV0dXJuIHZhbHVlO1xufTtcblxuLyoqXG4gKiBFdmFsdWF0ZXMgd2hldGhlciBhbiBhcnJheSBpdGVtIHF1YWxpZmllcyBhcyBhIG1hdGNoIHdpdGggdGhlIGN1cnJlbnQgcXVlcnlcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gY2FuZGlkYXRlIGEgcG9zc2libGUgaXRlbSBmcm9tIHRoZSBhcnJheSBwYXNzZWRcbiAqIEBwYXJhbSB7U3RyaW5nfSBxdWVyeSB0aGUgY3VycmVudCBxdWVyeVxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqL1xuU3VnZ2VzdGlvbnMucHJvdG90eXBlLm1hdGNoID0gZnVuY3Rpb24oY2FuZGlkYXRlLCBxdWVyeSkge1xuICByZXR1cm4gY2FuZGlkYXRlLmluZGV4T2YocXVlcnkpID4gLTE7XG59O1xuXG5TdWdnZXN0aW9ucy5wcm90b3R5cGUudmFsdWUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICB0aGlzLnNlbGVjdGVkID0gdmFsdWU7XG4gIHRoaXMuZWwudmFsdWUgPSB0aGlzLmdldEl0ZW1WYWx1ZSh2YWx1ZSk7XG5cbiAgaWYgKGRvY3VtZW50LmNyZWF0ZUV2ZW50KSB7XG4gICAgdmFyIGUgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnSFRNTEV2ZW50cycpO1xuICAgIGUuaW5pdEV2ZW50KCdjaGFuZ2UnLCB0cnVlLCBmYWxzZSk7XG4gICAgdGhpcy5lbC5kaXNwYXRjaEV2ZW50KGUpO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuZWwuZmlyZUV2ZW50KCdvbmNoYW5nZScpO1xuICB9XG59O1xuXG5TdWdnZXN0aW9ucy5wcm90b3R5cGUuZ2V0Q2FuZGlkYXRlcyA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHZhciBvcHRpb25zID0ge1xuICAgIHByZTogJzxzdHJvbmc+JyxcbiAgICBwb3N0OiAnPC9zdHJvbmc+JyxcbiAgICBleHRyYWN0OiBmdW5jdGlvbihkKSB7IHJldHVybiB0aGlzLmdldEl0ZW1WYWx1ZShkKTsgfS5iaW5kKHRoaXMpXG4gIH07XG4gIHZhciByZXN1bHRzO1xuICBpZih0aGlzLm9wdGlvbnMuZmlsdGVyKXtcbiAgICByZXN1bHRzID0gZnV6enkuZmlsdGVyKHRoaXMucXVlcnksIHRoaXMuZGF0YSwgb3B0aW9ucyk7XG5cbiAgICByZXN1bHRzID0gcmVzdWx0cy5tYXAoZnVuY3Rpb24oaXRlbSl7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBvcmlnaW5hbDogaXRlbS5vcmlnaW5hbCxcbiAgICAgICAgc3RyaW5nOiB0aGlzLnJlbmRlcihpdGVtLm9yaWdpbmFsLCBpdGVtLnN0cmluZylcbiAgICAgIH07XG4gICAgfS5iaW5kKHRoaXMpKVxuICB9ZWxzZXtcbiAgICByZXN1bHRzID0gdGhpcy5kYXRhLm1hcChmdW5jdGlvbihkKSB7XG4gICAgICB2YXIgcmVuZGVyZWRTdHJpbmcgPSB0aGlzLnJlbmRlcihkKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG9yaWdpbmFsOiBkLFxuICAgICAgICBzdHJpbmc6IHJlbmRlcmVkU3RyaW5nXG4gICAgICB9O1xuICAgIH0uYmluZCh0aGlzKSk7XG4gIH1cbiAgY2FsbGJhY2socmVzdWx0cyk7XG59O1xuXG4vKipcbiAqIEZvciBhIGdpdmVuIGl0ZW0gaW4gdGhlIGRhdGEgYXJyYXksIHJldHVybiB3aGF0IHNob3VsZCBiZSB1c2VkIGFzIHRoZSBjYW5kaWRhdGUgc3RyaW5nXG4gKlxuICogQHBhcmFtIHtPYmplY3R8U3RyaW5nfSBpdGVtIGFuIGl0ZW0gZnJvbSB0aGUgZGF0YSBhcnJheVxuICogQHJldHVybiB7U3RyaW5nfSBpdGVtXG4gKi9cblN1Z2dlc3Rpb25zLnByb3RvdHlwZS5nZXRJdGVtVmFsdWUgPSBmdW5jdGlvbihpdGVtKSB7XG4gIHJldHVybiBpdGVtO1xufTtcblxuLyoqXG4gKiBGb3IgYSBnaXZlbiBpdGVtIGluIHRoZSBkYXRhIGFycmF5LCByZXR1cm4gYSBzdHJpbmcgb2YgaHRtbCB0aGF0IHNob3VsZCBiZSByZW5kZXJlZCBpbiB0aGUgZHJvcGRvd25cbiAqIEBwYXJhbSB7T2JqZWN0fFN0cmluZ30gaXRlbSBhbiBpdGVtIGZyb20gdGhlIGRhdGEgYXJyYXlcbiAqIEBwYXJhbSB7U3RyaW5nfSBzb3VyY2VGb3JtYXR0aW5nIGEgc3RyaW5nIHRoYXQgaGFzIHByZS1mb3JtYXR0ZWQgaHRtbCB0aGF0IHNob3VsZCBiZSBwYXNzZWQgZGlyZWN0bHkgdGhyb3VnaCB0aGUgcmVuZGVyIGZ1bmN0aW9uIFxuICogQHJldHVybiB7U3RyaW5nfSBodG1sXG4gKi9cblN1Z2dlc3Rpb25zLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbihpdGVtLCBzb3VyY2VGb3JtYXR0aW5nKSB7XG4gIGlmIChzb3VyY2VGb3JtYXR0aW5nKXtcbiAgICAvLyB1c2UgZXhpc3RpbmcgZm9ybWF0dGluZyBvbiB0aGUgc291cmNlIHN0cmluZ1xuICAgIHJldHVybiBzb3VyY2VGb3JtYXR0aW5nO1xuICB9XG4gIHZhciBib2xkU3RyaW5nID0gKGl0ZW0ub3JpZ2luYWwpID8gdGhpcy5nZXRJdGVtVmFsdWUoaXRlbS5vcmlnaW5hbCkgOiB0aGlzLmdldEl0ZW1WYWx1ZShpdGVtKTtcbiAgdmFyIGluZGV4U3RyaW5nID0gdGhpcy5ub3JtYWxpemUoYm9sZFN0cmluZyk7XG4gIHZhciBpbmRleE9mUXVlcnkgPSBpbmRleFN0cmluZy5sYXN0SW5kZXhPZih0aGlzLnF1ZXJ5KTtcbiAgd2hpbGUgKGluZGV4T2ZRdWVyeSA+IC0xKSB7XG4gICAgdmFyIGVuZEluZGV4T2ZRdWVyeSA9IGluZGV4T2ZRdWVyeSArIHRoaXMucXVlcnkubGVuZ3RoO1xuICAgIGJvbGRTdHJpbmcgPSBib2xkU3RyaW5nLnNsaWNlKDAsIGluZGV4T2ZRdWVyeSkgKyAnPHN0cm9uZz4nICsgYm9sZFN0cmluZy5zbGljZShpbmRleE9mUXVlcnksIGVuZEluZGV4T2ZRdWVyeSkgKyAnPC9zdHJvbmc+JyArIGJvbGRTdHJpbmcuc2xpY2UoZW5kSW5kZXhPZlF1ZXJ5KTtcbiAgICBpbmRleE9mUXVlcnkgPSBpbmRleFN0cmluZy5zbGljZSgwLCBpbmRleE9mUXVlcnkpLmxhc3RJbmRleE9mKHRoaXMucXVlcnkpO1xuICB9XG4gIHJldHVybiBib2xkU3RyaW5nXG59XG5cbi8qKlxuICogUmVuZGVyIGFuIGN1c3RvbSBlcnJvciBtZXNzYWdlIGluIHRoZSBzdWdnZXN0aW9ucyBsaXN0XG4gKiBAcGFyYW0ge1N0cmluZ30gbXNnIEFuIGh0bWwgc3RyaW5nIHRvIHJlbmRlciBhcyBhbiBlcnJvciBtZXNzYWdlXG4gKi9cblN1Z2dlc3Rpb25zLnByb3RvdHlwZS5yZW5kZXJFcnJvciA9IGZ1bmN0aW9uKG1zZyl7XG4gIHRoaXMubGlzdC5kcmF3RXJyb3IobXNnKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTdWdnZXN0aW9ucztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFPQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBbkJBO0FBcUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUhBO0FBS0E7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFFQTs7Ozs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFFQTs7Ozs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/suggestions/src/suggestions.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2dsb2JhbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/Y2QwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/global.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function () {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function () {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL21vZHVsZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9tb2R1bGUuanM/Y2VkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuXHRpZiAoIW1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7QUFDQTtBQUNBO0FBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/module.js\n");

/***/ }),

/***/ "./node_modules/xtend/immutable.js":
/*!*****************************************!*\
  !*** ./node_modules/xtend/immutable.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = extend;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n  var target = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMveHRlbmQvaW1tdXRhYmxlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3h0ZW5kL2ltbXV0YWJsZS5qcz81M2E4Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZXh0ZW5kXG5cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbmZ1bmN0aW9uIGV4dGVuZCgpIHtcbiAgICB2YXIgdGFyZ2V0ID0ge31cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV1cblxuICAgICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgICAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/xtend/immutable.js\n");

/***/ }),

/***/ "./src/modules/background.js":
/*!***********************************!*\
  !*** ./src/modules/background.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* eslint-disable no-undef */\n\n/* eslint-disable no-use-before-define */\n/* harmony default export */ __webpack_exports__[\"default\"] = (background);\n\nfunction getImage(link) {\n  var backIMG = document.getElementById('wrapper__back');\n  backIMG.style.backgroundImage = \"url(\".concat(link, \")\");\n}\n\nfunction background(query) {\n  var IMG_API_TOKEN = '1d9115cf4375470ad39eb933a07aa8ce2464e9e6ee262111a61dd6adc17bbf98';\n  fetch(\"https://api.unsplash.com/photos/random?query=\".concat(query, \"&client_id=\").concat(IMG_API_TOKEN)).then(function (result) {\n    return result.json();\n  }).then(function (data) {\n    getImage(data.urls.regular);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9iYWNrZ3JvdW5kLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMvYmFja2dyb3VuZC5qcz85MDcyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLXVuZGVmICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11c2UtYmVmb3JlLWRlZmluZSAqL1xuZXhwb3J0IGRlZmF1bHQgYmFja2dyb3VuZDtcblxuZnVuY3Rpb24gZ2V0SW1hZ2UobGluaykge1xuICBjb25zdCBiYWNrSU1HID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dyYXBwZXJfX2JhY2snKTtcbiAgYmFja0lNRy5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSBgdXJsKCR7bGlua30pYDtcbn1cblxuZnVuY3Rpb24gYmFja2dyb3VuZChxdWVyeSkge1xuICBjb25zdCBJTUdfQVBJX1RPS0VOID0gJzFkOTExNWNmNDM3NTQ3MGFkMzllYjkzM2EwN2FhOGNlMjQ2NGU5ZTZlZTI2MjExMWE2MWRkNmFkYzE3YmJmOTgnO1xuXG4gIGZldGNoKGBodHRwczovL2FwaS51bnNwbGFzaC5jb20vcGhvdG9zL3JhbmRvbT9xdWVyeT0ke3F1ZXJ5fSZjbGllbnRfaWQ9JHtJTUdfQVBJX1RPS0VOfWApLnRoZW4oKHJlc3VsdCkgPT4gcmVzdWx0Lmpzb24oKSkudGhlbigoZGF0YSkgPT4ge1xuICAgIGdldEltYWdlKGRhdGEudXJscy5yZWd1bGFyKTtcbiAgfSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/modules/background.js\n");

/***/ }),

/***/ "./src/modules/changeLang.js":
/*!***********************************!*\
  !*** ./src/modules/changeLang.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  en: {\n    days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    desc: {\n      200: 'thunderstorm with light rain',\n      201: 'thunderstorm with rain',\n      202: 'thunderstorm with heavy rain',\n      210: 'light thunderstorm',\n      211: 'thunderstorm',\n      212: 'heavy thunderstorm',\n      221: 'ragged thunderstorm',\n      230: 'thunderstorm with light drizzle',\n      231: 'thunderstorm with drizzle',\n      232: 'thunderstorm with heavy drizzle',\n      300: 'light intensity drizzle',\n      301: 'drizzle',\n      302: 'heavy intensity drizzle',\n      310: 'light intensity drizzle rain',\n      311: 'drizzle rain',\n      312: 'heavy intensity drizzle rain',\n      313: 'shower rain and drizzle',\n      314: 'heavy shower rain and drizzle',\n      321: 'shower drizzle',\n      500: 'light rain',\n      501: 'moderate rain',\n      502: 'heavy intensity rain',\n      503: 'very heavy rain',\n      504: 'extreme rain',\n      511: 'freezing rain',\n      520: 'light intensity shower rain',\n      521: 'shower rain',\n      522: 'heavy intensity shower rain',\n      531: 'ragged shower rain',\n      600: 'light snow',\n      601: 'Snow',\n      602: 'Heavy snow',\n      611: 'Sleet',\n      612: 'Light shower sleet',\n      613: 'Shower sleet',\n      615: 'Light rain and snow',\n      616: 'Rain and snow',\n      620: 'Light shower snow',\n      621: 'Shower snow',\n      622: 'Heavy shower snow',\n      701: 'mist',\n      711: 'Smoke',\n      721: 'Haze',\n      731: 'sand/ dust whirls',\n      741: 'fog',\n      751: 'sand',\n      761: 'dust',\n      762: 'volcanic ash',\n      771: 'squalls',\n      781: 'tornado',\n      800: 'clear sky',\n      801: 'few clouds',\n      802: 'scattered clouds',\n      803: 'broken clouds',\n      804: 'overcast clouds'\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9jaGFuZ2VMYW5nLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMvY2hhbmdlTGFuZy5qcz9iNjg1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgZW46IHtcbiAgICBkYXlzOiBbJ1N1bmRheScsICdNb25kYXknLCAnVHVlc2RheScsICdXZWRuZXNkYXknLCAnVGh1cnNkYXknLCAnRnJpZGF5JywgJ1NhdHVyZGF5J10sXG4gICAgbW9udGhzOiBbJ0phbnVhcnknLCAnRmVicnVhcnknLCAnTWFyY2gnLCAnQXByaWwnLCAnTWF5JywgJ0p1bmUnLCAnSnVseScsICdBdWd1c3QnLCAnU2VwdGVtYmVyJywgJ09jdG9iZXInLCAnTm92ZW1iZXInLCAnRGVjZW1iZXInXSxcbiAgICBkZXNjOiB7XG4gICAgICAyMDA6ICd0aHVuZGVyc3Rvcm0gd2l0aCBsaWdodCByYWluJyxcbiAgICAgIDIwMTogJ3RodW5kZXJzdG9ybSB3aXRoIHJhaW4nLFxuICAgICAgMjAyOiAndGh1bmRlcnN0b3JtIHdpdGggaGVhdnkgcmFpbicsXG4gICAgICAyMTA6ICdsaWdodCB0aHVuZGVyc3Rvcm0nLFxuICAgICAgMjExOiAndGh1bmRlcnN0b3JtJyxcbiAgICAgIDIxMjogJ2hlYXZ5IHRodW5kZXJzdG9ybScsXG4gICAgICAyMjE6ICdyYWdnZWQgdGh1bmRlcnN0b3JtJyxcbiAgICAgIDIzMDogJ3RodW5kZXJzdG9ybSB3aXRoIGxpZ2h0IGRyaXp6bGUnLFxuICAgICAgMjMxOiAndGh1bmRlcnN0b3JtIHdpdGggZHJpenpsZScsXG4gICAgICAyMzI6ICd0aHVuZGVyc3Rvcm0gd2l0aCBoZWF2eSBkcml6emxlJyxcbiAgICAgIDMwMDogJ2xpZ2h0IGludGVuc2l0eSBkcml6emxlJyxcbiAgICAgIDMwMTogJ2RyaXp6bGUnLFxuICAgICAgMzAyOiAnaGVhdnkgaW50ZW5zaXR5IGRyaXp6bGUnLFxuICAgICAgMzEwOiAnbGlnaHQgaW50ZW5zaXR5IGRyaXp6bGUgcmFpbicsXG4gICAgICAzMTE6ICdkcml6emxlIHJhaW4nLFxuICAgICAgMzEyOiAnaGVhdnkgaW50ZW5zaXR5IGRyaXp6bGUgcmFpbicsXG4gICAgICAzMTM6ICdzaG93ZXIgcmFpbiBhbmQgZHJpenpsZScsXG4gICAgICAzMTQ6ICdoZWF2eSBzaG93ZXIgcmFpbiBhbmQgZHJpenpsZScsXG4gICAgICAzMjE6ICdzaG93ZXIgZHJpenpsZScsXG4gICAgICA1MDA6ICdsaWdodCByYWluJyxcbiAgICAgIDUwMTogJ21vZGVyYXRlIHJhaW4nLFxuICAgICAgNTAyOiAnaGVhdnkgaW50ZW5zaXR5IHJhaW4nLFxuICAgICAgNTAzOiAndmVyeSBoZWF2eSByYWluJyxcbiAgICAgIDUwNDogJ2V4dHJlbWUgcmFpbicsXG4gICAgICA1MTE6ICdmcmVlemluZyByYWluJyxcbiAgICAgIDUyMDogJ2xpZ2h0IGludGVuc2l0eSBzaG93ZXIgcmFpbicsXG4gICAgICA1MjE6ICdzaG93ZXIgcmFpbicsXG4gICAgICA1MjI6ICdoZWF2eSBpbnRlbnNpdHkgc2hvd2VyIHJhaW4nLFxuICAgICAgNTMxOiAncmFnZ2VkIHNob3dlciByYWluJyxcbiAgICAgIDYwMDogJ2xpZ2h0IHNub3cnLFxuICAgICAgNjAxOiAnU25vdycsXG4gICAgICA2MDI6ICdIZWF2eSBzbm93JyxcbiAgICAgIDYxMTogJ1NsZWV0JyxcbiAgICAgIDYxMjogJ0xpZ2h0IHNob3dlciBzbGVldCcsXG4gICAgICA2MTM6ICdTaG93ZXIgc2xlZXQnLFxuICAgICAgNjE1OiAnTGlnaHQgcmFpbiBhbmQgc25vdycsXG4gICAgICA2MTY6ICdSYWluIGFuZCBzbm93JyxcbiAgICAgIDYyMDogJ0xpZ2h0IHNob3dlciBzbm93JyxcbiAgICAgIDYyMTogJ1Nob3dlciBzbm93JyxcbiAgICAgIDYyMjogJ0hlYXZ5IHNob3dlciBzbm93JyxcbiAgICAgIDcwMTogJ21pc3QnLFxuICAgICAgNzExOiAnU21va2UnLFxuICAgICAgNzIxOiAnSGF6ZScsXG4gICAgICA3MzE6ICdzYW5kLyBkdXN0IHdoaXJscycsXG4gICAgICA3NDE6ICdmb2cnLFxuICAgICAgNzUxOiAnc2FuZCcsXG4gICAgICA3NjE6ICdkdXN0JyxcbiAgICAgIDc2MjogJ3ZvbGNhbmljIGFzaCcsXG4gICAgICA3NzE6ICdzcXVhbGxzJyxcbiAgICAgIDc4MTogJ3Rvcm5hZG8nLFxuICAgICAgODAwOiAnY2xlYXIgc2t5JyxcbiAgICAgIDgwMTogJ2ZldyBjbG91ZHMnLFxuICAgICAgODAyOiAnc2NhdHRlcmVkIGNsb3VkcycsXG4gICAgICA4MDM6ICdicm9rZW4gY2xvdWRzJyxcbiAgICAgIDgwNDogJ292ZXJjYXN0IGNsb3VkcycsXG4gICAgfSxcbiAgfSxcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBdkRBO0FBSEE7QUFEQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/modules/changeLang.js\n");

/***/ }),

/***/ "./src/modules/parsecoord.js":
/*!***********************************!*\
  !*** ./src/modules/parsecoord.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* eslint-disable no-use-before-define */\n/* harmony default export */ __webpack_exports__[\"default\"] = (parseStringCoord);\n\nfunction parseStringCoord(strLoc) {\n  var location = strLoc.split(',');\n  var lat = location[0];\n  var lon = location[1];\n  return {\n    latitude: lat,\n    longitude: lon\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9wYXJzZWNvb3JkLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMvcGFyc2Vjb29yZC5qcz9hMTRhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLXVzZS1iZWZvcmUtZGVmaW5lICovXG5leHBvcnQgZGVmYXVsdCBwYXJzZVN0cmluZ0Nvb3JkO1xuXG5mdW5jdGlvbiBwYXJzZVN0cmluZ0Nvb3JkKHN0ckxvYykge1xuICBjb25zdCBsb2NhdGlvbiA9IHN0ckxvYy5zcGxpdCgnLCcpO1xuICBjb25zdCBsYXQgPSBsb2NhdGlvblswXTtcbiAgY29uc3QgbG9uID0gbG9jYXRpb25bMV07XG4gIHJldHVybiB7XG4gICAgbGF0aXR1ZGU6IGxhdCxcbiAgICBsb25naXR1ZGU6IGxvbixcbiAgfTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/modules/parsecoord.js\n");

/***/ }),

/***/ "./src/modules/renderWeather.js":
/*!**************************************!*\
  !*** ./src/modules/renderWeather.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* eslint-disable no-use-before-define */\n/* harmony default export */ __webpack_exports__[\"default\"] = (renderWeatherValues);\n\nfunction renderWeatherValues(obj) {\n  console.log(obj);\n  var currentPlace = document.querySelector('.what__today .what__today--place');\n  var currentTemp = document.querySelector('.what__today--feels .what__today--feels-temp__now');\n  var currentDesc = document.querySelector('.what__today--feels .what__today--feels-describe');\n  var currentIcon = document.querySelector('.what__today .today_img');\n  var day1Temp = document.querySelector('.what__there--one .what__there--one-temp');\n  var day1Icon = document.querySelector('.what__there--one .what__there--one-img');\n  var day1Week = document.querySelector('.what__there--one .what__there--one-day');\n  var day2Temp = document.querySelector('.what__there--two .what__there--two-temp');\n  var day2Icon = document.querySelector('.what__there--two .what__there--two-img');\n  var day2Week = document.querySelector('.what__there--two .what__there--two-day');\n  var day3Temp = document.querySelector('.what__there--three .what__there--three-temp');\n  var day3Icon = document.querySelector('.what__there--three .what__there--three-img');\n  var day3Week = document.querySelector('.what__there--three .what__there--three-day');\n  var objcur = obj.getWeather;\n  currentPlace.textContent = objcur.city;\n  currentTemp.textContent = objcur.curTemp;\n  currentDesc.textContent = objcur.curTempDesc;\n  currentIcon.style.backgroundImage = \"url(\".concat(objcur.curTempIcon, \")\");\n  day1Temp.textContent = objcur.firstDay.temp;\n  day1Icon.style.backgroundImage = \"url(\".concat(objcur.firstDay.icon, \")\");\n  day1Week.textContent = objcur.firstDay.day;\n  day2Temp.textContent = objcur.secondDay.temp;\n  day2Icon.style.backgroundImage = \"url(\".concat(objcur.secondDay.icon, \")\");\n  day2Week.textContent = objcur.secondDay.day;\n  day3Temp.textContent = objcur.thirdDay.temp;\n  day3Icon.style.backgroundImage = \"url(\".concat(objcur.thirdDay.icon, \")\");\n  day3Week.textContent = objcur.thirdDay.day;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9yZW5kZXJXZWF0aGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMvcmVuZGVyV2VhdGhlci5qcz9jZTJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLXVzZS1iZWZvcmUtZGVmaW5lICovXG5leHBvcnQgZGVmYXVsdCByZW5kZXJXZWF0aGVyVmFsdWVzO1xuXG5mdW5jdGlvbiByZW5kZXJXZWF0aGVyVmFsdWVzKG9iaikge1xuICBjb25zb2xlLmxvZyhvYmopO1xuICBjb25zdCBjdXJyZW50UGxhY2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2hhdF9fdG9kYXkgLndoYXRfX3RvZGF5LS1wbGFjZScpO1xuICBjb25zdCBjdXJyZW50VGVtcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53aGF0X190b2RheS0tZmVlbHMgLndoYXRfX3RvZGF5LS1mZWVscy10ZW1wX19ub3cnKTtcbiAgY29uc3QgY3VycmVudERlc2MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2hhdF9fdG9kYXktLWZlZWxzIC53aGF0X190b2RheS0tZmVlbHMtZGVzY3JpYmUnKTtcbiAgY29uc3QgY3VycmVudEljb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2hhdF9fdG9kYXkgLnRvZGF5X2ltZycpO1xuXG4gIGNvbnN0IGRheTFUZW1wID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLndoYXRfX3RoZXJlLS1vbmUgLndoYXRfX3RoZXJlLS1vbmUtdGVtcCcpO1xuICBjb25zdCBkYXkxSWNvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53aGF0X190aGVyZS0tb25lIC53aGF0X190aGVyZS0tb25lLWltZycpO1xuICBjb25zdCBkYXkxV2VlayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53aGF0X190aGVyZS0tb25lIC53aGF0X190aGVyZS0tb25lLWRheScpO1xuXG4gIGNvbnN0IGRheTJUZW1wID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLndoYXRfX3RoZXJlLS10d28gLndoYXRfX3RoZXJlLS10d28tdGVtcCcpO1xuICBjb25zdCBkYXkySWNvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53aGF0X190aGVyZS0tdHdvIC53aGF0X190aGVyZS0tdHdvLWltZycpO1xuICBjb25zdCBkYXkyV2VlayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53aGF0X190aGVyZS0tdHdvIC53aGF0X190aGVyZS0tdHdvLWRheScpO1xuXG4gIGNvbnN0IGRheTNUZW1wID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLndoYXRfX3RoZXJlLS10aHJlZSAud2hhdF9fdGhlcmUtLXRocmVlLXRlbXAnKTtcbiAgY29uc3QgZGF5M0ljb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2hhdF9fdGhlcmUtLXRocmVlIC53aGF0X190aGVyZS0tdGhyZWUtaW1nJyk7XG4gIGNvbnN0IGRheTNXZWVrID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLndoYXRfX3RoZXJlLS10aHJlZSAud2hhdF9fdGhlcmUtLXRocmVlLWRheScpO1xuXG4gIGNvbnN0IG9iamN1ciA9IG9iai5nZXRXZWF0aGVyO1xuXG4gIGN1cnJlbnRQbGFjZS50ZXh0Q29udGVudCA9IG9iamN1ci5jaXR5O1xuICBjdXJyZW50VGVtcC50ZXh0Q29udGVudCA9IG9iamN1ci5jdXJUZW1wO1xuICBjdXJyZW50RGVzYy50ZXh0Q29udGVudCA9IG9iamN1ci5jdXJUZW1wRGVzYztcbiAgY3VycmVudEljb24uc3R5bGUuYmFja2dyb3VuZEltYWdlID0gYHVybCgke29iamN1ci5jdXJUZW1wSWNvbn0pYDtcblxuICBkYXkxVGVtcC50ZXh0Q29udGVudCA9IG9iamN1ci5maXJzdERheS50ZW1wO1xuICBkYXkxSWNvbi5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSBgdXJsKCR7b2JqY3VyLmZpcnN0RGF5Lmljb259KWA7XG4gIGRheTFXZWVrLnRleHRDb250ZW50ID0gb2JqY3VyLmZpcnN0RGF5LmRheTtcblxuICBkYXkyVGVtcC50ZXh0Q29udGVudCA9IG9iamN1ci5zZWNvbmREYXkudGVtcDtcbiAgZGF5Mkljb24uc3R5bGUuYmFja2dyb3VuZEltYWdlID0gYHVybCgke29iamN1ci5zZWNvbmREYXkuaWNvbn0pYDtcbiAgZGF5MldlZWsudGV4dENvbnRlbnQgPSBvYmpjdXIuc2Vjb25kRGF5LmRheTtcblxuICBkYXkzVGVtcC50ZXh0Q29udGVudCA9IG9iamN1ci50aGlyZERheS50ZW1wO1xuICBkYXkzSWNvbi5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSBgdXJsKCR7b2JqY3VyLnRoaXJkRGF5Lmljb259KWA7XG4gIGRheTNXZWVrLnRleHRDb250ZW50ID0gb2JqY3VyLnRoaXJkRGF5LmRheTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/modules/renderWeather.js\n");

/***/ }),

/***/ "./src/modules/storeMe.js":
/*!********************************!*\
  !*** ./src/modules/storeMe.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _changeLang__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./changeLang */ \"./src/modules/changeLang.js\");\n/* eslint-disable guard-for-in */\n\n/* eslint-disable no-restricted-syntax */\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  city: null,\n  location: null,\n  dayWeek: null,\n  date: null,\n  month: null,\n  time: null,\n  timezone: null,\n  curTemp: null,\n  curTempIcon: null,\n  curTempDesc: null,\n  curTempFeelsLike: null,\n  curTempWind: null,\n  curTempHumidity: null,\n  firstDay: {\n    temp: null,\n    icon: null,\n    day: null\n  },\n  secondDay: {\n    temp: null,\n    icon: null,\n    day: null\n  },\n  thirdDay: {\n    temp: null,\n    icon: null,\n    day: null\n  },\n  getWeatherFor3Days: function getWeatherFor3Days(objList) {\n    var dateNow = new Date();\n    var curDate = dateNow.getUTCDate();\n    var veryCuteObjec = {};\n    var lastDate = null;\n    var count = 1;\n    objList.forEach(function (element) {\n      var dateList = new Date(element.dt * 1000);\n      var curDateList = dateList.getUTCDate();\n\n      if (curDate !== curDateList && curDateList < curDate + 4) {\n        if (veryCuteObjec[count] === undefined) {\n          veryCuteObjec[count] = new Array(element);\n        } else if (lastDate !== curDateList) {\n          // eslint-disable-next-line no-plusplus\n          count++;\n          veryCuteObjec[count] = new Array(element);\n        } else {\n          veryCuteObjec[count].push(element);\n        }\n\n        lastDate = curDateList;\n      }\n    });\n\n    var _loop = function _loop(key) {\n      var result = veryCuteObjec[key];\n      var arr = [];\n      result.forEach(function (e) {\n        var dateList = new Date(e.dt * 1000);\n        var curHourList = dateList.getUTCHours();\n        var getDay = dateList.getUTCDay();\n        var twelveClock = 12;\n\n        if (curHourList === twelveClock) {\n          veryCuteObjec[key].iconAver = e.weather[0].icon;\n          veryCuteObjec[key].dayOfWeek = getDay;\n        }\n\n        arr.push(e.main.temp);\n      });\n      veryCuteObjec[key].averageTemp = Math.round(arr.reduce(function (a, b) {\n        return a + b;\n      }) / arr.length);\n    };\n\n    for (var key in veryCuteObjec) {\n      _loop(key);\n    }\n\n    return veryCuteObjec;\n  },\n\n  set setWeatherObj(obj) {\n    var currentWeatherTemp = obj.list[0];\n    var curWeather = currentWeatherTemp.weather[0];\n    var curMain = currentWeatherTemp.main;\n    var curWind = currentWeatherTemp.wind;\n    var tempFor3Days = this.getWeatherFor3Days(obj.list);\n    this.city = obj.city.name;\n    this.location = obj.city.coord;\n    this.dayWeek = obj;\n    this.date = obj;\n    this.month = obj;\n    this.time = obj;\n    this.timezone = obj.city.timezone;\n    this.curTemp = Math.round(curMain.temp);\n    this.curTempIcon = \"http://openweathermap.org/img/wn/\".concat(curWeather.icon, \".png\");\n    this.curTempDesc = _changeLang__WEBPACK_IMPORTED_MODULE_0__[\"default\"].en.desc[curWeather.id];\n    this.curTempFeelsLike = curMain.feels_like;\n    this.curTempWind = curWind.speed;\n    this.curTempHumidity = curMain.humidity;\n    this.firstDay.temp = tempFor3Days[1].averageTemp;\n    this.firstDay.icon = \"http://openweathermap.org/img/wn/\".concat(tempFor3Days[1].iconAver, \".png\");\n    this.firstDay.day = _changeLang__WEBPACK_IMPORTED_MODULE_0__[\"default\"].en.days[tempFor3Days[1].dayOfWeek];\n    this.secondDay.temp = tempFor3Days[2].averageTemp;\n    this.secondDay.icon = \"http://openweathermap.org/img/wn/\".concat(tempFor3Days[2].iconAver, \".png\");\n    this.secondDay.day = _changeLang__WEBPACK_IMPORTED_MODULE_0__[\"default\"].en.days[tempFor3Days[2].dayOfWeek];\n    this.thirdDay.temp = tempFor3Days[3].averageTemp;\n    this.thirdDay.icon = \"http://openweathermap.org/img/wn/\".concat(tempFor3Days[3].iconAver, \".png\");\n    this.thirdDay.day = _changeLang__WEBPACK_IMPORTED_MODULE_0__[\"default\"].en.days[tempFor3Days[3].dayOfWeek];\n  },\n\n  get getWeather() {\n    return this;\n  }\n\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9zdG9yZU1lLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMvc3RvcmVNZS5qcz9iNzI5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIGd1YXJkLWZvci1pbiAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tcmVzdHJpY3RlZC1zeW50YXggKi9cbmltcG9ydCBsYW5nIGZyb20gJy4vY2hhbmdlTGFuZyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY2l0eTogbnVsbCxcbiAgbG9jYXRpb246IG51bGwsXG4gIGRheVdlZWs6IG51bGwsXG4gIGRhdGU6IG51bGwsXG4gIG1vbnRoOiBudWxsLFxuICB0aW1lOiBudWxsLFxuICB0aW1lem9uZTogbnVsbCxcbiAgY3VyVGVtcDogbnVsbCxcbiAgY3VyVGVtcEljb246IG51bGwsXG4gIGN1clRlbXBEZXNjOiBudWxsLFxuICBjdXJUZW1wRmVlbHNMaWtlOiBudWxsLFxuICBjdXJUZW1wV2luZDogbnVsbCxcblxuICBjdXJUZW1wSHVtaWRpdHk6IG51bGwsXG4gIGZpcnN0RGF5OiB7XG4gICAgdGVtcDogbnVsbCxcbiAgICBpY29uOiBudWxsLFxuICAgIGRheTogbnVsbCxcbiAgfSxcbiAgc2Vjb25kRGF5OiB7XG4gICAgdGVtcDogbnVsbCxcbiAgICBpY29uOiBudWxsLFxuICAgIGRheTogbnVsbCxcbiAgfSxcbiAgdGhpcmREYXk6IHtcbiAgICB0ZW1wOiBudWxsLFxuICAgIGljb246IG51bGwsXG4gICAgZGF5OiBudWxsLFxuICB9LFxuXG4gIGdldFdlYXRoZXJGb3IzRGF5cyhvYmpMaXN0KSB7XG4gICAgY29uc3QgZGF0ZU5vdyA9IG5ldyBEYXRlKCk7XG4gICAgY29uc3QgY3VyRGF0ZSA9IGRhdGVOb3cuZ2V0VVRDRGF0ZSgpO1xuICAgIGNvbnN0IHZlcnlDdXRlT2JqZWMgPSB7fTtcblxuICAgIGxldCBsYXN0RGF0ZSA9IG51bGw7XG4gICAgbGV0IGNvdW50ID0gMTtcbiAgICBvYmpMaXN0LmZvckVhY2goKGVsZW1lbnQpID0+IHtcbiAgICAgIGNvbnN0IGRhdGVMaXN0ID0gbmV3IERhdGUoZWxlbWVudC5kdCAqIDEwMDApO1xuICAgICAgY29uc3QgY3VyRGF0ZUxpc3QgPSBkYXRlTGlzdC5nZXRVVENEYXRlKCk7XG5cbiAgICAgIGlmIChjdXJEYXRlICE9PSBjdXJEYXRlTGlzdCAmJiBjdXJEYXRlTGlzdCA8IGN1ckRhdGUgKyA0KSB7XG4gICAgICAgIGlmICh2ZXJ5Q3V0ZU9iamVjW2NvdW50XSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgdmVyeUN1dGVPYmplY1tjb3VudF0gPSBuZXcgQXJyYXkoZWxlbWVudCk7XG4gICAgICAgIH0gZWxzZSBpZiAobGFzdERhdGUgIT09IGN1ckRhdGVMaXN0KSB7XG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBsdXNwbHVzXG4gICAgICAgICAgY291bnQrKztcbiAgICAgICAgICB2ZXJ5Q3V0ZU9iamVjW2NvdW50XSA9IG5ldyBBcnJheShlbGVtZW50KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2ZXJ5Q3V0ZU9iamVjW2NvdW50XS5wdXNoKGVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgICAgIGxhc3REYXRlID0gY3VyRGF0ZUxpc3Q7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBmb3IgKGNvbnN0IGtleSBpbiB2ZXJ5Q3V0ZU9iamVjKSB7XG4gICAgICBjb25zdCByZXN1bHQgPSB2ZXJ5Q3V0ZU9iamVjW2tleV07XG4gICAgICBjb25zdCBhcnIgPSBbXTtcblxuICAgICAgcmVzdWx0LmZvckVhY2goKGUpID0+IHtcbiAgICAgICAgY29uc3QgZGF0ZUxpc3QgPSBuZXcgRGF0ZShlLmR0ICogMTAwMCk7XG4gICAgICAgIGNvbnN0IGN1ckhvdXJMaXN0ID0gZGF0ZUxpc3QuZ2V0VVRDSG91cnMoKTtcbiAgICAgICAgY29uc3QgZ2V0RGF5ID0gZGF0ZUxpc3QuZ2V0VVRDRGF5KCk7XG4gICAgICAgIGNvbnN0IHR3ZWx2ZUNsb2NrID0gMTI7XG4gICAgICAgIGlmIChjdXJIb3VyTGlzdCA9PT0gdHdlbHZlQ2xvY2spIHtcbiAgICAgICAgICB2ZXJ5Q3V0ZU9iamVjW2tleV0uaWNvbkF2ZXIgPSBlLndlYXRoZXJbMF0uaWNvbjtcbiAgICAgICAgICB2ZXJ5Q3V0ZU9iamVjW2tleV0uZGF5T2ZXZWVrID0gZ2V0RGF5O1xuICAgICAgICB9XG4gICAgICAgIGFyci5wdXNoKGUubWFpbi50ZW1wKTtcbiAgICAgIH0pO1xuXG4gICAgICB2ZXJ5Q3V0ZU9iamVjW2tleV0uYXZlcmFnZVRlbXAgPSBNYXRoLnJvdW5kKGFyci5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiKSAvIGFyci5sZW5ndGgpO1xuICAgIH1cbiAgICByZXR1cm4gdmVyeUN1dGVPYmplYztcbiAgfSxcblxuICBzZXQgc2V0V2VhdGhlck9iaihvYmopIHtcbiAgICBjb25zdCBjdXJyZW50V2VhdGhlclRlbXAgPSBvYmoubGlzdFswXTtcbiAgICBjb25zdCBjdXJXZWF0aGVyID0gY3VycmVudFdlYXRoZXJUZW1wLndlYXRoZXJbMF07XG4gICAgY29uc3QgY3VyTWFpbiA9IGN1cnJlbnRXZWF0aGVyVGVtcC5tYWluO1xuICAgIGNvbnN0IGN1cldpbmQgPSBjdXJyZW50V2VhdGhlclRlbXAud2luZDtcbiAgICBjb25zdCB0ZW1wRm9yM0RheXMgPSB0aGlzLmdldFdlYXRoZXJGb3IzRGF5cyhvYmoubGlzdCk7XG4gICAgdGhpcy5jaXR5ID0gb2JqLmNpdHkubmFtZTtcbiAgICB0aGlzLmxvY2F0aW9uID0gb2JqLmNpdHkuY29vcmQ7XG4gICAgdGhpcy5kYXlXZWVrID0gb2JqO1xuICAgIHRoaXMuZGF0ZSA9IG9iajtcbiAgICB0aGlzLm1vbnRoID0gb2JqO1xuICAgIHRoaXMudGltZSA9IG9iajtcbiAgICB0aGlzLnRpbWV6b25lID0gb2JqLmNpdHkudGltZXpvbmU7XG4gICAgdGhpcy5jdXJUZW1wID0gTWF0aC5yb3VuZChjdXJNYWluLnRlbXApO1xuICAgIHRoaXMuY3VyVGVtcEljb24gPSBgaHR0cDovL29wZW53ZWF0aGVybWFwLm9yZy9pbWcvd24vJHtjdXJXZWF0aGVyLmljb259LnBuZ2A7XG4gICAgdGhpcy5jdXJUZW1wRGVzYyA9IGxhbmcuZW4uZGVzY1tjdXJXZWF0aGVyLmlkXTtcbiAgICB0aGlzLmN1clRlbXBGZWVsc0xpa2UgPSBjdXJNYWluLmZlZWxzX2xpa2U7XG4gICAgdGhpcy5jdXJUZW1wV2luZCA9IGN1cldpbmQuc3BlZWQ7XG4gICAgdGhpcy5jdXJUZW1wSHVtaWRpdHkgPSBjdXJNYWluLmh1bWlkaXR5O1xuICAgIHRoaXMuZmlyc3REYXkudGVtcCA9IHRlbXBGb3IzRGF5c1sxXS5hdmVyYWdlVGVtcDtcbiAgICB0aGlzLmZpcnN0RGF5Lmljb24gPSBgaHR0cDovL29wZW53ZWF0aGVybWFwLm9yZy9pbWcvd24vJHt0ZW1wRm9yM0RheXNbMV0uaWNvbkF2ZXJ9LnBuZ2A7XG4gICAgdGhpcy5maXJzdERheS5kYXkgPSBsYW5nLmVuLmRheXNbdGVtcEZvcjNEYXlzWzFdLmRheU9mV2Vla107XG4gICAgdGhpcy5zZWNvbmREYXkudGVtcCA9IHRlbXBGb3IzRGF5c1syXS5hdmVyYWdlVGVtcDtcbiAgICB0aGlzLnNlY29uZERheS5pY29uID0gYGh0dHA6Ly9vcGVud2VhdGhlcm1hcC5vcmcvaW1nL3duLyR7dGVtcEZvcjNEYXlzWzJdLmljb25BdmVyfS5wbmdgO1xuICAgIHRoaXMuc2Vjb25kRGF5LmRheSA9IGxhbmcuZW4uZGF5c1t0ZW1wRm9yM0RheXNbMl0uZGF5T2ZXZWVrXTtcbiAgICB0aGlzLnRoaXJkRGF5LnRlbXAgPSB0ZW1wRm9yM0RheXNbM10uYXZlcmFnZVRlbXA7XG4gICAgdGhpcy50aGlyZERheS5pY29uID0gYGh0dHA6Ly9vcGVud2VhdGhlcm1hcC5vcmcvaW1nL3duLyR7dGVtcEZvcjNEYXlzWzNdLmljb25BdmVyfS5wbmdgO1xuICAgIHRoaXMudGhpcmREYXkuZGF5ID0gbGFuZy5lbi5kYXlzW3RlbXBGb3IzRGF5c1szXS5kYXlPZldlZWtdO1xuICB9LFxuXG4gIGdldCBnZXRXZWF0aGVyKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9LFxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBeEJBO0FBMEJBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQXpDQTtBQUNBO0FBd0JBO0FBQUE7QUFpQkE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBOUdBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/modules/storeMe.js\n");

/***/ }),

/***/ "./src/modules/userGetMap.js":
/*!***********************************!*\
  !*** ./src/modules/userGetMap.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _userWeather__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./userWeather */ \"./src/modules/userWeather.js\");\n/* harmony import */ var _storeMe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./storeMe */ \"./src/modules/storeMe.js\");\n/* harmony import */ var _renderWeather__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./renderWeather */ \"./src/modules/renderWeather.js\");\n/* harmony import */ var _background__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./background */ \"./src/modules/background.js\");\n/* eslint-disable no-use-before-define */\n\n/* eslint-disable no-undef */\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (drawMap);\n\nvar MapboxGeocoder = __webpack_require__(/*! @mapbox/mapbox-gl-geocoder */ \"./node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js\");\n\nfunction drawMap(location) {\n  mapboxgl.accessToken = 'pk.eyJ1IjoiYWxlbmthY29zbWljIiwiYSI6ImNrNDdkZW04ODBwZngzbGw5eXkzaXp1MDcifQ.GNoZ8KYFRLwpIyWPtO0Neg';\n  var map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/mapbox/streets-v11',\n    center: [location.lon, location.lat],\n    // starting position\n    zoom: 10\n  });\n  var geocoder = new MapboxGeocoder({\n    accessToken: mapboxgl.accessToken,\n    mapboxgl: mapboxgl\n  });\n  geocoder.on('result', function (e) {\n    function changeMap() {\n      var resultPromise;\n      return regeneratorRuntime.async(function changeMap$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return regeneratorRuntime.awrap(Object(_userWeather__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n                latitude: e.result.center[1],\n                longitude: e.result.center[0]\n              }));\n\n            case 2:\n              resultPromise = _context.sent;\n              _storeMe__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setWeatherObj = resultPromise;\n              Object(_renderWeather__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_storeMe__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n              Object(_background__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_storeMe__WEBPACK_IMPORTED_MODULE_1__[\"default\"].city);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n\n    changeMap();\n  });\n  document.getElementById('geocoder').appendChild(geocoder.onAdd(map));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy91c2VyR2V0TWFwLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMvdXNlckdldE1hcC5qcz84ZmViIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLXVzZS1iZWZvcmUtZGVmaW5lICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiAqL1xuaW1wb3J0IHdlYXRoZXIgZnJvbSAnLi91c2VyV2VhdGhlcic7XG5pbXBvcnQgc3RvcmUgZnJvbSAnLi9zdG9yZU1lJztcbmltcG9ydCByZW5kZXJXZWF0aGVyVmFsdWVzIGZyb20gJy4vcmVuZGVyV2VhdGhlcic7XG5pbXBvcnQgYmFja2dyb3VuZCBmcm9tICcuL2JhY2tncm91bmQnO1xuXG5leHBvcnQgZGVmYXVsdCBkcmF3TWFwO1xuXG5jb25zdCBNYXBib3hHZW9jb2RlciA9IHJlcXVpcmUoJ0BtYXBib3gvbWFwYm94LWdsLWdlb2NvZGVyJyk7XG5cbmZ1bmN0aW9uIGRyYXdNYXAobG9jYXRpb24pIHtcbiAgbWFwYm94Z2wuYWNjZXNzVG9rZW4gPSAncGsuZXlKMUlqb2lZV3hsYm10aFkyOXpiV2xqSWl3aVlTSTZJbU5yTkRka1pXMDRPREJ3Wm5nemJHdzVlWGt6YVhwMU1EY2lmUS5HTm9aOEtZRlJMd3BJeVdQdE8wTmVnJztcbiAgY29uc3QgbWFwID0gbmV3IG1hcGJveGdsLk1hcCh7XG4gICAgY29udGFpbmVyOiAnbWFwJyxcbiAgICBzdHlsZTogJ21hcGJveDovL3N0eWxlcy9tYXBib3gvc3RyZWV0cy12MTEnLFxuICAgIGNlbnRlcjogW2xvY2F0aW9uLmxvbiwgbG9jYXRpb24ubGF0XSwgLy8gc3RhcnRpbmcgcG9zaXRpb25cbiAgICB6b29tOiAxMCxcbiAgfSk7XG5cblxuICBjb25zdCBnZW9jb2RlciA9IG5ldyBNYXBib3hHZW9jb2Rlcih7XG4gICAgYWNjZXNzVG9rZW46IG1hcGJveGdsLmFjY2Vzc1Rva2VuLFxuICAgIG1hcGJveGdsLFxuICB9KTtcblxuICBnZW9jb2Rlci5vbigncmVzdWx0JywgKGUpID0+IHtcbiAgICBhc3luYyBmdW5jdGlvbiBjaGFuZ2VNYXAoKSB7XG4gICAgICBjb25zdCByZXN1bHRQcm9taXNlID0gYXdhaXQgd2VhdGhlcih7XG4gICAgICAgIGxhdGl0dWRlOiBlLnJlc3VsdC5jZW50ZXJbMV0sXG4gICAgICAgIGxvbmdpdHVkZTogZS5yZXN1bHQuY2VudGVyWzBdLFxuICAgICAgfSk7XG4gICAgICBzdG9yZS5zZXRXZWF0aGVyT2JqID0gcmVzdWx0UHJvbWlzZTtcbiAgICAgIHJlbmRlcldlYXRoZXJWYWx1ZXMoc3RvcmUpO1xuICAgICAgYmFja2dyb3VuZChzdG9yZS5jaXR5KTtcbiAgICB9XG4gICAgY2hhbmdlTWFwKCk7XG4gIH0pO1xuXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdnZW9jb2RlcicpLmFwcGVuZENoaWxkKGdlb2NvZGVyLm9uQWRkKG1hcCkpO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFKQTtBQVFBO0FBQ0E7QUFDQTtBQUZBO0FBS0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUZBO0FBQ0E7QUFGQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFSQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBUUE7QUFDQTtBQUVBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/modules/userGetMap.js\n");

/***/ }),

/***/ "./src/modules/userLocation.js":
/*!*************************************!*\
  !*** ./src/modules/userLocation.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _parsecoord__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parsecoord */ \"./src/modules/parsecoord.js\");\n/* eslint-disable no-undef */\n\n/* eslint-disable no-use-before-define */\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (getUserLocation);\n\nfunction getUserLocation() {\n  var USER_LOCATION_API_TOKEN = 'ab52fb375d582c';\n  return fetch(\"https://ipinfo.io/json?token=\".concat(USER_LOCATION_API_TOKEN)).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return Object(_parsecoord__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(data.loc);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy91c2VyTG9jYXRpb24uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy91c2VyTG9jYXRpb24uanM/MTU2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tdXNlLWJlZm9yZS1kZWZpbmUgKi9cbmltcG9ydCBwYXJzZVN0cmluZ1RvQ29vcmQgZnJvbSAnLi9wYXJzZWNvb3JkJztcblxuZXhwb3J0IGRlZmF1bHQgZ2V0VXNlckxvY2F0aW9uO1xuXG5mdW5jdGlvbiBnZXRVc2VyTG9jYXRpb24oKSB7XG4gIGNvbnN0IFVTRVJfTE9DQVRJT05fQVBJX1RPS0VOID0gJ2FiNTJmYjM3NWQ1ODJjJztcbiAgcmV0dXJuIGZldGNoKGBodHRwczovL2lwaW5mby5pby9qc29uP3Rva2VuPSR7VVNFUl9MT0NBVElPTl9BUElfVE9LRU59YClcbiAgICAudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLmpzb24oKSlcbiAgICAudGhlbigoZGF0YSkgPT4gcGFyc2VTdHJpbmdUb0Nvb3JkKGRhdGEubG9jKSk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/modules/userLocation.js\n");

/***/ }),

/***/ "./src/modules/userTime.js":
/*!*********************************!*\
  !*** ./src/modules/userTime.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return startTime; });\n/* harmony import */ var _changeLang__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./changeLang */ \"./src/modules/changeLang.js\");\n/* eslint-disable no-param-reassign */\n\n/* eslint-disable no-use-before-define */\n\nfunction startTime() {\n  var today = new Date();\n  var h = today.getHours();\n  var m = today.getMinutes();\n  var date = today.getDate();\n  var monthNum = today.getMonth();\n  var day = today.getDay();\n  h = checkTime(h);\n  m = checkTime(m);\n  document.querySelector('.what__today--day-time').innerHTML = \"\".concat(h, \":\").concat(m);\n  document.querySelector('.what__today--day-date').innerHTML = \"\".concat(_changeLang__WEBPACK_IMPORTED_MODULE_0__[\"default\"].en.days[day], \" \").concat(date, \" \").concat(_changeLang__WEBPACK_IMPORTED_MODULE_0__[\"default\"].en.months[monthNum]);\n  return setTimeout(startTime, 1000);\n}\n\nfunction checkTime(interval) {\n  if (interval < 10) {\n    interval = \"0\".concat(interval);\n  }\n\n  return interval;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy91c2VyVGltZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9tb2R1bGVzL3VzZXJUaW1lLmpzPzA2OWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tcGFyYW0tcmVhc3NpZ24gKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVzZS1iZWZvcmUtZGVmaW5lICovXG5pbXBvcnQgbGFuZyBmcm9tICcuL2NoYW5nZUxhbmcnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzdGFydFRpbWUoKSB7XG4gIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKTtcbiAgbGV0IGggPSB0b2RheS5nZXRIb3VycygpO1xuICBsZXQgbSA9IHRvZGF5LmdldE1pbnV0ZXMoKTtcbiAgY29uc3QgZGF0ZSA9IHRvZGF5LmdldERhdGUoKTtcbiAgY29uc3QgbW9udGhOdW0gPSB0b2RheS5nZXRNb250aCgpO1xuICBjb25zdCBkYXkgPSB0b2RheS5nZXREYXkoKTtcbiAgaCA9IGNoZWNrVGltZShoKTtcbiAgbSA9IGNoZWNrVGltZShtKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLndoYXRfX3RvZGF5LS1kYXktdGltZScpLmlubmVySFRNTCA9IGAke2h9OiR7bX1gO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2hhdF9fdG9kYXktLWRheS1kYXRlJykuaW5uZXJIVE1MID0gYCR7bGFuZy5lbi5kYXlzW2RheV19ICR7ZGF0ZX0gJHtsYW5nLmVuLm1vbnRoc1ttb250aE51bV19YDtcbiAgcmV0dXJuIHNldFRpbWVvdXQoc3RhcnRUaW1lLCAxMDAwKTtcbn1cblxuZnVuY3Rpb24gY2hlY2tUaW1lKGludGVydmFsKSB7XG4gIGlmIChpbnRlcnZhbCA8IDEwKSB7IGludGVydmFsID0gYDAke2ludGVydmFsfWA7IH1cbiAgcmV0dXJuIGludGVydmFsO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/modules/userTime.js\n");

/***/ }),

/***/ "./src/modules/userWeather.js":
/*!************************************!*\
  !*** ./src/modules/userWeather.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* eslint-disable no-undef */\n\n/* eslint-disable no-use-before-define */\n/* harmony default export */ __webpack_exports__[\"default\"] = (userWeather);\n\nfunction userWeather(curLocation) {\n  var WEATHER_API_TOKEN = '835b3e05313f23d5e8c08b3407ca00be';\n  return fetch(\"http://api.openweathermap.org/data/2.5/forecast?lat=\".concat(curLocation.latitude, \"&lon=\").concat(curLocation.longitude, \"&units=metric&APPID=\").concat(WEATHER_API_TOKEN)).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data;\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy91c2VyV2VhdGhlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9tb2R1bGVzL3VzZXJXZWF0aGVyLmpzP2JmMzgiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tdW5kZWYgKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVzZS1iZWZvcmUtZGVmaW5lICovXG5leHBvcnQgZGVmYXVsdCB1c2VyV2VhdGhlcjtcblxuZnVuY3Rpb24gdXNlcldlYXRoZXIoY3VyTG9jYXRpb24pIHtcbiAgY29uc3QgV0VBVEhFUl9BUElfVE9LRU4gPSAnODM1YjNlMDUzMTNmMjNkNWU4YzA4YjM0MDdjYTAwYmUnO1xuICByZXR1cm4gZmV0Y2goYGh0dHA6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L2ZvcmVjYXN0P2xhdD0ke2N1ckxvY2F0aW9uLmxhdGl0dWRlfSZsb249JHtjdXJMb2NhdGlvbi5sb25naXR1ZGV9JnVuaXRzPW1ldHJpYyZBUFBJRD0ke1dFQVRIRVJfQVBJX1RPS0VOfWApXG4gICAgLnRoZW4oKHJlc3BvbnNlKSA9PiByZXNwb25zZS5qc29uKCkpXG4gICAgLnRoZW4oKGRhdGEpID0+IGRhdGEpO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/modules/userWeather.js\n");

/***/ }),

/***/ "./src/scripts.js":
/*!************************!*\
  !*** ./src/scripts.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_userLocation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/userLocation */ \"./src/modules/userLocation.js\");\n/* harmony import */ var _modules_userWeather__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/userWeather */ \"./src/modules/userWeather.js\");\n/* harmony import */ var _modules_storeMe__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/storeMe */ \"./src/modules/storeMe.js\");\n/* harmony import */ var _modules_renderWeather__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/renderWeather */ \"./src/modules/renderWeather.js\");\n/* harmony import */ var _modules_userGetMap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/userGetMap */ \"./src/modules/userGetMap.js\");\n/* harmony import */ var _modules_userTime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/userTime */ \"./src/modules/userTime.js\");\n/* harmony import */ var _modules_background__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/background */ \"./src/modules/background.js\");\n/* eslint-disable no-shadow */\n\n/* eslint-disable no-param-reassign */\n\n\n\n\n\n\n\n\n__webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n\nfunction extracting(store) {\n  var curLocation, resultPromise;\n  return regeneratorRuntime.async(function extracting$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return regeneratorRuntime.awrap(Object(_modules_userLocation__WEBPACK_IMPORTED_MODULE_0__[\"default\"])());\n\n        case 2:\n          curLocation = _context.sent;\n          _context.next = 5;\n          return regeneratorRuntime.awrap(Object(_modules_userWeather__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(curLocation));\n\n        case 5:\n          resultPromise = _context.sent;\n          store.setWeatherObj = resultPromise;\n          Object(_modules_userTime__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n          Object(_modules_userGetMap__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(store.location);\n          Object(_modules_renderWeather__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(store);\n          Object(_modules_background__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(store.city);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\n\nextracting(_modules_storeMe__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9zY3JpcHRzLmpzP2MwYTAiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tc2hhZG93ICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1wYXJhbS1yZWFzc2lnbiAqL1xuaW1wb3J0IGxvY2F0aW9uIGZyb20gJy4vbW9kdWxlcy91c2VyTG9jYXRpb24nO1xuaW1wb3J0IHdlYXRoZXIgZnJvbSAnLi9tb2R1bGVzL3VzZXJXZWF0aGVyJztcbmltcG9ydCBzdG9yZSBmcm9tICcuL21vZHVsZXMvc3RvcmVNZSc7XG5pbXBvcnQgcmVuZGVyV2VhdGhlclZhbHVlcyBmcm9tICcuL21vZHVsZXMvcmVuZGVyV2VhdGhlcic7XG5pbXBvcnQgZHJhd01hcCBmcm9tICcuL21vZHVsZXMvdXNlckdldE1hcCc7XG5pbXBvcnQgdGltZSBmcm9tICcuL21vZHVsZXMvdXNlclRpbWUnO1xuaW1wb3J0IGJhY2tncm91bmQgZnJvbSAnLi9tb2R1bGVzL2JhY2tncm91bmQnO1xuXG5yZXF1aXJlKCdyZWdlbmVyYXRvci1ydW50aW1lJyk7XG5cbmFzeW5jIGZ1bmN0aW9uIGV4dHJhY3Rpbmcoc3RvcmUpIHtcbiAgY29uc3QgY3VyTG9jYXRpb24gPSBhd2FpdCBsb2NhdGlvbigpO1xuICBjb25zdCByZXN1bHRQcm9taXNlID0gYXdhaXQgd2VhdGhlcihjdXJMb2NhdGlvbik7XG4gIHN0b3JlLnNldFdlYXRoZXJPYmogPSByZXN1bHRQcm9taXNlO1xuICB0aW1lKCk7XG4gIGRyYXdNYXAoc3RvcmUubG9jYXRpb24pO1xuICByZW5kZXJXZWF0aGVyVmFsdWVzKHN0b3JlKTtcbiAgYmFja2dyb3VuZChzdG9yZS5jaXR5KTtcbn1cbmV4dHJhY3Rpbmcoc3RvcmUpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUNBO0FBREE7QUFBQTtBQUNBO0FBREE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVJBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFRQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts.js\n");

/***/ })

/******/ });